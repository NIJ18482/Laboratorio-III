

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 13 08:19:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0008                     	;# 
   463  0009                     	;# 
   464  000A                     	;# 
   465  000B                     	;# 
   466  000C                     	;# 
   467  000D                     	;# 
   468  000E                     	;# 
   469  000E                     	;# 
   470  000F                     	;# 
   471  0010                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0014                     	;# 
   476  0015                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  001D                     	;# 
   487  001E                     	;# 
   488  001F                     	;# 
   489  0081                     	;# 
   490  0085                     	;# 
   491  0086                     	;# 
   492  0087                     	;# 
   493  0088                     	;# 
   494  0089                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  008F                     	;# 
   499  0090                     	;# 
   500  0091                     	;# 
   501  0092                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0094                     	;# 
   506  0095                     	;# 
   507  0096                     	;# 
   508  0097                     	;# 
   509  0098                     	;# 
   510  0099                     	;# 
   511  009A                     	;# 
   512  009B                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  0105                     	;# 
   518  0107                     	;# 
   519  0108                     	;# 
   520  0109                     	;# 
   521  010C                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  010F                     	;# 
   526  0185                     	;# 
   527  0187                     	;# 
   528  0188                     	;# 
   529  0189                     	;# 
   530  018C                     	;# 
   531  018D                     	;# 
   532  001A                     _RCREG	set	26
   533  0019                     _TXREG	set	25
   534  0018                     _RCSTAbits	set	24
   535  0009                     _PORTEbits	set	9
   536  0009                     _PORTE	set	9
   537  0008                     _PORTD	set	8
   538  0007                     _PORTC	set	7
   539  0006                     _PORTB	set	6
   540  001E                     _ADRESH	set	30
   541  0001                     _TMR0	set	1
   542  001F                     _ADCON0bits	set	31
   543  000B                     _INTCONbits	set	11
   544  0099                     _SPBRG	set	153
   545  0098                     _TXSTAbits	set	152
   546  0087                     _TRISCbits	set	135
   547  0089                     _TRISEbits	set	137
   548  009F                     _ADCON1bits	set	159
   549  0081                     _OPTION_REGbits	set	129
   550  0089                     _TRISE	set	137
   551  0088                     _TRISD	set	136
   552  0087                     _TRISC	set	135
   553  0086                     _TRISB	set	134
   554  0085                     _TRISA	set	133
   555  0189                     _ANSELH	set	393
   556  0188                     _ANSEL	set	392
   557                           
   558                           	psect	strings
   559  0500                     __pstrings:	
   560  0500                     stringtab:	
   561  0500                     __stringtab:	
   562  0500                     stringcode:	
   563                           ;	String table - string pointers are 1 byte each
   564                           
   565  0500                     stringdir:	
   566  0500  3005               	movlw	high stringdir
   567  0501  008A               	movwf	10
   568  0502  0804               	movf	4,w
   569  0503  0A84               	incf	4,f
   570  0504  0782               	addwf	2,f
   571  0505                     __stringbase:	
   572  0505  3400               	retlw	0
   573  0506                     __end_of__stringtab:	
   574  0506                     STR_4:	
   575  0506  342D               	retlw	45	;'-'
   576  0507  344D               	retlw	77	;'M'
   577  0508  3450               	retlw	80	;'P'
   578  0509  344C               	retlw	76	;'L'
   579  050A  3441               	retlw	65	;'A'
   580  050B  3442               	retlw	66	;'B'
   581  050C  3458               	retlw	88	;'X'
   582  050D  342D               	retlw	45	;'-'
   583  050E  3458               	retlw	88	;'X'
   584  050F  3443               	retlw	67	;'C'
   585  0510  3438               	retlw	56	;'8'
   586  0511  342D               	retlw	45	;'-'
   587  0512  3450               	retlw	80	;'P'
   588  0513  3449               	retlw	73	;'I'
   589  0514  3443               	retlw	67	;'C'
   590  0515  342D               	retlw	45	;'-'
   591  0516  3400               	retlw	0
   592  0517                     STR_6:	
   593  0517  347C               	retlw	124	;'|'
   594  0518  3430               	retlw	48	;'0'
   595  0519  342E               	retlw	46	;'.'
   596  051A  3430               	retlw	48	;'0'
   597  051B  3430               	retlw	48	;'0'
   598  051C  3456               	retlw	86	;'V'
   599  051D  347C               	retlw	124	;'|'
   600  051E  3430               	retlw	48	;'0'
   601  051F  342E               	retlw	46	;'.'
   602  0520  3430               	retlw	48	;'0'
   603  0521  3430               	retlw	48	;'0'
   604  0522  3456               	retlw	86	;'V'
   605  0523  347C               	retlw	124	;'|'
   606  0524  3430               	retlw	48	;'0'
   607  0525  3430               	retlw	48	;'0'
   608  0526  3430               	retlw	48	;'0'
   609  0527  3400               	retlw	0
   610  0528                     STR_1:	
   611  0528  344C               	retlw	76	;'L'
   612  0529  3441               	retlw	65	;'A'
   613  052A  3442               	retlw	66	;'B'
   614  052B  344F               	retlw	79	;'O'
   615  052C  3452               	retlw	82	;'R'
   616  052D  3441               	retlw	65	;'A'
   617  052E  3454               	retlw	84	;'T'
   618  052F  344F               	retlw	79	;'O'
   619  0530  3452               	retlw	82	;'R'
   620  0531  3449               	retlw	73	;'I'
   621  0532  344F               	retlw	79	;'O'
   622  0533  3420               	retlw	32	;' '
   623  0534  344E               	retlw	78	;'N'
   624  0535  346F               	retlw	111	;'o'
   625  0536  342E               	retlw	46	;'.'
   626  0537  3433               	retlw	51	;'3'
   627  0538  3400               	retlw	0
   628  0539                     STR_3:	
   629  0539  344D               	retlw	77	;'M'
   630  053A  3441               	retlw	65	;'A'
   631  053B  344E               	retlw	78	;'N'
   632  053C  3445               	retlw	69	;'E'
   633  053D  344A               	retlw	74	;'J'
   634  053E  344F               	retlw	79	;'O'
   635  053F  3420               	retlw	32	;' '
   636  0540  3450               	retlw	80	;'P'
   637  0541  3441               	retlw	65	;'A'
   638  0542  344E               	retlw	78	;'N'
   639  0543  3445               	retlw	69	;'E'
   640  0544  344C               	retlw	76	;'L'
   641  0545  3420               	retlw	32	;' '
   642  0546  344C               	retlw	76	;'L'
   643  0547  3443               	retlw	67	;'C'
   644  0548  3444               	retlw	68	;'D'
   645  0549  3400               	retlw	0
   646  054A                     STR_2:	
   647  054A  344C               	retlw	76	;'L'
   648  054B  3475               	retlw	117	;'u'
   649  054C  3469               	retlw	105	;'i'
   650  054D  3473               	retlw	115	;'s'
   651  054E  3420               	retlw	32	;' '
   652  054F  344E               	retlw	78	;'N'
   653  0550  342E               	retlw	46	;'.'
   654  0551  3420               	retlw	32	;' '
   655  0552  3431               	retlw	49	;'1'
   656  0553  3438               	retlw	56	;'8'
   657  0554  3434               	retlw	52	;'4'
   658  0555  3438               	retlw	56	;'8'
   659  0556  3432               	retlw	50	;'2'
   660  0557  3455               	retlw	85	;'U'
   661  0558  3456               	retlw	86	;'V'
   662  0559  3447               	retlw	71	;'G'
   663  055A  3400               	retlw	0
   664  055B                     STR_5:	
   665  055B  347C               	retlw	124	;'|'
   666  055C  3453               	retlw	83	;'S'
   667  055D  3445               	retlw	69	;'E'
   668  055E  344E               	retlw	78	;'N'
   669  055F  342E               	retlw	46	;'.'
   670  0560  3432               	retlw	50	;'2'
   671  0561  347C               	retlw	124	;'|'
   672  0562  3453               	retlw	83	;'S'
   673  0563  3445               	retlw	69	;'E'
   674  0564  344E               	retlw	78	;'N'
   675  0565  342E               	retlw	46	;'.'
   676  0566  3431               	retlw	49	;'1'
   677  0567  347C               	retlw	124	;'|'
   678  0568  3420               	retlw	32	;' '
   679  0569  3443               	retlw	67	;'C'
   680  056A  3454               	retlw	84	;'T'
   681  056B  3400               	retlw	0
   682  056C                     STR_8:	
   683  056C  3431               	retlw	49	;'1'
   684  056D  3400               	retlw	0
   685  056E                     STR_9:	
   686  056E  3432               	retlw	50	;'2'
   687  056F  3400               	retlw	0
   688  0570                     STR_11:	
   689  0570  3434               	retlw	52	;'4'
   690  0571  3400               	retlw	0
   691  0572                     STR_12:	
   692  0572  3435               	retlw	53	;'5'
   693  0573  3400               	retlw	0
   694  0574                     STR_13:	
   695  0574  3436               	retlw	54	;'6'
   696  0575  3400               	retlw	0
   697  0576                     STR_14:	
   698  0576  3437               	retlw	55	;'7'
   699  0577  3400               	retlw	0
   700  0578                     STR_15:	
   701  0578  3438               	retlw	56	;'8'
   702  0579  3400               	retlw	0
   703  057A                     STR_16:	
   704  057A  3439               	retlw	57	;'9'
   705  057B  3400               	retlw	0
   706  0526                     
   707                           ; #config settings
   708  0000                     
   709                           	psect	cinit
   710  000F                     start_initialization:	
   711  000F                     __initialization:	
   712                           
   713                           ; Clear objects allocated to BANK0
   714  000F  1283               	bcf	3,5	;RP0=0, select bank0
   715  0010  1303               	bcf	3,6	;RP1=0, select bank0
   716  0011  01C1               	clrf	__pbssBANK0& (0+127)
   717  0012  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   718  0013  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   719  0014  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   720  0015  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   721  0016  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   722  0017  01C7               	clrf	(__pbssBANK0+6)& (0+127)
   723  0018  01C8               	clrf	(__pbssBANK0+7)& (0+127)
   724  0019  01C9               	clrf	(__pbssBANK0+8)& (0+127)
   725  001A  01CA               	clrf	(__pbssBANK0+9)& (0+127)
   726  001B  01CB               	clrf	(__pbssBANK0+10)& (0+127)
   727  001C  01CC               	clrf	(__pbssBANK0+11)& (0+127)
   728  001D                     end_of_initialization:	
   729                           ;End of C runtime variable initialization code
   730                           
   731  001D                     __end_of__initialization:	
   732  001D  0183               	clrf	3
   733  001E  120A  118A  2BAB   	ljmp	_main	;jump to C main() function
   734                           
   735                           	psect	bssBANK0
   736  0041                     __pbssBANK0:	
   737  0041                     VAL@F1517:	
   738  0041                     	ds	6
   739  0047                     _sen:	
   740  0047                     	ds	1
   741  0048                     _sensor:	
   742  0048                     	ds	1
   743  0049                     _ADCAN1:	
   744  0049                     	ds	1
   745  004A                     _ADCAN0:	
   746  004A                     	ds	1
   747  004B                     _eADC:	
   748  004B                     	ds	1
   749  004C                     _cambiante:	
   750  004C                     	ds	1
   751                           
   752                           	psect	cstackCOMMON
   753  0070                     __pcstackCOMMON:	
   754  0070                     ?_setup:	
   755  0070                     ?_INIT_LCD:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_LCD_CLEAR:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_LCD_RH:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_delay_ms:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_CONFIG_ADC:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_LCD_CONTROL:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_LCD_PULSE:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_isr:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_isr:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_main:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_delay_us:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_LCD_DATO:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_LCD_PRINT:	
   792                           ; 1 bytes @ 0x0
   793                           
   794                           
   795                           ; 1 bytes @ 0x0
   796  0070                     	ds	3
   797  0073                     ??_setup:	
   798  0073                     ??_delay_ms:	
   799                           ; 1 bytes @ 0x3
   800                           
   801  0073                     ?_CONFIG_USART:	
   802                           ; 1 bytes @ 0x3
   803                           
   804  0073                     ??_CONFIG_ADC:	
   805                           ; 1 bytes @ 0x3
   806                           
   807  0073                     ??_delay_us:	
   808                           ; 1 bytes @ 0x3
   809                           
   810  0073                     ?___awmod:	
   811                           ; 1 bytes @ 0x3
   812                           
   813  0073                     ___awmod@divisor:	
   814                           ; 2 bytes @ 0x3
   815                           
   816  0073                     CONFIG_USART@BAUD:	
   817                           ; 2 bytes @ 0x3
   818                           
   819                           
   820                           ; 4 bytes @ 0x3
   821  0073                     	ds	1
   822  0074                     delay_ms@dms:	
   823  0074                     delay_us@ams:	
   824                           ; 1 bytes @ 0x4
   825                           
   826                           
   827                           ; 1 bytes @ 0x4
   828  0074                     	ds	1
   829  0075                     delay_ms@i:	
   830  0075                     delay_us@j:	
   831                           ; 2 bytes @ 0x5
   832                           
   833  0075                     ___awmod@dividend:	
   834                           ; 2 bytes @ 0x5
   835                           
   836                           
   837                           ; 2 bytes @ 0x5
   838  0075                     	ds	2
   839  0077                     ??_CONFIG_USART:	
   840  0077                     ??_LCD_PULSE:	
   841                           ; 1 bytes @ 0x7
   842                           
   843  0077                     ??_LCD_DATO:	
   844                           ; 1 bytes @ 0x7
   845                           
   846  0077                     ??___awmod:	
   847                           ; 1 bytes @ 0x7
   848                           
   849  0077                     LCD_DATO@comando:	
   850                           ; 1 bytes @ 0x7
   851                           
   852  0077                     delay_ms@j:	
   853                           ; 1 bytes @ 0x7
   854                           
   855                           
   856                           ; 2 bytes @ 0x7
   857  0077                     	ds	1
   858  0078                     ??_LCD_PRINT:	
   859  0078                     ___awmod@counter:	
   860                           ; 1 bytes @ 0x8
   861                           
   862                           
   863                           ; 1 bytes @ 0x8
   864  0078                     	ds	1
   865  0079                     ??_LCD_CONTROL:	
   866  0079                     LCD_CONTROL@dato:	
   867                           ; 1 bytes @ 0x9
   868                           
   869  0079                     LCD_PRINT@data:	
   870                           ; 1 bytes @ 0x9
   871                           
   872  0079                     ___awmod@sign:	
   873                           ; 1 bytes @ 0x9
   874                           
   875                           
   876                           ; 1 bytes @ 0x9
   877  0079                     	ds	1
   878  007A                     ??_INIT_LCD:	
   879  007A                     ??_LCD_CLEAR:	
   880                           ; 1 bytes @ 0xA
   881                           
   882  007A                     ??_LCD_RH:	
   883                           ; 1 bytes @ 0xA
   884                           
   885  007A                     ??_LCD_PRINT_WP:	
   886                           ; 1 bytes @ 0xA
   887                           
   888  007A                     ??___awdiv:	
   889                           ; 1 bytes @ 0xA
   890                           
   891                           
   892                           ; 1 bytes @ 0xA
   893  007A                     	ds	1
   894                           
   895                           	psect	cstackBANK0
   896  0020                     __pcstackBANK0:	
   897  0020                     ?_LCD_PRINT_WP:	
   898  0020                     ?___awdiv:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0020                     LCD_PRINT_WP@x:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0020                     ___awdiv@divisor:	
   905                           ; 2 bytes @ 0x0
   906                           
   907                           
   908                           ; 2 bytes @ 0x0
   909  0020                     	ds	2
   910  0022                     LCD_PRINT_WP@y:	
   911  0022                     ___awdiv@dividend:	
   912                           ; 2 bytes @ 0x2
   913                           
   914                           
   915                           ; 2 bytes @ 0x2
   916  0022                     	ds	2
   917  0024                     LCD_PRINT_WP@frase:	
   918  0024                     ___awdiv@counter:	
   919                           ; 1 bytes @ 0x4
   920                           
   921                           
   922                           ; 1 bytes @ 0x4
   923  0024                     	ds	1
   924  0025                     LCD_PRINT_WP@location:	
   925  0025                     ___awdiv@sign:	
   926                           ; 1 bytes @ 0x5
   927                           
   928                           
   929                           ; 1 bytes @ 0x5
   930  0025                     	ds	1
   931  0026                     ___awdiv@quotient:	
   932                           
   933                           ; 2 bytes @ 0x6
   934  0026                     	ds	2
   935  0028                     ?_VAL:	
   936  0028                     VAL@column:	
   937                           ; 1 bytes @ 0x8
   938                           
   939                           
   940                           ; 1 bytes @ 0x8
   941  0028                     	ds	1
   942  0029                     ??_VAL:	
   943                           
   944                           ; 1 bytes @ 0x9
   945  0029                     	ds	5
   946  002E                     VAL@unidades:	
   947                           
   948                           ; 1 bytes @ 0xE
   949  002E                     	ds	1
   950  002F                     VAL@decimas:	
   951                           
   952                           ; 1 bytes @ 0xF
   953  002F                     	ds	1
   954  0030                     VAL@centesimas:	
   955                           
   956                           ; 1 bytes @ 0x10
   957  0030                     	ds	1
   958  0031                     VAL@numero:	
   959                           
   960                           ; 6 bytes @ 0x11
   961  0031                     	ds	6
   962  0037                     _VAL$1117:	
   963                           
   964                           ; 2 bytes @ 0x17
   965  0037                     	ds	2
   966  0039                     VAL@i:	
   967                           
   968                           ; 2 bytes @ 0x19
   969  0039                     	ds	2
   970  003B                     VAL@i_376:	
   971                           
   972                           ; 2 bytes @ 0x1B
   973  003B                     	ds	2
   974  003D                     VAL@result:	
   975                           
   976                           ; 1 bytes @ 0x1D
   977  003D                     	ds	1
   978  003E                     VAL@valor:	
   979                           
   980                           ; 1 bytes @ 0x1E
   981  003E                     	ds	1
   982  003F                     VAL@coordenada:	
   983                           
   984                           ; 1 bytes @ 0x1F
   985  003F                     	ds	1
   986  0040                     ??_main:	
   987                           
   988                           ; 1 bytes @ 0x20
   989  0040                     	ds	1
   990                           
   991                           	psect	maintext
   992  03AB                     __pmaintext:	
   993 ;;
   994 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   995 ;;
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 45 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : B00/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0
  1014 ;;      Temps:          0       1       0       0       0
  1015 ;;      Totals:         0       1       0       0       0
  1016 ;;Total ram usage:        1 bytes
  1017 ;; Hardware stack levels required when called:    7
  1018 ;; This function calls:
  1019 ;;		_CONFIG_ADC
  1020 ;;		_CONFIG_USART
  1021 ;;		_INIT_LCD
  1022 ;;		_LCD_CLEAR
  1023 ;;		_LCD_PRINT_WP
  1024 ;;		_LCD_RH
  1025 ;;		_VAL
  1026 ;;		_delay_ms
  1027 ;;		_setup
  1028 ;; This function is called by:
  1029 ;;		Startup code after reset
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _main
  1035  03AB                     _main:	
  1036  03AB                     l1669:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1039                           
  1040                           
  1041                           ;main.c: 46:     setup();
  1042  03AB  120A  118A  26C7  120A  118A  	fcall	_setup
  1043  03B0                     l1671:	
  1044                           
  1045                           ;main.c: 47:     INIT_LCD();
  1046  03B0  120A  118A  269E  120A  118A  	fcall	_INIT_LCD
  1047  03B5                     l1673:	
  1048                           
  1049                           ;main.c: 48:     LCD_CLEAR();
  1050  03B5  120A  118A  27A8  120A  118A  	fcall	_LCD_CLEAR
  1051  03BA                     l1675:	
  1052                           
  1053                           ;main.c: 49:     LCD_RH();
  1054  03BA  120A  118A  27A1  120A  118A  	fcall	_LCD_RH
  1055  03BF                     l1677:	
  1056                           
  1057                           ;main.c: 50:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
  1058  03BF  3000               	movlw	0
  1059  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1060  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1061  03C2  00A0               	movwf	LCD_PRINT_WP@x
  1062  03C3  00A1               	movwf	LCD_PRINT_WP@x+1
  1063  03C4  3001               	movlw	1
  1064  03C5  00A2               	movwf	LCD_PRINT_WP@y
  1065  03C6  3000               	movlw	0
  1066  03C7  00A3               	movwf	LCD_PRINT_WP@y+1
  1067  03C8  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1068  03C9  00C0               	movwf	??_main
  1069  03CA  0840               	movf	??_main,w
  1070  03CB  00A4               	movwf	LCD_PRINT_WP@frase
  1071  03CC  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1072  03D1                     l1679:	
  1073                           
  1074                           ;main.c: 51:     delay_ms(150);
  1075  03D1  3096               	movlw	150
  1076  03D2  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1077  03D7                     l1681:	
  1078                           
  1079                           ;main.c: 52:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
  1080  03D7  3000               	movlw	0
  1081  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1082  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1083  03DA  00A0               	movwf	LCD_PRINT_WP@x
  1084  03DB  00A1               	movwf	LCD_PRINT_WP@x+1
  1085  03DC  3002               	movlw	2
  1086  03DD  00A2               	movwf	LCD_PRINT_WP@y
  1087  03DE  3000               	movlw	0
  1088  03DF  00A3               	movwf	LCD_PRINT_WP@y+1
  1089  03E0  3045               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1090  03E1  00C0               	movwf	??_main
  1091  03E2  0840               	movf	??_main,w
  1092  03E3  00A4               	movwf	LCD_PRINT_WP@frase
  1093  03E4  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1094  03E9                     l1683:	
  1095                           
  1096                           ;main.c: 53:     delay_ms(150);
  1097  03E9  3096               	movlw	150
  1098  03EA  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1099  03EF                     l1685:	
  1100                           
  1101                           ;main.c: 54:     LCD_CLEAR();
  1102  03EF  120A  118A  27A8  120A  118A  	fcall	_LCD_CLEAR
  1103  03F4                     l1687:	
  1104                           
  1105                           ;main.c: 55:     LCD_RH();
  1106  03F4  120A  118A  27A1  120A  118A  	fcall	_LCD_RH
  1107  03F9                     l1689:	
  1108                           
  1109                           ;main.c: 56:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
  1110  03F9  3000               	movlw	0
  1111  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1112  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1113  03FC  00A0               	movwf	LCD_PRINT_WP@x
  1114  03FD  00A1               	movwf	LCD_PRINT_WP@x+1
  1115  03FE  3001               	movlw	1
  1116  03FF  00A2               	movwf	LCD_PRINT_WP@y
  1117  0400  3000               	movlw	0
  1118  0401  00A3               	movwf	LCD_PRINT_WP@y+1
  1119  0402  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1120  0403  00C0               	movwf	??_main
  1121  0404  0840               	movf	??_main,w
  1122  0405  00A4               	movwf	LCD_PRINT_WP@frase
  1123  0406  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1124  040B                     l1691:	
  1125                           
  1126                           ;main.c: 57:     delay_ms(150);
  1127  040B  3096               	movlw	150
  1128  040C  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1129  0411                     l1693:	
  1130                           
  1131                           ;main.c: 58:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
  1132  0411  3000               	movlw	0
  1133  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0414  00A0               	movwf	LCD_PRINT_WP@x
  1136  0415  00A1               	movwf	LCD_PRINT_WP@x+1
  1137  0416  3002               	movlw	2
  1138  0417  00A2               	movwf	LCD_PRINT_WP@y
  1139  0418  3000               	movlw	0
  1140  0419  00A3               	movwf	LCD_PRINT_WP@y+1
  1141  041A  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1142  041B  00C0               	movwf	??_main
  1143  041C  0840               	movf	??_main,w
  1144  041D  00A4               	movwf	LCD_PRINT_WP@frase
  1145  041E  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1146  0423                     l1695:	
  1147                           
  1148                           ;main.c: 59:     delay_ms(150);
  1149  0423  3096               	movlw	150
  1150  0424  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1151  0429                     l1697:	
  1152                           
  1153                           ;main.c: 60:     LCD_CLEAR();
  1154  0429  120A  118A  27A8  120A  118A  	fcall	_LCD_CLEAR
  1155  042E                     l1699:	
  1156                           
  1157                           ;main.c: 61:     LCD_RH();
  1158  042E  120A  118A  27A1  120A  118A  	fcall	_LCD_RH
  1159  0433                     l1701:	
  1160                           
  1161                           ;main.c: 62:     LCD_PRINT_WP(0,1,"|SEN.2|SEN.1| CT");
  1162  0433  3000               	movlw	0
  1163  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0436  00A0               	movwf	LCD_PRINT_WP@x
  1166  0437  00A1               	movwf	LCD_PRINT_WP@x+1
  1167  0438  3001               	movlw	1
  1168  0439  00A2               	movwf	LCD_PRINT_WP@y
  1169  043A  3000               	movlw	0
  1170  043B  00A3               	movwf	LCD_PRINT_WP@y+1
  1171  043C  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1172  043D  00C0               	movwf	??_main
  1173  043E  0840               	movf	??_main,w
  1174  043F  00A4               	movwf	LCD_PRINT_WP@frase
  1175  0440  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1176  0445                     l1703:	
  1177                           
  1178                           ;main.c: 63:     LCD_PRINT_WP(0,2,"|0.00V|0.00V|000");
  1179  0445  3000               	movlw	0
  1180  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0448  00A0               	movwf	LCD_PRINT_WP@x
  1183  0449  00A1               	movwf	LCD_PRINT_WP@x+1
  1184  044A  3002               	movlw	2
  1185  044B  00A2               	movwf	LCD_PRINT_WP@y
  1186  044C  3000               	movlw	0
  1187  044D  00A3               	movwf	LCD_PRINT_WP@y+1
  1188  044E  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1189  044F  00C0               	movwf	??_main
  1190  0450  0840               	movf	??_main,w
  1191  0451  00A4               	movwf	LCD_PRINT_WP@frase
  1192  0452  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1193  0457                     l1705:	
  1194                           
  1195                           ;main.c: 64:     CONFIG_USART(9600);
  1196  0457  3000               	movlw	0
  1197  0458  00F6               	movwf	CONFIG_USART@BAUD+3
  1198  0459  3000               	movlw	0
  1199  045A  00F5               	movwf	CONFIG_USART@BAUD+2
  1200  045B  3025               	movlw	37
  1201  045C  00F4               	movwf	CONFIG_USART@BAUD+1
  1202  045D  3080               	movlw	128
  1203  045E  00F3               	movwf	CONFIG_USART@BAUD
  1204  045F  120A  118A  2745  120A  118A  	fcall	_CONFIG_USART
  1205  0464                     l1707:	
  1206                           
  1207                           ;main.c: 65:     CONFIG_ADC();
  1208  0464  120A  118A  2792  120A  118A  	fcall	_CONFIG_ADC
  1209  0469                     l1709:	
  1210                           
  1211                           ;main.c: 68:         if (eADC == 1){
  1212  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1213  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1214  046B  034B               	decf	_eADC,w
  1215  046C  1D03               	btfss	3,2
  1216  046D  2C6F               	goto	u1301
  1217  046E  2C70               	goto	u1300
  1218  046F                     u1301:	
  1219  046F  2C84               	goto	l1723
  1220  0470                     u1300:	
  1221  0470                     l1711:	
  1222                           
  1223                           ;main.c: 69:             eADC = 0;
  1224  0470  01CB               	clrf	_eADC
  1225  0471                     l1713:	
  1226                           
  1227                           ;main.c: 70:             if (cambiante == 0){ADCAN0 = ADRESH;}
  1228  0471  084C               	movf	_cambiante,w
  1229  0472  1D03               	btfss	3,2
  1230  0473  2C75               	goto	u1311
  1231  0474  2C76               	goto	u1310
  1232  0475                     u1311:	
  1233  0475  2C7A               	goto	l1717
  1234  0476                     u1310:	
  1235  0476                     l1715:	
  1236  0476  081E               	movf	30,w	;volatile
  1237  0477  00C0               	movwf	??_main
  1238  0478  0840               	movf	??_main,w
  1239  0479  00CA               	movwf	_ADCAN0
  1240  047A                     l1717:	
  1241                           
  1242                           ;main.c: 71:             if (cambiante == 1){ADCAN1 = ADRESH;}
  1243  047A  034C               	decf	_cambiante,w
  1244  047B  1D03               	btfss	3,2
  1245  047C  2C7E               	goto	u1321
  1246  047D  2C7F               	goto	u1320
  1247  047E                     u1321:	
  1248  047E  2C83               	goto	l1721
  1249  047F                     u1320:	
  1250  047F                     l1719:	
  1251  047F  081E               	movf	30,w	;volatile
  1252  0480  00C0               	movwf	??_main
  1253  0481  0840               	movf	??_main,w
  1254  0482  00C9               	movwf	_ADCAN1
  1255  0483                     l1721:	
  1256                           
  1257                           ;main.c: 72:             ADCON0bits.GO_DONE = 1;}
  1258  0483  149F               	bsf	31,1	;volatile
  1259  0484                     l1723:	
  1260                           
  1261                           ;main.c: 73:         if (sensor == 20){
  1262  0484  3014               	movlw	20
  1263  0485  0648               	xorwf	_sensor,w
  1264  0486  1D03               	btfss	3,2
  1265  0487  2C89               	goto	u1331
  1266  0488  2C8A               	goto	u1330
  1267  0489                     u1331:	
  1268  0489  2C69               	goto	l1709
  1269  048A                     u1330:	
  1270  048A                     l1725:	
  1271                           
  1272                           ;main.c: 74:             if (sen == 0){VAL(ADCAN0,0);}
  1273  048A  0847               	movf	_sen,w
  1274  048B  1D03               	btfss	3,2
  1275  048C  2C8E               	goto	u1341
  1276  048D  2C8F               	goto	u1340
  1277  048E                     u1341:	
  1278  048E  2C96               	goto	l1729
  1279  048F                     u1340:	
  1280  048F                     l1727:	
  1281  048F  01A8               	clrf	VAL@column
  1282  0490  084A               	movf	_ADCAN0,w
  1283  0491  120A  118A  2021  120A  118A  	fcall	_VAL
  1284  0496                     l1729:	
  1285                           
  1286                           ;main.c: 75:             if (sen == 1){VAL(ADCAN1,1);}
  1287  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0498  0347               	decf	_sen,w
  1290  0499  1D03               	btfss	3,2
  1291  049A  2C9C               	goto	u1351
  1292  049B  2C9D               	goto	u1350
  1293  049C                     u1351:	
  1294  049C  2CA5               	goto	l1733
  1295  049D                     u1350:	
  1296  049D                     l1731:	
  1297  049D  01A8               	clrf	VAL@column
  1298  049E  0AA8               	incf	VAL@column,f
  1299  049F  0849               	movf	_ADCAN1,w
  1300  04A0  120A  118A  2021  120A  118A  	fcall	_VAL
  1301  04A5                     l1733:	
  1302                           
  1303                           ;main.c: 76:             sen++;
  1304  04A5  3001               	movlw	1
  1305  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1306  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1307  04A8  00C0               	movwf	??_main
  1308  04A9  0840               	movf	??_main,w
  1309  04AA  07C7               	addwf	_sen,f
  1310  04AB                     l1735:	
  1311                           
  1312                           ;main.c: 77:             if (sen > 1){sen = 0;}
  1313  04AB  3002               	movlw	2
  1314  04AC  0247               	subwf	_sen,w
  1315  04AD  1C03               	skipc
  1316  04AE  2CB0               	goto	u1361
  1317  04AF  2CB1               	goto	u1360
  1318  04B0                     u1361:	
  1319  04B0  2CB2               	goto	l84
  1320  04B1                     u1360:	
  1321  04B1                     l1737:	
  1322  04B1  01C7               	clrf	_sen
  1323  04B2                     l84:	
  1324                           
  1325                           ;main.c: 78:             sensor = 0;}
  1326  04B2  01C8               	clrf	_sensor
  1327  04B3  2C69               	goto	l1709
  1328  04B4  120A  118A  280C   	ljmp	start
  1329  04B7                     __end_of_main:	
  1330                           
  1331                           	psect	text1
  1332  06C7                     __ptext1:	
  1333 ;; *************** function _setup *****************
  1334 ;; Defined at:
  1335 ;;		line 83 in file "main.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _setup
  1365  06C7                     _setup:	
  1366  06C7                     l1421:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _setup: [wreg+status,2]
  1369                           
  1370                           
  1371                           ;main.c: 85:     TRISA = 0b00000011;
  1372  06C7  3003               	movlw	3
  1373  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  1374  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  1375  06CA  0085               	movwf	5	;volatile
  1376                           
  1377                           ;main.c: 86:     ANSEL = 0b00000011;
  1378  06CB  3003               	movlw	3
  1379  06CC  1683               	bsf	3,5	;RP0=1, select bank3
  1380  06CD  1703               	bsf	3,6	;RP1=1, select bank3
  1381  06CE  0088               	movwf	8	;volatile
  1382  06CF                     l1423:	
  1383                           
  1384                           ;main.c: 87:     ANSELH = 0b00000000;
  1385  06CF  0189               	clrf	9	;volatile
  1386  06D0                     l1425:	
  1387                           
  1388                           ;main.c: 88:     TRISB = 0b00000000;
  1389  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  1390  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  1391  06D2  0186               	clrf	6	;volatile
  1392  06D3                     l1427:	
  1393                           
  1394                           ;main.c: 89:     TRISC = 0b00000000;
  1395  06D3  0187               	clrf	7	;volatile
  1396  06D4                     l1429:	
  1397                           
  1398                           ;main.c: 90:     TRISD = 0b00000000;
  1399  06D4  0188               	clrf	8	;volatile
  1400  06D5                     l1431:	
  1401                           
  1402                           ;main.c: 91:     TRISE = 0b0000;
  1403  06D5  0189               	clrf	9	;volatile
  1404  06D6                     l1433:	
  1405                           
  1406                           ;main.c: 92:     PORTB = 0b00000000;
  1407  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1408  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1409  06D8  0186               	clrf	6	;volatile
  1410  06D9                     l1435:	
  1411                           
  1412                           ;main.c: 93:     PORTC = 0b00000000;
  1413  06D9  0187               	clrf	7	;volatile
  1414  06DA                     l1437:	
  1415                           
  1416                           ;main.c: 94:     PORTD = 0b00000000;
  1417  06DA  0188               	clrf	8	;volatile
  1418  06DB                     l1439:	
  1419                           
  1420                           ;main.c: 95:     PORTE = 0b0000;
  1421  06DB  0189               	clrf	9	;volatile
  1422  06DC                     l1441:	
  1423                           
  1424                           ;main.c: 98:     OPTION_REGbits.T0CS = 0;
  1425  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  1426  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  1427  06DE  1281               	bcf	1,5	;volatile
  1428  06DF                     l1443:	
  1429                           
  1430                           ;main.c: 99:     OPTION_REGbits.PSA = 0;
  1431  06DF  1181               	bcf	1,3	;volatile
  1432  06E0                     l1445:	
  1433                           
  1434                           ;main.c: 100:     OPTION_REGbits.PS0 = 0;
  1435  06E0  1001               	bcf	1,0	;volatile
  1436  06E1                     l1447:	
  1437                           
  1438                           ;main.c: 101:     OPTION_REGbits.PS1 = 1;
  1439  06E1  1481               	bsf	1,1	;volatile
  1440  06E2                     l1449:	
  1441                           
  1442                           ;main.c: 102:     OPTION_REGbits.PS2 = 0;
  1443  06E2  1101               	bcf	1,2	;volatile
  1444  06E3                     l1451:	
  1445                           
  1446                           ;main.c: 103:     INTCONbits.T0IE = 1;
  1447  06E3  168B               	bsf	11,5	;volatile
  1448  06E4                     l1453:	
  1449                           
  1450                           ;main.c: 104:     INTCONbits.T0IF = 0;
  1451  06E4  110B               	bcf	11,2	;volatile
  1452  06E5                     l1455:	
  1453                           
  1454                           ;main.c: 105:     INTCONbits.GIE = 1;
  1455  06E5  178B               	bsf	11,7	;volatile
  1456  06E6                     l1457:	
  1457                           
  1458                           ;main.c: 106:     TMR0 = 130;
  1459  06E6  3082               	movlw	130
  1460  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1461  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1462  06E9  0081               	movwf	1	;volatile
  1463  06EA                     l90:	
  1464  06EA  0008               	return
  1465  06EB                     __end_of_setup:	
  1466                           
  1467                           	psect	text2
  1468  0021                     __ptext2:	
  1469 ;; *************** function _VAL *****************
  1470 ;; Defined at:
  1471 ;;		line 72 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  result          1    wreg     unsigned char 
  1474 ;;  column          1    8[BANK0 ] unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  result          1   29[BANK0 ] unsigned char 
  1477 ;;  i               2   27[BANK0 ] int 
  1478 ;;  i               2   25[BANK0 ] int 
  1479 ;;  numero          6   17[BANK0 ] int [3]
  1480 ;;  coordenada      1   31[BANK0 ] unsigned char 
  1481 ;;  valor           1   30[BANK0 ] unsigned char 
  1482 ;;  centesimas      1   16[BANK0 ] unsigned char 
  1483 ;;  decimas         1   15[BANK0 ] unsigned char 
  1484 ;;  unidades        1   14[BANK0 ] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         0       1       0       0       0
  1495 ;;      Locals:         0      18       0       0       0
  1496 ;;      Temps:          0       5       0       0       0
  1497 ;;      Totals:         0      24       0       0       0
  1498 ;;Total ram usage:       24 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    6
  1501 ;; This function calls:
  1502 ;;		_LCD_PRINT_WP
  1503 ;;		___awdiv
  1504 ;;		___awmod
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _VAL
  1512  0021                     _VAL:	
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _VAL: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1516                           ;VAL@result stored from wreg
  1517  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0023  00BD               	movwf	VAL@result
  1520  0024                     l1487:	
  1521  0024  30FA               	movlw	250
  1522  0025  023D               	subwf	VAL@result,w
  1523  0026  1C03               	skipc
  1524  0027  2829               	goto	u931
  1525  0028  282A               	goto	u930
  1526  0029                     u931:	
  1527  0029  282E               	goto	l1491
  1528  002A                     u930:	
  1529  002A                     l1489:	
  1530  002A  30FA               	movlw	250
  1531  002B  00A9               	movwf	??_VAL
  1532  002C  0829               	movf	??_VAL,w
  1533  002D  00BD               	movwf	VAL@result
  1534  002E                     l1491:	
  1535  002E                     l1493:	
  1536  002E  01BF               	clrf	VAL@coordenada
  1537  002F                     l1495:	
  1538  002F  3032               	movlw	50
  1539  0030  00A0               	movwf	___awdiv@divisor
  1540  0031  3000               	movlw	0
  1541  0032  00A1               	movwf	___awdiv@divisor+1
  1542  0033  3032               	movlw	50
  1543  0034  00F3               	movwf	___awmod@divisor
  1544  0035  3000               	movlw	0
  1545  0036  00F4               	movwf	___awmod@divisor+1
  1546  0037  083D               	movf	VAL@result,w
  1547  0038  00A9               	movwf	??_VAL
  1548  0039  01AA               	clrf	??_VAL+1
  1549  003A  0829               	movf	??_VAL,w
  1550  003B  00F5               	movwf	___awmod@dividend
  1551  003C  082A               	movf	??_VAL+1,w
  1552  003D  00F6               	movwf	___awmod@dividend+1
  1553  003E  120A  118A  25E5  120A  118A  	fcall	___awmod
  1554  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0045  083D               	movf	VAL@result,w
  1557  0046  00AB               	movwf	??_VAL+2
  1558  0047  0873               	movf	?___awmod,w
  1559  0048  022B               	subwf	??_VAL+2,w
  1560  0049  00A2               	movwf	___awdiv@dividend
  1561  004A  0974               	comf	?___awmod+1,w
  1562  004B  1803               	skipnc
  1563  004C  3E01               	addlw	1
  1564  004D  00A3               	movwf	___awdiv@dividend+1
  1565  004E  120A  118A  257C  120A  118A  	fcall	___awdiv
  1566  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0055  0820               	movf	?___awdiv,w
  1569  0056  00AC               	movwf	??_VAL+3
  1570  0057  082C               	movf	??_VAL+3,w
  1571  0058  00AE               	movwf	VAL@unidades
  1572  0059                     l1497:	
  1573  0059  083D               	movf	VAL@result,w
  1574  005A  00A9               	movwf	??_VAL
  1575  005B  01AA               	clrf	??_VAL+1
  1576  005C  0829               	movf	??_VAL,w
  1577  005D  00F5               	movwf	___awmod@dividend
  1578  005E  082A               	movf	??_VAL+1,w
  1579  005F  00F6               	movwf	___awmod@dividend+1
  1580  0060  3032               	movlw	50
  1581  0061  00F3               	movwf	___awmod@divisor
  1582  0062  3000               	movlw	0
  1583  0063  00F4               	movwf	___awmod@divisor+1
  1584  0064  120A  118A  25E5  120A  118A  	fcall	___awmod
  1585  0069  0874               	movf	?___awmod+1,w
  1586  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1587  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1588  006C  00B8               	movwf	_VAL$1117+1
  1589  006D  0873               	movf	?___awmod,w
  1590  006E  00B7               	movwf	_VAL$1117
  1591  006F                     l1499:	
  1592  006F  3005               	movlw	5
  1593  0070  00A0               	movwf	___awdiv@divisor
  1594  0071  3000               	movlw	0
  1595  0072  00A1               	movwf	___awdiv@divisor+1
  1596  0073  3032               	movlw	50
  1597  0074  00F3               	movwf	___awmod@divisor
  1598  0075  3000               	movlw	0
  1599  0076  00F4               	movwf	___awmod@divisor+1
  1600  0077  083D               	movf	VAL@result,w
  1601  0078  00A9               	movwf	??_VAL
  1602  0079  01AA               	clrf	??_VAL+1
  1603  007A  0829               	movf	??_VAL,w
  1604  007B  00F5               	movwf	___awmod@dividend
  1605  007C  082A               	movf	??_VAL+1,w
  1606  007D  00F6               	movwf	___awmod@dividend+1
  1607  007E  120A  118A  25E5  120A  118A  	fcall	___awmod
  1608  0083  0873               	movf	?___awmod,w
  1609  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0086  00AB               	movwf	??_VAL+2
  1612  0087  0874               	movf	?___awmod+1,w
  1613  0088  00AC               	movwf	??_VAL+3
  1614  0089  3005               	movlw	5
  1615  008A  00F3               	movwf	___awmod@divisor
  1616  008B  3000               	movlw	0
  1617  008C  00F4               	movwf	___awmod@divisor+1
  1618  008D  0838               	movf	_VAL$1117+1,w
  1619  008E  00F6               	movwf	___awmod@dividend+1
  1620  008F  0837               	movf	_VAL$1117,w
  1621  0090  00F5               	movwf	___awmod@dividend
  1622  0091  120A  118A  25E5  120A  118A  	fcall	___awmod
  1623  0096  0873               	movf	?___awmod,w
  1624  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1626  0099  022B               	subwf	??_VAL+2,w
  1627  009A  00A2               	movwf	___awdiv@dividend
  1628  009B  0874               	movf	?___awmod+1,w
  1629  009C  1C03               	skipc
  1630  009D  0A74               	incf	?___awmod+1,w
  1631  009E  022C               	subwf	??_VAL+3,w
  1632  009F  00A3               	movwf	___awdiv@dividend+1
  1633  00A0  120A  118A  257C  120A  118A  	fcall	___awdiv
  1634  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1635  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1636  00A7  0820               	movf	?___awdiv,w
  1637  00A8  00AD               	movwf	??_VAL+4
  1638  00A9  082D               	movf	??_VAL+4,w
  1639  00AA  00AF               	movwf	VAL@decimas
  1640  00AB                     l1501:	
  1641  00AB  083D               	movf	VAL@result,w
  1642  00AC  00A9               	movwf	??_VAL
  1643  00AD  01AA               	clrf	??_VAL+1
  1644  00AE  0829               	movf	??_VAL,w
  1645  00AF  00F5               	movwf	___awmod@dividend
  1646  00B0  082A               	movf	??_VAL+1,w
  1647  00B1  00F6               	movwf	___awmod@dividend+1
  1648  00B2  3032               	movlw	50
  1649  00B3  00F3               	movwf	___awmod@divisor
  1650  00B4  3000               	movlw	0
  1651  00B5  00F4               	movwf	___awmod@divisor+1
  1652  00B6  120A  118A  25E5  120A  118A  	fcall	___awmod
  1653  00BB  0874               	movf	?___awmod+1,w
  1654  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1655  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1656  00BE  00B8               	movwf	_VAL$1117+1
  1657  00BF  0873               	movf	?___awmod,w
  1658  00C0  00B7               	movwf	_VAL$1117
  1659  00C1                     l1503:	
  1660  00C1  3005               	movlw	5
  1661  00C2  00F3               	movwf	___awmod@divisor
  1662  00C3  3000               	movlw	0
  1663  00C4  00F4               	movwf	___awmod@divisor+1
  1664  00C5  0838               	movf	_VAL$1117+1,w
  1665  00C6  00F6               	movwf	___awmod@dividend+1
  1666  00C7  0837               	movf	_VAL$1117,w
  1667  00C8  00F5               	movwf	___awmod@dividend
  1668  00C9  120A  118A  25E5  120A  118A  	fcall	___awmod
  1669  00CE  0873               	movf	?___awmod,w
  1670  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1671  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1672  00D1  00A9               	movwf	??_VAL
  1673  00D2  0729               	addwf	??_VAL,w
  1674  00D3  00AA               	movwf	??_VAL+1
  1675  00D4  082A               	movf	??_VAL+1,w
  1676  00D5  00B0               	movwf	VAL@centesimas
  1677  00D6                     l1505:	
  1678  00D6  3031               	movlw	VAL@numero& (0+255)
  1679  00D7  0084               	movwf	4
  1680  00D8  3006               	movlw	6
  1681  00D9  00FF               	movwf	btemp+1
  1682  00DA                     u940:	
  1683  00DA  1383               	bcf	3,7	;select IRP bank0
  1684  00DB  0180               	clrf	0
  1685  00DC  0A84               	incf	4,f
  1686  00DD  0BFF               	decfsz	btemp+1,f
  1687  00DE  28DA               	goto	u940
  1688  00DF                     l1507:	
  1689  00DF  082E               	movf	VAL@unidades,w
  1690  00E0  00A9               	movwf	??_VAL
  1691  00E1  01AA               	clrf	??_VAL+1
  1692  00E2  0829               	movf	??_VAL,w
  1693  00E3  00B1               	movwf	VAL@numero
  1694  00E4  082A               	movf	??_VAL+1,w
  1695  00E5  00B2               	movwf	VAL@numero+1
  1696  00E6                     l1509:	
  1697  00E6  082F               	movf	VAL@decimas,w
  1698  00E7  00A9               	movwf	??_VAL
  1699  00E8  01AA               	clrf	??_VAL+1
  1700  00E9  0829               	movf	??_VAL,w
  1701  00EA  00B3               	movwf	VAL@numero+2
  1702  00EB  082A               	movf	??_VAL+1,w
  1703  00EC  00B4               	movwf	VAL@numero+3
  1704  00ED                     l1511:	
  1705  00ED  0830               	movf	VAL@centesimas,w
  1706  00EE  00A9               	movwf	??_VAL
  1707  00EF  01AA               	clrf	??_VAL+1
  1708  00F0  0829               	movf	??_VAL,w
  1709  00F1  00B5               	movwf	VAL@numero+4
  1710  00F2  082A               	movf	??_VAL+1,w
  1711  00F3  00B6               	movwf	VAL@numero+5
  1712  00F4                     l1513:	
  1713  00F4  0828               	movf	VAL@column,w
  1714  00F5  1D03               	btfss	3,2
  1715  00F6  28F8               	goto	u951
  1716  00F7  28F9               	goto	u950
  1717  00F8                     u951:	
  1718  00F8  2A4D               	goto	l1579
  1719  00F9                     u950:	
  1720  00F9                     l1515:	
  1721  00F9  01B9               	clrf	VAL@i
  1722  00FA  01BA               	clrf	VAL@i+1
  1723  00FB                     l1521:	
  1724  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1725  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1726  00FD  0839               	movf	VAL@i,w
  1727  00FE  00A9               	movwf	??_VAL
  1728  00FF  0729               	addwf	??_VAL,w
  1729  0100  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  1730  0101  0084               	movwf	4
  1731  0102  1383               	bcf	3,7	;select IRP bank0
  1732  0103  0800               	movf	0,w
  1733  0104  00AA               	movwf	??_VAL+1
  1734  0105  082A               	movf	??_VAL+1,w
  1735  0106  00BE               	movwf	VAL@valor
  1736  0107                     l1523:	
  1737  0107  0839               	movf	VAL@i,w
  1738  0108  043A               	iorwf	VAL@i+1,w
  1739  0109  1D03               	btfss	3,2
  1740  010A  290C               	goto	u961
  1741  010B  290D               	goto	u960
  1742  010C                     u961:	
  1743  010C  290F               	goto	l1527
  1744  010D                     u960:	
  1745  010D                     l1525:	
  1746  010D  01BF               	clrf	VAL@coordenada
  1747  010E  0ABF               	incf	VAL@coordenada,f
  1748  010F                     l1527:	
  1749  010F  0339               	decf	VAL@i,w
  1750  0110  043A               	iorwf	VAL@i+1,w
  1751  0111  1D03               	btfss	3,2
  1752  0112  2914               	goto	u971
  1753  0113  2915               	goto	u970
  1754  0114                     u971:	
  1755  0114  2919               	goto	l1531
  1756  0115                     u970:	
  1757  0115                     l1529:	
  1758  0115  3003               	movlw	3
  1759  0116  00A9               	movwf	??_VAL
  1760  0117  0829               	movf	??_VAL,w
  1761  0118  00BF               	movwf	VAL@coordenada
  1762  0119                     l1531:	
  1763  0119  3002               	movlw	2
  1764  011A  0639               	xorwf	VAL@i,w
  1765  011B  043A               	iorwf	VAL@i+1,w
  1766  011C  1D03               	btfss	3,2
  1767  011D  291F               	goto	u981
  1768  011E  2920               	goto	u980
  1769  011F                     u981:	
  1770  011F  2924               	goto	l1535
  1771  0120                     u980:	
  1772  0120                     l1533:	
  1773  0120  3004               	movlw	4
  1774  0121  00A9               	movwf	??_VAL
  1775  0122  0829               	movf	??_VAL,w
  1776  0123  00BF               	movwf	VAL@coordenada
  1777  0124                     l1535:	
  1778  0124  083E               	movf	VAL@valor,w
  1779  0125  1D03               	btfss	3,2
  1780  0126  2928               	goto	u991
  1781  0127  2929               	goto	u990
  1782  0128                     u991:	
  1783  0128  293D               	goto	l1539
  1784  0129                     u990:	
  1785  0129                     l1537:	
  1786  0129  083F               	movf	VAL@coordenada,w
  1787  012A  00A9               	movwf	??_VAL
  1788  012B  01AA               	clrf	??_VAL+1
  1789  012C  0829               	movf	??_VAL,w
  1790  012D  00A0               	movwf	LCD_PRINT_WP@x
  1791  012E  082A               	movf	??_VAL+1,w
  1792  012F  00A1               	movwf	LCD_PRINT_WP@x+1
  1793  0130  3002               	movlw	2
  1794  0131  00A2               	movwf	LCD_PRINT_WP@y
  1795  0132  3000               	movlw	0
  1796  0133  00A3               	movwf	LCD_PRINT_WP@y+1
  1797  0134  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  1798  0135  00AB               	movwf	??_VAL+2
  1799  0136  082B               	movf	??_VAL+2,w
  1800  0137  00A4               	movwf	LCD_PRINT_WP@frase
  1801  0138  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1802  013D                     l1539:	
  1803  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1804  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1805  013F  033E               	decf	VAL@valor,w
  1806  0140  1D03               	btfss	3,2
  1807  0141  2943               	goto	u1001
  1808  0142  2944               	goto	u1000
  1809  0143                     u1001:	
  1810  0143  2958               	goto	l1543
  1811  0144                     u1000:	
  1812  0144                     l1541:	
  1813  0144  083F               	movf	VAL@coordenada,w
  1814  0145  00A9               	movwf	??_VAL
  1815  0146  01AA               	clrf	??_VAL+1
  1816  0147  0829               	movf	??_VAL,w
  1817  0148  00A0               	movwf	LCD_PRINT_WP@x
  1818  0149  082A               	movf	??_VAL+1,w
  1819  014A  00A1               	movwf	LCD_PRINT_WP@x+1
  1820  014B  3002               	movlw	2
  1821  014C  00A2               	movwf	LCD_PRINT_WP@y
  1822  014D  3000               	movlw	0
  1823  014E  00A3               	movwf	LCD_PRINT_WP@y+1
  1824  014F  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1825  0150  00AB               	movwf	??_VAL+2
  1826  0151  082B               	movf	??_VAL+2,w
  1827  0152  00A4               	movwf	LCD_PRINT_WP@frase
  1828  0153  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1829  0158                     l1543:	
  1830  0158  3002               	movlw	2
  1831  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1832  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1833  015B  063E               	xorwf	VAL@valor,w
  1834  015C  1D03               	btfss	3,2
  1835  015D  295F               	goto	u1011
  1836  015E  2960               	goto	u1010
  1837  015F                     u1011:	
  1838  015F  2974               	goto	l1547
  1839  0160                     u1010:	
  1840  0160                     l1545:	
  1841  0160  083F               	movf	VAL@coordenada,w
  1842  0161  00A9               	movwf	??_VAL
  1843  0162  01AA               	clrf	??_VAL+1
  1844  0163  0829               	movf	??_VAL,w
  1845  0164  00A0               	movwf	LCD_PRINT_WP@x
  1846  0165  082A               	movf	??_VAL+1,w
  1847  0166  00A1               	movwf	LCD_PRINT_WP@x+1
  1848  0167  3002               	movlw	2
  1849  0168  00A2               	movwf	LCD_PRINT_WP@y
  1850  0169  3000               	movlw	0
  1851  016A  00A3               	movwf	LCD_PRINT_WP@y+1
  1852  016B  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1853  016C  00AB               	movwf	??_VAL+2
  1854  016D  082B               	movf	??_VAL+2,w
  1855  016E  00A4               	movwf	LCD_PRINT_WP@frase
  1856  016F  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1857  0174                     l1547:	
  1858  0174  3003               	movlw	3
  1859  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1861  0177  063E               	xorwf	VAL@valor,w
  1862  0178  1D03               	btfss	3,2
  1863  0179  297B               	goto	u1021
  1864  017A  297C               	goto	u1020
  1865  017B                     u1021:	
  1866  017B  2990               	goto	l1551
  1867  017C                     u1020:	
  1868  017C                     l1549:	
  1869  017C  083F               	movf	VAL@coordenada,w
  1870  017D  00A9               	movwf	??_VAL
  1871  017E  01AA               	clrf	??_VAL+1
  1872  017F  0829               	movf	??_VAL,w
  1873  0180  00A0               	movwf	LCD_PRINT_WP@x
  1874  0181  082A               	movf	??_VAL+1,w
  1875  0182  00A1               	movwf	LCD_PRINT_WP@x+1
  1876  0183  3002               	movlw	2
  1877  0184  00A2               	movwf	LCD_PRINT_WP@y
  1878  0185  3000               	movlw	0
  1879  0186  00A3               	movwf	LCD_PRINT_WP@y+1
  1880  0187  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1881  0188  00AB               	movwf	??_VAL+2
  1882  0189  082B               	movf	??_VAL+2,w
  1883  018A  00A4               	movwf	LCD_PRINT_WP@frase
  1884  018B  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1885  0190                     l1551:	
  1886  0190  3004               	movlw	4
  1887  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0193  063E               	xorwf	VAL@valor,w
  1890  0194  1D03               	btfss	3,2
  1891  0195  2997               	goto	u1031
  1892  0196  2998               	goto	u1030
  1893  0197                     u1031:	
  1894  0197  29AC               	goto	l1555
  1895  0198                     u1030:	
  1896  0198                     l1553:	
  1897  0198  083F               	movf	VAL@coordenada,w
  1898  0199  00A9               	movwf	??_VAL
  1899  019A  01AA               	clrf	??_VAL+1
  1900  019B  0829               	movf	??_VAL,w
  1901  019C  00A0               	movwf	LCD_PRINT_WP@x
  1902  019D  082A               	movf	??_VAL+1,w
  1903  019E  00A1               	movwf	LCD_PRINT_WP@x+1
  1904  019F  3002               	movlw	2
  1905  01A0  00A2               	movwf	LCD_PRINT_WP@y
  1906  01A1  3000               	movlw	0
  1907  01A2  00A3               	movwf	LCD_PRINT_WP@y+1
  1908  01A3  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1909  01A4  00AB               	movwf	??_VAL+2
  1910  01A5  082B               	movf	??_VAL+2,w
  1911  01A6  00A4               	movwf	LCD_PRINT_WP@frase
  1912  01A7  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1913  01AC                     l1555:	
  1914  01AC  3005               	movlw	5
  1915  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1916  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1917  01AF  063E               	xorwf	VAL@valor,w
  1918  01B0  1D03               	btfss	3,2
  1919  01B1  29B3               	goto	u1041
  1920  01B2  29B4               	goto	u1040
  1921  01B3                     u1041:	
  1922  01B3  29C8               	goto	l1559
  1923  01B4                     u1040:	
  1924  01B4                     l1557:	
  1925  01B4  083F               	movf	VAL@coordenada,w
  1926  01B5  00A9               	movwf	??_VAL
  1927  01B6  01AA               	clrf	??_VAL+1
  1928  01B7  0829               	movf	??_VAL,w
  1929  01B8  00A0               	movwf	LCD_PRINT_WP@x
  1930  01B9  082A               	movf	??_VAL+1,w
  1931  01BA  00A1               	movwf	LCD_PRINT_WP@x+1
  1932  01BB  3002               	movlw	2
  1933  01BC  00A2               	movwf	LCD_PRINT_WP@y
  1934  01BD  3000               	movlw	0
  1935  01BE  00A3               	movwf	LCD_PRINT_WP@y+1
  1936  01BF  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1937  01C0  00AB               	movwf	??_VAL+2
  1938  01C1  082B               	movf	??_VAL+2,w
  1939  01C2  00A4               	movwf	LCD_PRINT_WP@frase
  1940  01C3  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1941  01C8                     l1559:	
  1942  01C8  3006               	movlw	6
  1943  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1944  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1945  01CB  063E               	xorwf	VAL@valor,w
  1946  01CC  1D03               	btfss	3,2
  1947  01CD  29CF               	goto	u1051
  1948  01CE  29D0               	goto	u1050
  1949  01CF                     u1051:	
  1950  01CF  29E4               	goto	l1563
  1951  01D0                     u1050:	
  1952  01D0                     l1561:	
  1953  01D0  083F               	movf	VAL@coordenada,w
  1954  01D1  00A9               	movwf	??_VAL
  1955  01D2  01AA               	clrf	??_VAL+1
  1956  01D3  0829               	movf	??_VAL,w
  1957  01D4  00A0               	movwf	LCD_PRINT_WP@x
  1958  01D5  082A               	movf	??_VAL+1,w
  1959  01D6  00A1               	movwf	LCD_PRINT_WP@x+1
  1960  01D7  3002               	movlw	2
  1961  01D8  00A2               	movwf	LCD_PRINT_WP@y
  1962  01D9  3000               	movlw	0
  1963  01DA  00A3               	movwf	LCD_PRINT_WP@y+1
  1964  01DB  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1965  01DC  00AB               	movwf	??_VAL+2
  1966  01DD  082B               	movf	??_VAL+2,w
  1967  01DE  00A4               	movwf	LCD_PRINT_WP@frase
  1968  01DF  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1969  01E4                     l1563:	
  1970  01E4  3007               	movlw	7
  1971  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1972  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1973  01E7  063E               	xorwf	VAL@valor,w
  1974  01E8  1D03               	btfss	3,2
  1975  01E9  29EB               	goto	u1061
  1976  01EA  29EC               	goto	u1060
  1977  01EB                     u1061:	
  1978  01EB  2A00               	goto	l1567
  1979  01EC                     u1060:	
  1980  01EC                     l1565:	
  1981  01EC  083F               	movf	VAL@coordenada,w
  1982  01ED  00A9               	movwf	??_VAL
  1983  01EE  01AA               	clrf	??_VAL+1
  1984  01EF  0829               	movf	??_VAL,w
  1985  01F0  00A0               	movwf	LCD_PRINT_WP@x
  1986  01F1  082A               	movf	??_VAL+1,w
  1987  01F2  00A1               	movwf	LCD_PRINT_WP@x+1
  1988  01F3  3002               	movlw	2
  1989  01F4  00A2               	movwf	LCD_PRINT_WP@y
  1990  01F5  3000               	movlw	0
  1991  01F6  00A3               	movwf	LCD_PRINT_WP@y+1
  1992  01F7  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1993  01F8  00AB               	movwf	??_VAL+2
  1994  01F9  082B               	movf	??_VAL+2,w
  1995  01FA  00A4               	movwf	LCD_PRINT_WP@frase
  1996  01FB  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1997  0200                     l1567:	
  1998  0200  3008               	movlw	8
  1999  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0203  063E               	xorwf	VAL@valor,w
  2002  0204  1D03               	btfss	3,2
  2003  0205  2A07               	goto	u1071
  2004  0206  2A08               	goto	u1070
  2005  0207                     u1071:	
  2006  0207  2A1C               	goto	l1571
  2007  0208                     u1070:	
  2008  0208                     l1569:	
  2009  0208  083F               	movf	VAL@coordenada,w
  2010  0209  00A9               	movwf	??_VAL
  2011  020A  01AA               	clrf	??_VAL+1
  2012  020B  0829               	movf	??_VAL,w
  2013  020C  00A0               	movwf	LCD_PRINT_WP@x
  2014  020D  082A               	movf	??_VAL+1,w
  2015  020E  00A1               	movwf	LCD_PRINT_WP@x+1
  2016  020F  3002               	movlw	2
  2017  0210  00A2               	movwf	LCD_PRINT_WP@y
  2018  0211  3000               	movlw	0
  2019  0212  00A3               	movwf	LCD_PRINT_WP@y+1
  2020  0213  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2021  0214  00AB               	movwf	??_VAL+2
  2022  0215  082B               	movf	??_VAL+2,w
  2023  0216  00A4               	movwf	LCD_PRINT_WP@frase
  2024  0217  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2025  021C                     l1571:	
  2026  021C  3009               	movlw	9
  2027  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2028  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2029  021F  063E               	xorwf	VAL@valor,w
  2030  0220  1D03               	btfss	3,2
  2031  0221  2A23               	goto	u1081
  2032  0222  2A24               	goto	u1080
  2033  0223                     u1081:	
  2034  0223  2A38               	goto	l1575
  2035  0224                     u1080:	
  2036  0224                     l1573:	
  2037  0224  083F               	movf	VAL@coordenada,w
  2038  0225  00A9               	movwf	??_VAL
  2039  0226  01AA               	clrf	??_VAL+1
  2040  0227  0829               	movf	??_VAL,w
  2041  0228  00A0               	movwf	LCD_PRINT_WP@x
  2042  0229  082A               	movf	??_VAL+1,w
  2043  022A  00A1               	movwf	LCD_PRINT_WP@x+1
  2044  022B  3002               	movlw	2
  2045  022C  00A2               	movwf	LCD_PRINT_WP@y
  2046  022D  3000               	movlw	0
  2047  022E  00A3               	movwf	LCD_PRINT_WP@y+1
  2048  022F  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2049  0230  00AB               	movwf	??_VAL+2
  2050  0231  082B               	movf	??_VAL+2,w
  2051  0232  00A4               	movwf	LCD_PRINT_WP@frase
  2052  0233  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2053  0238                     l1575:	
  2054  0238  3001               	movlw	1
  2055  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2056  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2057  023B  07B9               	addwf	VAL@i,f
  2058  023C  1803               	skipnc
  2059  023D  0ABA               	incf	VAL@i+1,f
  2060  023E  3000               	movlw	0
  2061  023F  07BA               	addwf	VAL@i+1,f
  2062  0240                     l1577:	
  2063  0240  083A               	movf	VAL@i+1,w
  2064  0241  3A80               	xorlw	128
  2065  0242  00FF               	movwf	btemp+1
  2066  0243  3080               	movlw	128
  2067  0244  027F               	subwf	btemp+1,w
  2068  0245  1D03               	skipz
  2069  0246  2A49               	goto	u1095
  2070  0247  3003               	movlw	3
  2071  0248  0239               	subwf	VAL@i,w
  2072  0249                     u1095:	
  2073  0249  1C03               	skipc
  2074  024A  2A4C               	goto	u1091
  2075  024B  2A4D               	goto	u1090
  2076  024C                     u1091:	
  2077  024C  28FB               	goto	l1521
  2078  024D                     u1090:	
  2079  024D                     l1579:	
  2080  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2081  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2082  024F  0328               	decf	VAL@column,w
  2083  0250  1D03               	btfss	3,2
  2084  0251  2A53               	goto	u1101
  2085  0252  2A54               	goto	u1100
  2086  0253                     u1101:	
  2087  0253  2BAA               	goto	l196
  2088  0254                     u1100:	
  2089  0254                     l1581:	
  2090  0254  01BB               	clrf	VAL@i_376
  2091  0255  01BC               	clrf	VAL@i_376+1
  2092  0256                     l1587:	
  2093  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0258  083B               	movf	VAL@i_376,w
  2096  0259  00A9               	movwf	??_VAL
  2097  025A  0729               	addwf	??_VAL,w
  2098  025B  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  2099  025C  0084               	movwf	4
  2100  025D  1383               	bcf	3,7	;select IRP bank0
  2101  025E  0800               	movf	0,w
  2102  025F  00AA               	movwf	??_VAL+1
  2103  0260  082A               	movf	??_VAL+1,w
  2104  0261  00BE               	movwf	VAL@valor
  2105  0262                     l1589:	
  2106  0262  083B               	movf	VAL@i_376,w
  2107  0263  043C               	iorwf	VAL@i_376+1,w
  2108  0264  1D03               	btfss	3,2
  2109  0265  2A67               	goto	u1111
  2110  0266  2A68               	goto	u1110
  2111  0267                     u1111:	
  2112  0267  2A6C               	goto	l1593
  2113  0268                     u1110:	
  2114  0268                     l1591:	
  2115  0268  3007               	movlw	7
  2116  0269  00A9               	movwf	??_VAL
  2117  026A  0829               	movf	??_VAL,w
  2118  026B  00BF               	movwf	VAL@coordenada
  2119  026C                     l1593:	
  2120  026C  033B               	decf	VAL@i_376,w
  2121  026D  043C               	iorwf	VAL@i_376+1,w
  2122  026E  1D03               	btfss	3,2
  2123  026F  2A71               	goto	u1121
  2124  0270  2A72               	goto	u1120
  2125  0271                     u1121:	
  2126  0271  2A76               	goto	l1597
  2127  0272                     u1120:	
  2128  0272                     l1595:	
  2129  0272  3009               	movlw	9
  2130  0273  00A9               	movwf	??_VAL
  2131  0274  0829               	movf	??_VAL,w
  2132  0275  00BF               	movwf	VAL@coordenada
  2133  0276                     l1597:	
  2134  0276  3002               	movlw	2
  2135  0277  063B               	xorwf	VAL@i_376,w
  2136  0278  043C               	iorwf	VAL@i_376+1,w
  2137  0279  1D03               	btfss	3,2
  2138  027A  2A7C               	goto	u1131
  2139  027B  2A7D               	goto	u1130
  2140  027C                     u1131:	
  2141  027C  2A81               	goto	l1601
  2142  027D                     u1130:	
  2143  027D                     l1599:	
  2144  027D  300A               	movlw	10
  2145  027E  00A9               	movwf	??_VAL
  2146  027F  0829               	movf	??_VAL,w
  2147  0280  00BF               	movwf	VAL@coordenada
  2148  0281                     l1601:	
  2149  0281  083E               	movf	VAL@valor,w
  2150  0282  1D03               	btfss	3,2
  2151  0283  2A85               	goto	u1141
  2152  0284  2A86               	goto	u1140
  2153  0285                     u1141:	
  2154  0285  2A9A               	goto	l1605
  2155  0286                     u1140:	
  2156  0286                     l1603:	
  2157  0286  083F               	movf	VAL@coordenada,w
  2158  0287  00A9               	movwf	??_VAL
  2159  0288  01AA               	clrf	??_VAL+1
  2160  0289  0829               	movf	??_VAL,w
  2161  028A  00A0               	movwf	LCD_PRINT_WP@x
  2162  028B  082A               	movf	??_VAL+1,w
  2163  028C  00A1               	movwf	LCD_PRINT_WP@x+1
  2164  028D  3002               	movlw	2
  2165  028E  00A2               	movwf	LCD_PRINT_WP@y
  2166  028F  3000               	movlw	0
  2167  0290  00A3               	movwf	LCD_PRINT_WP@y+1
  2168  0291  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  2169  0292  00AB               	movwf	??_VAL+2
  2170  0293  082B               	movf	??_VAL+2,w
  2171  0294  00A4               	movwf	LCD_PRINT_WP@frase
  2172  0295  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2173  029A                     l1605:	
  2174  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2175  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2176  029C  033E               	decf	VAL@valor,w
  2177  029D  1D03               	btfss	3,2
  2178  029E  2AA0               	goto	u1151
  2179  029F  2AA1               	goto	u1150
  2180  02A0                     u1151:	
  2181  02A0  2AB5               	goto	l1609
  2182  02A1                     u1150:	
  2183  02A1                     l1607:	
  2184  02A1  083F               	movf	VAL@coordenada,w
  2185  02A2  00A9               	movwf	??_VAL
  2186  02A3  01AA               	clrf	??_VAL+1
  2187  02A4  0829               	movf	??_VAL,w
  2188  02A5  00A0               	movwf	LCD_PRINT_WP@x
  2189  02A6  082A               	movf	??_VAL+1,w
  2190  02A7  00A1               	movwf	LCD_PRINT_WP@x+1
  2191  02A8  3002               	movlw	2
  2192  02A9  00A2               	movwf	LCD_PRINT_WP@y
  2193  02AA  3000               	movlw	0
  2194  02AB  00A3               	movwf	LCD_PRINT_WP@y+1
  2195  02AC  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2196  02AD  00AB               	movwf	??_VAL+2
  2197  02AE  082B               	movf	??_VAL+2,w
  2198  02AF  00A4               	movwf	LCD_PRINT_WP@frase
  2199  02B0  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2200  02B5                     l1609:	
  2201  02B5  3002               	movlw	2
  2202  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2203  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2204  02B8  063E               	xorwf	VAL@valor,w
  2205  02B9  1D03               	btfss	3,2
  2206  02BA  2ABC               	goto	u1161
  2207  02BB  2ABD               	goto	u1160
  2208  02BC                     u1161:	
  2209  02BC  2AD1               	goto	l1613
  2210  02BD                     u1160:	
  2211  02BD                     l1611:	
  2212  02BD  083F               	movf	VAL@coordenada,w
  2213  02BE  00A9               	movwf	??_VAL
  2214  02BF  01AA               	clrf	??_VAL+1
  2215  02C0  0829               	movf	??_VAL,w
  2216  02C1  00A0               	movwf	LCD_PRINT_WP@x
  2217  02C2  082A               	movf	??_VAL+1,w
  2218  02C3  00A1               	movwf	LCD_PRINT_WP@x+1
  2219  02C4  3002               	movlw	2
  2220  02C5  00A2               	movwf	LCD_PRINT_WP@y
  2221  02C6  3000               	movlw	0
  2222  02C7  00A3               	movwf	LCD_PRINT_WP@y+1
  2223  02C8  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2224  02C9  00AB               	movwf	??_VAL+2
  2225  02CA  082B               	movf	??_VAL+2,w
  2226  02CB  00A4               	movwf	LCD_PRINT_WP@frase
  2227  02CC  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2228  02D1                     l1613:	
  2229  02D1  3003               	movlw	3
  2230  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2231  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2232  02D4  063E               	xorwf	VAL@valor,w
  2233  02D5  1D03               	btfss	3,2
  2234  02D6  2AD8               	goto	u1171
  2235  02D7  2AD9               	goto	u1170
  2236  02D8                     u1171:	
  2237  02D8  2AED               	goto	l1617
  2238  02D9                     u1170:	
  2239  02D9                     l1615:	
  2240  02D9  083F               	movf	VAL@coordenada,w
  2241  02DA  00A9               	movwf	??_VAL
  2242  02DB  01AA               	clrf	??_VAL+1
  2243  02DC  0829               	movf	??_VAL,w
  2244  02DD  00A0               	movwf	LCD_PRINT_WP@x
  2245  02DE  082A               	movf	??_VAL+1,w
  2246  02DF  00A1               	movwf	LCD_PRINT_WP@x+1
  2247  02E0  3002               	movlw	2
  2248  02E1  00A2               	movwf	LCD_PRINT_WP@y
  2249  02E2  3000               	movlw	0
  2250  02E3  00A3               	movwf	LCD_PRINT_WP@y+1
  2251  02E4  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  2252  02E5  00AB               	movwf	??_VAL+2
  2253  02E6  082B               	movf	??_VAL+2,w
  2254  02E7  00A4               	movwf	LCD_PRINT_WP@frase
  2255  02E8  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2256  02ED                     l1617:	
  2257  02ED  3004               	movlw	4
  2258  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2259  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2260  02F0  063E               	xorwf	VAL@valor,w
  2261  02F1  1D03               	btfss	3,2
  2262  02F2  2AF4               	goto	u1181
  2263  02F3  2AF5               	goto	u1180
  2264  02F4                     u1181:	
  2265  02F4  2B09               	goto	l1621
  2266  02F5                     u1180:	
  2267  02F5                     l1619:	
  2268  02F5  083F               	movf	VAL@coordenada,w
  2269  02F6  00A9               	movwf	??_VAL
  2270  02F7  01AA               	clrf	??_VAL+1
  2271  02F8  0829               	movf	??_VAL,w
  2272  02F9  00A0               	movwf	LCD_PRINT_WP@x
  2273  02FA  082A               	movf	??_VAL+1,w
  2274  02FB  00A1               	movwf	LCD_PRINT_WP@x+1
  2275  02FC  3002               	movlw	2
  2276  02FD  00A2               	movwf	LCD_PRINT_WP@y
  2277  02FE  3000               	movlw	0
  2278  02FF  00A3               	movwf	LCD_PRINT_WP@y+1
  2279  0300  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2280  0301  00AB               	movwf	??_VAL+2
  2281  0302  082B               	movf	??_VAL+2,w
  2282  0303  00A4               	movwf	LCD_PRINT_WP@frase
  2283  0304  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2284  0309                     l1621:	
  2285  0309  3005               	movlw	5
  2286  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2287  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2288  030C  063E               	xorwf	VAL@valor,w
  2289  030D  1D03               	btfss	3,2
  2290  030E  2B10               	goto	u1191
  2291  030F  2B11               	goto	u1190
  2292  0310                     u1191:	
  2293  0310  2B25               	goto	l1625
  2294  0311                     u1190:	
  2295  0311                     l1623:	
  2296  0311  083F               	movf	VAL@coordenada,w
  2297  0312  00A9               	movwf	??_VAL
  2298  0313  01AA               	clrf	??_VAL+1
  2299  0314  0829               	movf	??_VAL,w
  2300  0315  00A0               	movwf	LCD_PRINT_WP@x
  2301  0316  082A               	movf	??_VAL+1,w
  2302  0317  00A1               	movwf	LCD_PRINT_WP@x+1
  2303  0318  3002               	movlw	2
  2304  0319  00A2               	movwf	LCD_PRINT_WP@y
  2305  031A  3000               	movlw	0
  2306  031B  00A3               	movwf	LCD_PRINT_WP@y+1
  2307  031C  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2308  031D  00AB               	movwf	??_VAL+2
  2309  031E  082B               	movf	??_VAL+2,w
  2310  031F  00A4               	movwf	LCD_PRINT_WP@frase
  2311  0320  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2312  0325                     l1625:	
  2313  0325  3006               	movlw	6
  2314  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0328  063E               	xorwf	VAL@valor,w
  2317  0329  1D03               	btfss	3,2
  2318  032A  2B2C               	goto	u1201
  2319  032B  2B2D               	goto	u1200
  2320  032C                     u1201:	
  2321  032C  2B41               	goto	l1629
  2322  032D                     u1200:	
  2323  032D                     l1627:	
  2324  032D  083F               	movf	VAL@coordenada,w
  2325  032E  00A9               	movwf	??_VAL
  2326  032F  01AA               	clrf	??_VAL+1
  2327  0330  0829               	movf	??_VAL,w
  2328  0331  00A0               	movwf	LCD_PRINT_WP@x
  2329  0332  082A               	movf	??_VAL+1,w
  2330  0333  00A1               	movwf	LCD_PRINT_WP@x+1
  2331  0334  3002               	movlw	2
  2332  0335  00A2               	movwf	LCD_PRINT_WP@y
  2333  0336  3000               	movlw	0
  2334  0337  00A3               	movwf	LCD_PRINT_WP@y+1
  2335  0338  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2336  0339  00AB               	movwf	??_VAL+2
  2337  033A  082B               	movf	??_VAL+2,w
  2338  033B  00A4               	movwf	LCD_PRINT_WP@frase
  2339  033C  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2340  0341                     l1629:	
  2341  0341  3007               	movlw	7
  2342  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0344  063E               	xorwf	VAL@valor,w
  2345  0345  1D03               	btfss	3,2
  2346  0346  2B48               	goto	u1211
  2347  0347  2B49               	goto	u1210
  2348  0348                     u1211:	
  2349  0348  2B5D               	goto	l1633
  2350  0349                     u1210:	
  2351  0349                     l1631:	
  2352  0349  083F               	movf	VAL@coordenada,w
  2353  034A  00A9               	movwf	??_VAL
  2354  034B  01AA               	clrf	??_VAL+1
  2355  034C  0829               	movf	??_VAL,w
  2356  034D  00A0               	movwf	LCD_PRINT_WP@x
  2357  034E  082A               	movf	??_VAL+1,w
  2358  034F  00A1               	movwf	LCD_PRINT_WP@x+1
  2359  0350  3002               	movlw	2
  2360  0351  00A2               	movwf	LCD_PRINT_WP@y
  2361  0352  3000               	movlw	0
  2362  0353  00A3               	movwf	LCD_PRINT_WP@y+1
  2363  0354  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2364  0355  00AB               	movwf	??_VAL+2
  2365  0356  082B               	movf	??_VAL+2,w
  2366  0357  00A4               	movwf	LCD_PRINT_WP@frase
  2367  0358  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2368  035D                     l1633:	
  2369  035D  3008               	movlw	8
  2370  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2371  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0360  063E               	xorwf	VAL@valor,w
  2373  0361  1D03               	btfss	3,2
  2374  0362  2B64               	goto	u1221
  2375  0363  2B65               	goto	u1220
  2376  0364                     u1221:	
  2377  0364  2B79               	goto	l1637
  2378  0365                     u1220:	
  2379  0365                     l1635:	
  2380  0365  083F               	movf	VAL@coordenada,w
  2381  0366  00A9               	movwf	??_VAL
  2382  0367  01AA               	clrf	??_VAL+1
  2383  0368  0829               	movf	??_VAL,w
  2384  0369  00A0               	movwf	LCD_PRINT_WP@x
  2385  036A  082A               	movf	??_VAL+1,w
  2386  036B  00A1               	movwf	LCD_PRINT_WP@x+1
  2387  036C  3002               	movlw	2
  2388  036D  00A2               	movwf	LCD_PRINT_WP@y
  2389  036E  3000               	movlw	0
  2390  036F  00A3               	movwf	LCD_PRINT_WP@y+1
  2391  0370  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2392  0371  00AB               	movwf	??_VAL+2
  2393  0372  082B               	movf	??_VAL+2,w
  2394  0373  00A4               	movwf	LCD_PRINT_WP@frase
  2395  0374  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2396  0379                     l1637:	
  2397  0379  3009               	movlw	9
  2398  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2399  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2400  037C  063E               	xorwf	VAL@valor,w
  2401  037D  1D03               	btfss	3,2
  2402  037E  2B80               	goto	u1231
  2403  037F  2B81               	goto	u1230
  2404  0380                     u1231:	
  2405  0380  2B95               	goto	l1641
  2406  0381                     u1230:	
  2407  0381                     l1639:	
  2408  0381  083F               	movf	VAL@coordenada,w
  2409  0382  00A9               	movwf	??_VAL
  2410  0383  01AA               	clrf	??_VAL+1
  2411  0384  0829               	movf	??_VAL,w
  2412  0385  00A0               	movwf	LCD_PRINT_WP@x
  2413  0386  082A               	movf	??_VAL+1,w
  2414  0387  00A1               	movwf	LCD_PRINT_WP@x+1
  2415  0388  3002               	movlw	2
  2416  0389  00A2               	movwf	LCD_PRINT_WP@y
  2417  038A  3000               	movlw	0
  2418  038B  00A3               	movwf	LCD_PRINT_WP@y+1
  2419  038C  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2420  038D  00AB               	movwf	??_VAL+2
  2421  038E  082B               	movf	??_VAL+2,w
  2422  038F  00A4               	movwf	LCD_PRINT_WP@frase
  2423  0390  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2424  0395                     l1641:	
  2425  0395  3001               	movlw	1
  2426  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0398  07BB               	addwf	VAL@i_376,f
  2429  0399  1803               	skipnc
  2430  039A  0ABC               	incf	VAL@i_376+1,f
  2431  039B  3000               	movlw	0
  2432  039C  07BC               	addwf	VAL@i_376+1,f
  2433  039D                     l1643:	
  2434  039D  083C               	movf	VAL@i_376+1,w
  2435  039E  3A80               	xorlw	128
  2436  039F  00FF               	movwf	btemp+1
  2437  03A0  3080               	movlw	128
  2438  03A1  027F               	subwf	btemp+1,w
  2439  03A2  1D03               	skipz
  2440  03A3  2BA6               	goto	u1245
  2441  03A4  3003               	movlw	3
  2442  03A5  023B               	subwf	VAL@i_376,w
  2443  03A6                     u1245:	
  2444  03A6  1C03               	skipc
  2445  03A7  2BA9               	goto	u1241
  2446  03A8  2BAA               	goto	u1240
  2447  03A9                     u1241:	
  2448  03A9  2A56               	goto	l1587
  2449  03AA                     u1240:	
  2450  03AA                     l196:	
  2451  03AA  0008               	return
  2452  03AB                     __end_of_VAL:	
  2453                           
  2454                           	psect	text3
  2455  05E5                     __ptext3:	
  2456 ;; *************** function ___awmod *****************
  2457 ;; Defined at:
  2458 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  divisor         2    3[COMMON] int 
  2461 ;;  dividend        2    5[COMMON] int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  sign            1    9[COMMON] unsigned char 
  2464 ;;  counter         1    8[COMMON] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2    3[COMMON] int 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         4       0       0       0       0
  2475 ;;      Locals:         2       0       0       0       0
  2476 ;;      Temps:          1       0       0       0       0
  2477 ;;      Totals:         7       0       0       0       0
  2478 ;;Total ram usage:        7 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_VAL
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function ___awmod
  2490  05E5                     ___awmod:	
  2491  05E5                     l1383:	
  2492                           ;incstack = 0
  2493                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2494                           
  2495  05E5  01F9               	clrf	___awmod@sign
  2496  05E6                     l1385:	
  2497  05E6  1FF6               	btfss	___awmod@dividend+1,7
  2498  05E7  2DE9               	goto	u841
  2499  05E8  2DEA               	goto	u840
  2500  05E9                     u841:	
  2501  05E9  2DF1               	goto	l1391
  2502  05EA                     u840:	
  2503  05EA                     l1387:	
  2504  05EA  09F5               	comf	___awmod@dividend,f
  2505  05EB  09F6               	comf	___awmod@dividend+1,f
  2506  05EC  0AF5               	incf	___awmod@dividend,f
  2507  05ED  1903               	skipnz
  2508  05EE  0AF6               	incf	___awmod@dividend+1,f
  2509  05EF                     l1389:	
  2510  05EF  01F9               	clrf	___awmod@sign
  2511  05F0  0AF9               	incf	___awmod@sign,f
  2512  05F1                     l1391:	
  2513  05F1  1FF4               	btfss	___awmod@divisor+1,7
  2514  05F2  2DF4               	goto	u851
  2515  05F3  2DF5               	goto	u850
  2516  05F4                     u851:	
  2517  05F4  2DFA               	goto	l1395
  2518  05F5                     u850:	
  2519  05F5                     l1393:	
  2520  05F5  09F3               	comf	___awmod@divisor,f
  2521  05F6  09F4               	comf	___awmod@divisor+1,f
  2522  05F7  0AF3               	incf	___awmod@divisor,f
  2523  05F8  1903               	skipnz
  2524  05F9  0AF4               	incf	___awmod@divisor+1,f
  2525  05FA                     l1395:	
  2526  05FA  0873               	movf	___awmod@divisor,w
  2527  05FB  0474               	iorwf	___awmod@divisor+1,w
  2528  05FC  1903               	btfsc	3,2
  2529  05FD  2DFF               	goto	u861
  2530  05FE  2E00               	goto	u860
  2531  05FF                     u861:	
  2532  05FF  2E2F               	goto	l1413
  2533  0600                     u860:	
  2534  0600                     l1397:	
  2535  0600  01F8               	clrf	___awmod@counter
  2536  0601  0AF8               	incf	___awmod@counter,f
  2537  0602  2E0E               	goto	l1403
  2538  0603                     l1399:	
  2539  0603  3001               	movlw	1
  2540  0604                     u875:	
  2541  0604  1003               	clrc
  2542  0605  0DF3               	rlf	___awmod@divisor,f
  2543  0606  0DF4               	rlf	___awmod@divisor+1,f
  2544  0607  3EFF               	addlw	-1
  2545  0608  1D03               	skipz
  2546  0609  2E04               	goto	u875
  2547  060A                     l1401:	
  2548  060A  3001               	movlw	1
  2549  060B  00F7               	movwf	??___awmod
  2550  060C  0877               	movf	??___awmod,w
  2551  060D  07F8               	addwf	___awmod@counter,f
  2552  060E                     l1403:	
  2553  060E  1FF4               	btfss	___awmod@divisor+1,7
  2554  060F  2E11               	goto	u881
  2555  0610  2E12               	goto	u880
  2556  0611                     u881:	
  2557  0611  2E03               	goto	l1399
  2558  0612                     u880:	
  2559  0612                     l1405:	
  2560  0612  0874               	movf	___awmod@divisor+1,w
  2561  0613  0276               	subwf	___awmod@dividend+1,w
  2562  0614  1D03               	skipz
  2563  0615  2E18               	goto	u895
  2564  0616  0873               	movf	___awmod@divisor,w
  2565  0617  0275               	subwf	___awmod@dividend,w
  2566  0618                     u895:	
  2567  0618  1C03               	skipc
  2568  0619  2E1B               	goto	u891
  2569  061A  2E1C               	goto	u890
  2570  061B                     u891:	
  2571  061B  2E22               	goto	l1409
  2572  061C                     u890:	
  2573  061C                     l1407:	
  2574  061C  0873               	movf	___awmod@divisor,w
  2575  061D  02F5               	subwf	___awmod@dividend,f
  2576  061E  0874               	movf	___awmod@divisor+1,w
  2577  061F  1C03               	skipc
  2578  0620  03F6               	decf	___awmod@dividend+1,f
  2579  0621  02F6               	subwf	___awmod@dividend+1,f
  2580  0622                     l1409:	
  2581  0622  3001               	movlw	1
  2582  0623                     u905:	
  2583  0623  1003               	clrc
  2584  0624  0CF4               	rrf	___awmod@divisor+1,f
  2585  0625  0CF3               	rrf	___awmod@divisor,f
  2586  0626  3EFF               	addlw	-1
  2587  0627  1D03               	skipz
  2588  0628  2E23               	goto	u905
  2589  0629                     l1411:	
  2590  0629  3001               	movlw	1
  2591  062A  02F8               	subwf	___awmod@counter,f
  2592  062B  1D03               	btfss	3,2
  2593  062C  2E2E               	goto	u911
  2594  062D  2E2F               	goto	u910
  2595  062E                     u911:	
  2596  062E  2E12               	goto	l1405
  2597  062F                     u910:	
  2598  062F                     l1413:	
  2599  062F  0879               	movf	___awmod@sign,w
  2600  0630  1903               	btfsc	3,2
  2601  0631  2E33               	goto	u921
  2602  0632  2E34               	goto	u920
  2603  0633                     u921:	
  2604  0633  2E39               	goto	l1417
  2605  0634                     u920:	
  2606  0634                     l1415:	
  2607  0634  09F5               	comf	___awmod@dividend,f
  2608  0635  09F6               	comf	___awmod@dividend+1,f
  2609  0636  0AF5               	incf	___awmod@dividend,f
  2610  0637  1903               	skipnz
  2611  0638  0AF6               	incf	___awmod@dividend+1,f
  2612  0639                     l1417:	
  2613  0639  0876               	movf	___awmod@dividend+1,w
  2614  063A  00F4               	movwf	?___awmod+1
  2615  063B  0875               	movf	___awmod@dividend,w
  2616  063C  00F3               	movwf	?___awmod
  2617  063D                     l469:	
  2618  063D  0008               	return
  2619  063E                     __end_of___awmod:	
  2620                           
  2621                           	psect	text4
  2622  057C                     __ptext4:	
  2623 ;; *************** function ___awdiv *****************
  2624 ;; Defined at:
  2625 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  divisor         2    0[BANK0 ] int 
  2628 ;;  dividend        2    2[BANK0 ] int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  quotient        2    6[BANK0 ] int 
  2631 ;;  sign            1    5[BANK0 ] unsigned char 
  2632 ;;  counter         1    4[BANK0 ] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    0[BANK0 ] int 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       4       0       0       0
  2643 ;;      Locals:         0       4       0       0       0
  2644 ;;      Temps:          1       0       0       0       0
  2645 ;;      Totals:         1       8       0       0       0
  2646 ;;Total ram usage:        9 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_VAL
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function ___awdiv
  2658  057C                     ___awdiv:	
  2659  057C                     l1339:	
  2660                           ;incstack = 0
  2661                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2662                           
  2663  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2664  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2665  057E  01A5               	clrf	___awdiv@sign
  2666  057F                     l1341:	
  2667  057F  1FA1               	btfss	___awdiv@divisor+1,7
  2668  0580  2D82               	goto	u741
  2669  0581  2D83               	goto	u740
  2670  0582                     u741:	
  2671  0582  2D8A               	goto	l1347
  2672  0583                     u740:	
  2673  0583                     l1343:	
  2674  0583  09A0               	comf	___awdiv@divisor,f
  2675  0584  09A1               	comf	___awdiv@divisor+1,f
  2676  0585  0AA0               	incf	___awdiv@divisor,f
  2677  0586  1903               	skipnz
  2678  0587  0AA1               	incf	___awdiv@divisor+1,f
  2679  0588                     l1345:	
  2680  0588  01A5               	clrf	___awdiv@sign
  2681  0589  0AA5               	incf	___awdiv@sign,f
  2682  058A                     l1347:	
  2683  058A  1FA3               	btfss	___awdiv@dividend+1,7
  2684  058B  2D8D               	goto	u751
  2685  058C  2D8E               	goto	u750
  2686  058D                     u751:	
  2687  058D  2D97               	goto	l1353
  2688  058E                     u750:	
  2689  058E                     l1349:	
  2690  058E  09A2               	comf	___awdiv@dividend,f
  2691  058F  09A3               	comf	___awdiv@dividend+1,f
  2692  0590  0AA2               	incf	___awdiv@dividend,f
  2693  0591  1903               	skipnz
  2694  0592  0AA3               	incf	___awdiv@dividend+1,f
  2695  0593                     l1351:	
  2696  0593  3001               	movlw	1
  2697  0594  00FA               	movwf	??___awdiv
  2698  0595  087A               	movf	??___awdiv,w
  2699  0596  06A5               	xorwf	___awdiv@sign,f
  2700  0597                     l1353:	
  2701  0597  01A6               	clrf	___awdiv@quotient
  2702  0598  01A7               	clrf	___awdiv@quotient+1
  2703  0599                     l1355:	
  2704  0599  0820               	movf	___awdiv@divisor,w
  2705  059A  0421               	iorwf	___awdiv@divisor+1,w
  2706  059B  1903               	btfsc	3,2
  2707  059C  2D9E               	goto	u761
  2708  059D  2D9F               	goto	u760
  2709  059E                     u761:	
  2710  059E  2DD6               	goto	l1375
  2711  059F                     u760:	
  2712  059F                     l1357:	
  2713  059F  01A4               	clrf	___awdiv@counter
  2714  05A0  0AA4               	incf	___awdiv@counter,f
  2715  05A1  2DAD               	goto	l1363
  2716  05A2                     l1359:	
  2717  05A2  3001               	movlw	1
  2718  05A3                     u775:	
  2719  05A3  1003               	clrc
  2720  05A4  0DA0               	rlf	___awdiv@divisor,f
  2721  05A5  0DA1               	rlf	___awdiv@divisor+1,f
  2722  05A6  3EFF               	addlw	-1
  2723  05A7  1D03               	skipz
  2724  05A8  2DA3               	goto	u775
  2725  05A9                     l1361:	
  2726  05A9  3001               	movlw	1
  2727  05AA  00FA               	movwf	??___awdiv
  2728  05AB  087A               	movf	??___awdiv,w
  2729  05AC  07A4               	addwf	___awdiv@counter,f
  2730  05AD                     l1363:	
  2731  05AD  1FA1               	btfss	___awdiv@divisor+1,7
  2732  05AE  2DB0               	goto	u781
  2733  05AF  2DB1               	goto	u780
  2734  05B0                     u781:	
  2735  05B0  2DA2               	goto	l1359
  2736  05B1                     u780:	
  2737  05B1                     l1365:	
  2738  05B1  3001               	movlw	1
  2739  05B2                     u795:	
  2740  05B2  1003               	clrc
  2741  05B3  0DA6               	rlf	___awdiv@quotient,f
  2742  05B4  0DA7               	rlf	___awdiv@quotient+1,f
  2743  05B5  3EFF               	addlw	-1
  2744  05B6  1D03               	skipz
  2745  05B7  2DB2               	goto	u795
  2746  05B8  0821               	movf	___awdiv@divisor+1,w
  2747  05B9  0223               	subwf	___awdiv@dividend+1,w
  2748  05BA  1D03               	skipz
  2749  05BB  2DBE               	goto	u805
  2750  05BC  0820               	movf	___awdiv@divisor,w
  2751  05BD  0222               	subwf	___awdiv@dividend,w
  2752  05BE                     u805:	
  2753  05BE  1C03               	skipc
  2754  05BF  2DC1               	goto	u801
  2755  05C0  2DC2               	goto	u800
  2756  05C1                     u801:	
  2757  05C1  2DC9               	goto	l1371
  2758  05C2                     u800:	
  2759  05C2                     l1367:	
  2760  05C2  0820               	movf	___awdiv@divisor,w
  2761  05C3  02A2               	subwf	___awdiv@dividend,f
  2762  05C4  0821               	movf	___awdiv@divisor+1,w
  2763  05C5  1C03               	skipc
  2764  05C6  03A3               	decf	___awdiv@dividend+1,f
  2765  05C7  02A3               	subwf	___awdiv@dividend+1,f
  2766  05C8                     l1369:	
  2767  05C8  1426               	bsf	___awdiv@quotient,0
  2768  05C9                     l1371:	
  2769  05C9  3001               	movlw	1
  2770  05CA                     u815:	
  2771  05CA  1003               	clrc
  2772  05CB  0CA1               	rrf	___awdiv@divisor+1,f
  2773  05CC  0CA0               	rrf	___awdiv@divisor,f
  2774  05CD  3EFF               	addlw	-1
  2775  05CE  1D03               	skipz
  2776  05CF  2DCA               	goto	u815
  2777  05D0                     l1373:	
  2778  05D0  3001               	movlw	1
  2779  05D1  02A4               	subwf	___awdiv@counter,f
  2780  05D2  1D03               	btfss	3,2
  2781  05D3  2DD5               	goto	u821
  2782  05D4  2DD6               	goto	u820
  2783  05D5                     u821:	
  2784  05D5  2DB1               	goto	l1365
  2785  05D6                     u820:	
  2786  05D6                     l1375:	
  2787  05D6  0825               	movf	___awdiv@sign,w
  2788  05D7  1903               	btfsc	3,2
  2789  05D8  2DDA               	goto	u831
  2790  05D9  2DDB               	goto	u830
  2791  05DA                     u831:	
  2792  05DA  2DE0               	goto	l1379
  2793  05DB                     u830:	
  2794  05DB                     l1377:	
  2795  05DB  09A6               	comf	___awdiv@quotient,f
  2796  05DC  09A7               	comf	___awdiv@quotient+1,f
  2797  05DD  0AA6               	incf	___awdiv@quotient,f
  2798  05DE  1903               	skipnz
  2799  05DF  0AA7               	incf	___awdiv@quotient+1,f
  2800  05E0                     l1379:	
  2801  05E0  0827               	movf	___awdiv@quotient+1,w
  2802  05E1  00A1               	movwf	?___awdiv+1
  2803  05E2  0826               	movf	___awdiv@quotient,w
  2804  05E3  00A0               	movwf	?___awdiv
  2805  05E4                     l456:	
  2806  05E4  0008               	return
  2807  05E5                     __end_of___awdiv:	
  2808                           
  2809                           	psect	text5
  2810  06EB                     __ptext5:	
  2811 ;; *************** function _LCD_PRINT_WP *****************
  2812 ;; Defined at:
  2813 ;;		line 63 in file "LCD.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  x               2    0[BANK0 ] int 
  2816 ;;  y               2    2[BANK0 ] int 
  2817 ;;  frase           1    4[BANK0 ] PTR unsigned char 
  2818 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2819 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2820 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2821 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2822 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2823 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2824 ;;		 -> STR_2(17), STR_1(17), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  location        1    5[BANK0 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       5       0       0       0
  2837 ;;      Locals:         0       1       0       0       0
  2838 ;;      Temps:          1       0       0       0       0
  2839 ;;      Totals:         1       6       0       0       0
  2840 ;;Total ram usage:        7 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    5
  2843 ;; This function calls:
  2844 ;;		_LCD_CONTROL
  2845 ;;		_LCD_PRINT
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;;		_VAL
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function _LCD_PRINT_WP
  2854  06EB                     _LCD_PRINT_WP:	
  2855  06EB                     l1325:	
  2856                           ;incstack = 0
  2857                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2858                           
  2859  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2860  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2861  06ED  0322               	decf	LCD_PRINT_WP@y,w
  2862  06EE  0423               	iorwf	LCD_PRINT_WP@y+1,w
  2863  06EF  1D03               	btfss	3,2
  2864  06F0  2EF2               	goto	u731
  2865  06F1  2EF3               	goto	u730
  2866  06F2                     u731:	
  2867  06F2  2EF9               	goto	l1329
  2868  06F3                     u730:	
  2869  06F3                     l1327:	
  2870  06F3  0820               	movf	LCD_PRINT_WP@x,w
  2871  06F4  3E80               	addlw	128
  2872  06F5  00FA               	movwf	??_LCD_PRINT_WP
  2873  06F6  087A               	movf	??_LCD_PRINT_WP,w
  2874  06F7  00A5               	movwf	LCD_PRINT_WP@location
  2875  06F8  2EFE               	goto	l1335
  2876  06F9                     l1329:	
  2877  06F9                     l1331:	
  2878  06F9  0820               	movf	LCD_PRINT_WP@x,w
  2879  06FA  3EC0               	addlw	192
  2880  06FB  00FA               	movwf	??_LCD_PRINT_WP
  2881  06FC  087A               	movf	??_LCD_PRINT_WP,w
  2882  06FD  00A5               	movwf	LCD_PRINT_WP@location
  2883  06FE                     l1335:	
  2884  06FE  0825               	movf	LCD_PRINT_WP@location,w
  2885  06FF  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  2886  0704                     l1337:	
  2887  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0706  0824               	movf	LCD_PRINT_WP@frase,w
  2890  0707  120A  118A  270D  120A  118A  	fcall	_LCD_PRINT
  2891  070C                     l158:	
  2892  070C  0008               	return
  2893  070D                     __end_of_LCD_PRINT_WP:	
  2894                           
  2895                           	psect	text6
  2896  070D                     __ptext6:	
  2897 ;; *************** function _LCD_PRINT *****************
  2898 ;; Defined at:
  2899 ;;		line 56 in file "LCD.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  data            1    wreg     PTR unsigned char 
  2902 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2903 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2904 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2905 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2906 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2907 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2908 ;;		 -> STR_2(17), STR_1(17), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  data            1    9[COMMON] PTR unsigned char 
  2911 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2912 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2913 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2914 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2915 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2916 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2917 ;;		 -> STR_2(17), STR_1(17), 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       0       0       0       0
  2928 ;;      Locals:         1       0       0       0       0
  2929 ;;      Temps:          1       0       0       0       0
  2930 ;;      Totals:         2       0       0       0       0
  2931 ;;Total ram usage:        2 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    4
  2934 ;; This function calls:
  2935 ;;		_LCD_DATO
  2936 ;; This function is called by:
  2937 ;;		_LCD_PRINT_WP
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           
  2942                           ;psect for function _LCD_PRINT
  2943  070D                     _LCD_PRINT:	
  2944                           
  2945                           ;incstack = 0
  2946                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2947                           ;LCD_PRINT@data stored from wreg
  2948  070D  00F9               	movwf	LCD_PRINT@data
  2949  070E                     l1317:	
  2950  070E  2F1F               	goto	l1323
  2951  070F                     l1319:	
  2952  070F  0879               	movf	LCD_PRINT@data,w
  2953  0710  0084               	movwf	4
  2954  0711  120A  118A  2500  120A  118A  	fcall	stringdir
  2955  0716  120A  118A  276E  120A  118A  	fcall	_LCD_DATO
  2956  071B                     l1321:	
  2957  071B  3001               	movlw	1
  2958  071C  00F8               	movwf	??_LCD_PRINT
  2959  071D  0878               	movf	??_LCD_PRINT,w
  2960  071E  07F9               	addwf	LCD_PRINT@data,f
  2961  071F                     l1323:	
  2962  071F  0879               	movf	LCD_PRINT@data,w
  2963  0720  0084               	movwf	4
  2964  0721  120A  118A  2500  120A  118A  	fcall	stringdir
  2965  0726  3A00               	xorlw	0
  2966  0727  1D03               	skipz
  2967  0728  2F2A               	goto	u721
  2968  0729  2F2B               	goto	u720
  2969  072A                     u721:	
  2970  072A  2F0F               	goto	l1319
  2971  072B                     u720:	
  2972  072B                     l148:	
  2973  072B  0008               	return
  2974  072C                     __end_of_LCD_PRINT:	
  2975                           
  2976                           	psect	text7
  2977  076E                     __ptext7:	
  2978 ;; *************** function _LCD_DATO *****************
  2979 ;; Defined at:
  2980 ;;		line 45 in file "LCD.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  comando         1    wreg     unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  comando         1    7[COMMON] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         1       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0
  2997 ;;      Totals:         1       0       0       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    3
  3001 ;; This function calls:
  3002 ;;		_LCD_PULSE
  3003 ;;		_delay_us
  3004 ;; This function is called by:
  3005 ;;		_LCD_PRINT
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function _LCD_DATO
  3011  076E                     _LCD_DATO:	
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  3015                           ;LCD_DATO@comando stored from wreg
  3016  076E  00F7               	movwf	LCD_DATO@comando
  3017  076F                     l1301:	
  3018  076F  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0770  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0771  1409               	bsf	9,0	;volatile
  3021  0772                     l1303:	
  3022  0772  0877               	movf	LCD_DATO@comando,w
  3023  0773  0088               	movwf	8	;volatile
  3024  0774                     l1305:	
  3025  0774  120A  118A  275B  120A  118A  	fcall	_LCD_PULSE
  3026  0779                     l1307:	
  3027  0779  3032               	movlw	50
  3028  077A  120A  118A  272C  120A  118A  	fcall	_delay_us
  3029  077F                     l139:	
  3030  077F  0008               	return
  3031  0780                     __end_of_LCD_DATO:	
  3032                           
  3033                           	psect	text8
  3034  07A1                     __ptext8:	
  3035 ;; *************** function _LCD_RH *****************
  3036 ;; Defined at:
  3037 ;;		line 61 in file "LCD.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    4
  3058 ;; This function calls:
  3059 ;;		_LCD_CONTROL
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           
  3066                           ;psect for function _LCD_RH
  3067  07A1                     _LCD_RH:	
  3068  07A1                     l1479:	
  3069                           ;incstack = 0
  3070                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3071                           
  3072  07A1  3002               	movlw	2
  3073  07A2  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  3074  07A7                     l151:	
  3075  07A7  0008               	return
  3076  07A8                     __end_of_LCD_RH:	
  3077                           
  3078                           	psect	text9
  3079  07A8                     __ptext9:	
  3080 ;; *************** function _LCD_CLEAR *****************
  3081 ;; Defined at:
  3082 ;;		line 52 in file "LCD.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    4
  3103 ;; This function calls:
  3104 ;;		_LCD_CONTROL
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _LCD_CLEAR
  3112  07A8                     _LCD_CLEAR:	
  3113  07A8                     l1477:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3116                           
  3117  07A8  3001               	movlw	1
  3118  07A9  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  3119  07AE                     l142:	
  3120  07AE  0008               	return
  3121  07AF                     __end_of_LCD_CLEAR:	
  3122                           
  3123                           	psect	text10
  3124  069E                     __ptext10:	
  3125 ;; *************** function _INIT_LCD *****************
  3126 ;; Defined at:
  3127 ;;		line 20 in file "LCD.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    4
  3148 ;; This function calls:
  3149 ;;		_LCD_CONTROL
  3150 ;;		_delay_ms
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _INIT_LCD
  3158  069E                     _INIT_LCD:	
  3159  069E                     l1459:	
  3160                           ;incstack = 0
  3161                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3162                           
  3163  069E  1683               	bsf	3,5	;RP0=1, select bank1
  3164  069F  1303               	bcf	3,6	;RP1=0, select bank1
  3165  06A0  1009               	bcf	9,0	;volatile
  3166  06A1  1089               	bcf	9,1	;volatile
  3167  06A2                     l1461:	
  3168  06A2  0188               	clrf	8	;volatile
  3169  06A3                     l1463:	
  3170  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3171  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3172  06A5  1009               	bcf	9,0	;volatile
  3173  06A6                     l1465:	
  3174  06A6  1089               	bcf	9,1	;volatile
  3175  06A7  0188               	clrf	8	;volatile
  3176  06A8                     l1467:	
  3177  06A8  3032               	movlw	50
  3178  06A9  120A  118A  2671  120A  118A  	fcall	_delay_ms
  3179  06AE                     l1469:	
  3180  06AE  3002               	movlw	2
  3181  06AF  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  3182  06B4                     l1471:	
  3183  06B4  3038               	movlw	56
  3184  06B5  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  3185  06BA                     l1473:	
  3186  06BA  300C               	movlw	12
  3187  06BB  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  3188  06C0                     l1475:	
  3189  06C0  3006               	movlw	6
  3190  06C1  120A  118A  2780  120A  118A  	fcall	_LCD_CONTROL
  3191  06C6                     l130:	
  3192  06C6  0008               	return
  3193  06C7                     __end_of_INIT_LCD:	
  3194                           
  3195                           	psect	text11
  3196  0780                     __ptext11:	
  3197 ;; *************** function _LCD_CONTROL *****************
  3198 ;; Defined at:
  3199 ;;		line 33 in file "LCD.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  dato            1    wreg     unsigned char 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  dato            1    9[COMMON] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       0       0       0       0
  3214 ;;      Locals:         1       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0
  3216 ;;      Totals:         1       0       0       0       0
  3217 ;;Total ram usage:        1 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    3
  3220 ;; This function calls:
  3221 ;;		_LCD_PULSE
  3222 ;;		_delay_ms
  3223 ;; This function is called by:
  3224 ;;		_INIT_LCD
  3225 ;;		_LCD_CLEAR
  3226 ;;		_LCD_RH
  3227 ;;		_LCD_PRINT_WP
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _LCD_CONTROL
  3233  0780                     _LCD_CONTROL:	
  3234                           
  3235                           ;incstack = 0
  3236                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3237                           ;LCD_CONTROL@dato stored from wreg
  3238  0780  00F9               	movwf	LCD_CONTROL@dato
  3239  0781                     l1309:	
  3240  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0783  1009               	bcf	9,0	;volatile
  3243  0784                     l1311:	
  3244  0784  0879               	movf	LCD_CONTROL@dato,w
  3245  0785  0088               	movwf	8	;volatile
  3246  0786                     l1313:	
  3247  0786  120A  118A  275B  120A  118A  	fcall	_LCD_PULSE
  3248  078B                     l1315:	
  3249  078B  3002               	movlw	2
  3250  078C  120A  118A  2671  120A  118A  	fcall	_delay_ms
  3251  0791                     l133:	
  3252  0791  0008               	return
  3253  0792                     __end_of_LCD_CONTROL:	
  3254                           
  3255                           	psect	text12
  3256  0671                     __ptext12:	
  3257 ;; *************** function _delay_ms *****************
  3258 ;; Defined at:
  3259 ;;		line 17 in file "DELAYS.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  dms             1    wreg     unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  dms             1    4[COMMON] unsigned char 
  3264 ;;  j               2    7[COMMON] int 
  3265 ;;  i               2    5[COMMON] int 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, btemp+1
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         5       0       0       0       0
  3277 ;;      Temps:          1       0       0       0       0
  3278 ;;      Totals:         6       0       0       0       0
  3279 ;;Total ram usage:        6 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_main
  3286 ;;		_INIT_LCD
  3287 ;;		_LCD_CONTROL
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _delay_ms
  3293  0671                     _delay_ms:	
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  3297                           ;delay_ms@dms stored from wreg
  3298  0671  00F4               	movwf	delay_ms@dms
  3299  0672                     l1287:	
  3300                           
  3301                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++);DELAYS.c: 18:     for (int i = 0; i<dms;i+
      +                          +)
  3302  0672  01F5               	clrf	delay_ms@i
  3303  0673  01F6               	clrf	delay_ms@i+1
  3304  0674  2E90               	goto	l93
  3305  0675                     l1289:	
  3306                           
  3307                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}};DELAYS.c: 19:     {for (int j = 0; j
      +                          <255 ;j++){}}}
  3308  0675  01F7               	clrf	delay_ms@j
  3309  0676  01F8               	clrf	delay_ms@j+1
  3310  0677                     l1295:	
  3311  0677  3001               	movlw	1
  3312  0678  07F7               	addwf	delay_ms@j,f
  3313  0679  1803               	skipnc
  3314  067A  0AF8               	incf	delay_ms@j+1,f
  3315  067B  3000               	movlw	0
  3316  067C  07F8               	addwf	delay_ms@j+1,f
  3317  067D                     l1297:	
  3318  067D  0878               	movf	delay_ms@j+1,w
  3319  067E  3A80               	xorlw	128
  3320  067F  00FF               	movwf	btemp+1
  3321  0680  3080               	movlw	128
  3322  0681  027F               	subwf	btemp+1,w
  3323  0682  1D03               	skipz
  3324  0683  2E86               	goto	u705
  3325  0684  30FF               	movlw	255
  3326  0685  0277               	subwf	delay_ms@j,w
  3327  0686                     u705:	
  3328  0686  1C03               	skipc
  3329  0687  2E89               	goto	u701
  3330  0688  2E8A               	goto	u700
  3331  0689                     u701:	
  3332  0689  2E77               	goto	l1295
  3333  068A                     u700:	
  3334  068A                     l1299:	
  3335  068A  3001               	movlw	1
  3336  068B  07F5               	addwf	delay_ms@i,f
  3337  068C  1803               	skipnc
  3338  068D  0AF6               	incf	delay_ms@i+1,f
  3339  068E  3000               	movlw	0
  3340  068F  07F6               	addwf	delay_ms@i+1,f
  3341  0690                     l93:	
  3342  0690  0876               	movf	delay_ms@i+1,w
  3343  0691  3A80               	xorlw	128
  3344  0692  00F3               	movwf	??_delay_ms
  3345  0693  3080               	movlw	128
  3346  0694  0273               	subwf	??_delay_ms,w
  3347  0695  1D03               	skipz
  3348  0696  2E99               	goto	u715
  3349  0697  0874               	movf	delay_ms@dms,w
  3350  0698  0275               	subwf	delay_ms@i,w
  3351  0699                     u715:	
  3352  0699  1C03               	skipc
  3353  069A  2E9C               	goto	u711
  3354  069B  2E9D               	goto	u710
  3355  069C                     u711:	
  3356  069C  2E75               	goto	l1289
  3357  069D                     u710:	
  3358  069D                     l98:	
  3359  069D  0008               	return
  3360  069E                     __end_of_delay_ms:	
  3361                           
  3362                           	psect	text13
  3363  075B                     __ptext13:	
  3364 ;; *************** function _LCD_PULSE *****************
  3365 ;; Defined at:
  3366 ;;		line 39 in file "LCD.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    2
  3387 ;; This function calls:
  3388 ;;		_delay_us
  3389 ;; This function is called by:
  3390 ;;		_LCD_CONTROL
  3391 ;;		_LCD_DATO
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _LCD_PULSE
  3397  075B                     _LCD_PULSE:	
  3398  075B                     l1281:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  3401                           
  3402  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3403  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3404  075D  1489               	bsf	9,1	;volatile
  3405  075E                     l1283:	
  3406  075E  3005               	movlw	5
  3407  075F  120A  118A  272C  120A  118A  	fcall	_delay_us
  3408  0764                     l1285:	
  3409  0764  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0765  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0766  1089               	bcf	9,1	;volatile
  3412  0767  3005               	movlw	5
  3413  0768  120A  118A  272C  120A  118A  	fcall	_delay_us
  3414  076D                     l136:	
  3415  076D  0008               	return
  3416  076E                     __end_of_LCD_PULSE:	
  3417                           
  3418                           	psect	text14
  3419  072C                     __ptext14:	
  3420 ;; *************** function _delay_us *****************
  3421 ;; Defined at:
  3422 ;;		line 22 in file "DELAYS.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  ams             1    wreg     unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  ams             1    4[COMMON] unsigned char 
  3427 ;;  j               2    5[COMMON] int 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         3       0       0       0       0
  3439 ;;      Temps:          1       0       0       0       0
  3440 ;;      Totals:         4       0       0       0       0
  3441 ;;Total ram usage:        4 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_LCD_PULSE
  3448 ;;		_LCD_DATO
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _delay_us
  3454  072C                     _delay_us:	
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in _delay_us: [wreg+status,2]
  3458                           ;delay_us@ams stored from wreg
  3459  072C  00F4               	movwf	delay_us@ams
  3460  072D                     l1277:	
  3461                           
  3462                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){;DELAYS.c: 23:     for (int j = 0; j<ams;j
      +                          ++){
  3463  072D  01F5               	clrf	delay_us@j
  3464  072E  01F6               	clrf	delay_us@j+1
  3465  072F  2F37               	goto	l101
  3466  0730                     l102:	
  3467  0730  0000               	nop	;# 
  3468  0731                     l1279:	
  3469  0731  3001               	movlw	1
  3470  0732  07F5               	addwf	delay_us@j,f
  3471  0733  1803               	skipnc
  3472  0734  0AF6               	incf	delay_us@j+1,f
  3473  0735  3000               	movlw	0
  3474  0736  07F6               	addwf	delay_us@j+1,f
  3475  0737                     l101:	
  3476  0737  0876               	movf	delay_us@j+1,w
  3477  0738  3A80               	xorlw	128
  3478  0739  00F3               	movwf	??_delay_us
  3479  073A  3080               	movlw	128
  3480  073B  0273               	subwf	??_delay_us,w
  3481  073C  1D03               	skipz
  3482  073D  2F40               	goto	u695
  3483  073E  0874               	movf	delay_us@ams,w
  3484  073F  0275               	subwf	delay_us@j,w
  3485  0740                     u695:	
  3486  0740  1C03               	skipc
  3487  0741  2F43               	goto	u691
  3488  0742  2F44               	goto	u690
  3489  0743                     u691:	
  3490  0743  2F30               	goto	l102
  3491  0744                     u690:	
  3492  0744                     l104:	
  3493  0744  0008               	return
  3494  0745                     __end_of_delay_us:	
  3495                           
  3496                           	psect	text15
  3497  0745                     __ptext15:	
  3498 ;; *************** function _CONFIG_USART *****************
  3499 ;; Defined at:
  3500 ;;		line 4 in file "USART.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  BAUD            4    3[COMMON] long 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         4       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         4       0       0       0       0
  3518 ;;Total ram usage:        4 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _CONFIG_USART
  3530  0745                     _CONFIG_USART:	
  3531  0745                     l1481:	
  3532                           ;incstack = 0
  3533                           ; Regs used in _CONFIG_USART: [wreg]
  3534                           
  3535                           
  3536                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  3537  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0746  1303               	bcf	3,6	;RP1=0, select bank1
  3539  0747  1307               	bcf	7,6	;volatile
  3540                           
  3541                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  3542  0748  1787               	bsf	7,7	;volatile
  3543                           
  3544                           ;USART.c: 7:     TXSTAbits.SYNC = 0;
  3545  0749  1218               	bcf	24,4	;volatile
  3546                           
  3547                           ;USART.c: 8:     RCSTAbits.SPEN = 1;
  3548  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3549  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3550  074C  1798               	bsf	24,7	;volatile
  3551                           
  3552                           ;USART.c: 9:     TXSTAbits.BRGH = 1;
  3553  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3554  074E  1303               	bcf	3,6	;RP1=0, select bank1
  3555  074F  1518               	bsf	24,2	;volatile
  3556                           
  3557                           ;USART.c: 10:     TXSTAbits.TX9 = 0;
  3558  0750  1318               	bcf	24,6	;volatile
  3559                           
  3560                           ;USART.c: 11:     TXSTAbits.TXEN = 1;
  3561  0751  1698               	bsf	24,5	;volatile
  3562                           
  3563                           ;USART.c: 12:     RCSTAbits.RC9 = 0;
  3564  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0753  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0754  1318               	bcf	24,6	;volatile
  3567                           
  3568                           ;USART.c: 13:     RCSTAbits.CREN = 1;
  3569  0755  1618               	bsf	24,4	;volatile
  3570  0756                     l1483:	
  3571                           
  3572                           ;USART.c: 14:     SPBRG = 25;}
  3573  0756  3019               	movlw	25
  3574  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3576  0759  0099               	movwf	25	;volatile
  3577  075A                     l211:	
  3578  075A  0008               	return
  3579  075B                     __end_of_CONFIG_USART:	
  3580                           
  3581                           	psect	text16
  3582  0792                     __ptext16:	
  3583 ;; *************** function _CONFIG_ADC *****************
  3584 ;; Defined at:
  3585 ;;		line 15 in file "ADC.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		None
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _CONFIG_ADC
  3615  0792                     _CONFIG_ADC:	
  3616  0792                     l1485:	
  3617                           ;incstack = 0
  3618                           ; Regs used in _CONFIG_ADC: []
  3619                           
  3620                           
  3621                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  3622  0792  1683               	bsf	3,5	;RP0=1, select bank1
  3623  0793  1303               	bcf	3,6	;RP1=0, select bank1
  3624  0794  139F               	bcf	31,7	;volatile
  3625                           
  3626                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  3627  0795  129F               	bcf	31,5	;volatile
  3628                           
  3629                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  3630  0796  121F               	bcf	31,4	;volatile
  3631                           
  3632                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  3633  0797  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0798  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0799  139F               	bcf	31,7	;volatile
  3636                           
  3637                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  3638  079A  171F               	bsf	31,6	;volatile
  3639                           
  3640                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  3641  079B  129F               	bcf	31,5	;volatile
  3642                           
  3643                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  3644  079C  121F               	bcf	31,4	;volatile
  3645                           
  3646                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  3647  079D  119F               	bcf	31,3	;volatile
  3648                           
  3649                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  3650  079E  111F               	bcf	31,2	;volatile
  3651                           
  3652                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  3653  079F  141F               	bsf	31,0	;volatile
  3654  07A0                     l111:	
  3655                           ;ADC.c: 26:     return;
  3656                           
  3657  07A0  0008               	return
  3658  07A1                     __end_of_CONFIG_ADC:	
  3659                           
  3660                           	psect	text17
  3661  063E                     __ptext17:	
  3662 ;; *************** function _isr *****************
  3663 ;; Defined at:
  3664 ;;		line 32 in file "main.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0
  3680 ;;      Temps:          3       0       0       0       0
  3681 ;;      Totals:         3       0       0       0       0
  3682 ;;Total ram usage:        3 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		Interrupt level 1
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _isr
  3693  063E                     _isr:	
  3694  063E                     i1l1645:	
  3695                           
  3696                           ;main.c: 33:     if (INTCONbits.T0IF == 1){
  3697  063E  1D0B               	btfss	11,2	;volatile
  3698  063F  2E41               	goto	u125_21
  3699  0640  2E42               	goto	u125_20
  3700  0641                     u125_21:	
  3701  0641  2E6A               	goto	i1l72
  3702  0642                     u125_20:	
  3703  0642                     i1l1647:	
  3704                           
  3705                           ;main.c: 34:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  3706  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0644  084C               	movf	_cambiante,w
  3709  0645  1D03               	btfss	3,2
  3710  0646  2E48               	goto	u126_21
  3711  0647  2E49               	goto	u126_20
  3712  0648                     u126_21:	
  3713  0648  2E4A               	goto	i1l1651
  3714  0649                     u126_20:	
  3715  0649                     i1l1649:	
  3716  0649  151F               	bsf	31,2	;volatile
  3717  064A                     i1l1651:	
  3718                           
  3719                           ;main.c: 35:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  3720  064A  034C               	decf	_cambiante,w
  3721  064B  1D03               	btfss	3,2
  3722  064C  2E4E               	goto	u127_21
  3723  064D  2E4F               	goto	u127_20
  3724  064E                     u127_21:	
  3725  064E  2E50               	goto	i1l1655
  3726  064F                     u127_20:	
  3727  064F                     i1l1653:	
  3728  064F  111F               	bcf	31,2	;volatile
  3729  0650                     i1l1655:	
  3730                           
  3731                           ;main.c: 36:         cambiante++;
  3732  0650  3001               	movlw	1
  3733  0651  00F0               	movwf	??_isr
  3734  0652  0870               	movf	??_isr,w
  3735  0653  07CC               	addwf	_cambiante,f
  3736                           
  3737                           ;main.c: 37:         sensor++;
  3738  0654  3001               	movlw	1
  3739  0655  00F0               	movwf	??_isr
  3740  0656  0870               	movf	??_isr,w
  3741  0657  07C8               	addwf	_sensor,f
  3742  0658                     i1l1657:	
  3743                           
  3744                           ;main.c: 38:         if (cambiante > 1){cambiante = 0;}
  3745  0658  3002               	movlw	2
  3746  0659  024C               	subwf	_cambiante,w
  3747  065A  1C03               	skipc
  3748  065B  2E5D               	goto	u128_21
  3749  065C  2E5E               	goto	u128_20
  3750  065D                     u128_21:	
  3751  065D  2E5F               	goto	i1l1661
  3752  065E                     u128_20:	
  3753  065E                     i1l1659:	
  3754  065E  01CC               	clrf	_cambiante
  3755  065F                     i1l1661:	
  3756                           
  3757                           ;main.c: 39:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  3758  065F  189F               	btfsc	31,1	;volatile
  3759  0660  2E62               	goto	u129_21
  3760  0661  2E63               	goto	u129_20
  3761  0662                     u129_21:	
  3762  0662  2E65               	goto	i1l71
  3763  0663                     u129_20:	
  3764  0663                     i1l1663:	
  3765  0663  01CB               	clrf	_eADC
  3766  0664  0ACB               	incf	_eADC,f
  3767  0665                     i1l71:	
  3768                           
  3769                           ;main.c: 40:         INTCONbits.T0IF = 0;
  3770  0665  110B               	bcf	11,2	;volatile
  3771  0666                     i1l1665:	
  3772                           
  3773                           ;main.c: 41:         TMR0 = 130;
  3774  0666  3082               	movlw	130
  3775  0667  0081               	movwf	1	;volatile
  3776  0668                     i1l1667:	
  3777                           
  3778                           ;main.c: 42:         eADC = 1;
  3779  0668  01CB               	clrf	_eADC
  3780  0669  0ACB               	incf	_eADC,f
  3781  066A                     i1l72:	
  3782  066A  0872               	movf	??_isr+2,w
  3783  066B  008A               	movwf	10
  3784  066C  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  3785  066D  0083               	movwf	3
  3786  066E  0EFE               	swapf	btemp,f
  3787  066F  0E7E               	swapf	btemp,w
  3788  0670  0009               	retfie
  3789  0671                     __end_of_isr:	
  3790  007E                     btemp	set	126	;btemp
  3791  007E                     wtemp0	set	126
  3792                           
  3793                           	psect	intentry
  3794  0004                     __pintentry:	
  3795                           ;incstack = 0
  3796                           ; Regs used in _isr: [wreg+status,2+status,0]
  3797                           
  3798  0004                     interrupt_function:	
  3799  007E                     saved_w	set	btemp
  3800  0004  00FE               	movwf	btemp
  3801  0005  0E03               	swapf	3,w
  3802  0006  00F1               	movwf	??_isr+1
  3803  0007  080A               	movf	10,w
  3804  0008  00F2               	movwf	??_isr+2
  3805  0009  120A  118A  2E3E   	ljmp	_isr


Data Sizes:
    Strings     118
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     33      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_PRINT_WP
    _VAL->_LCD_PRINT_WP
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_RH->_LCD_CONTROL
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VAL
    _VAL->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17124
                                             32 BANK0      1     1      0
                         _CONFIG_ADC
                       _CONFIG_USART
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                                _VAL
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VAL                                                 24    23      1    9947
                                              8 BANK0     24    23      1
                       _LCD_PRINT_WP
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT_WP                                         7     2      5    6437
                                             10 COMMON     1     1      0
                                              0 BANK0      6     1      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (3) _LCD_PRINT                                            2     2      0     192
                                              8 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (4) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     252
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_CONTROL                                          1     1      0     160
                                              9 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0      92
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_USART                                         4     0      4      76
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _CONFIG_USART
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _VAL
     _LCD_PRINT_WP
       _LCD_CONTROL
         _LCD_PULSE
           _delay_us
         _delay_ms
       _LCD_PRINT
         _LCD_DATO
           _LCD_PULSE
             _delay_us
           _delay_us
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 13 08:19:44 2020

                       pc 0002               __CFG_CP$OFF 0000                        l90 06EA  
                      l84 04B2                        l93 0690                        l98 069D  
            ___awdiv@sign 0025                        fsr 0004                       l101 0737  
                     l102 0730                       l111 07A0                       l104 0744  
                     l130 06C6                       l211 075A                       l133 0791  
                     l142 07AE                       l151 07A7                       l136 076D  
                     l139 077F                       l148 072B                       l158 070C  
                     l196 03AA                       l456 05E4                       l469 063D  
            __CFG_CPD$OFF 0000                       u700 068A                       u701 0689  
                     u710 069D                       u711 069C                       u720 072B  
                     u800 05C2                       u705 0686                       u721 072A  
                     u801 05C1                       u730 06F3                       u715 0699  
                     u731 06F2                       u820 05D6                       u740 0583  
                     u821 05D5                       u805 05BE                       u741 0582  
                     u830 05DB                       u750 058E                       u910 062F  
                     _VAL 0021                       u831 05DA                       u815 05CA  
                     u751 058D                       u911 062E                       u760 059F  
                     u920 0634                       u840 05EA                       u761 059E  
                     u921 0633                       u905 0623                       u841 05E9  
                     u690 0744                       u850 05F5                       u930 002A  
                     u691 0743                       u851 05F4                       u931 0029  
                     u780 05B1                       u860 0600                       u940 00DA  
                     u781 05B0                       u861 05FF                       u950 00F9  
                     u695 0740                       u775 05A3                       u951 00F8  
                     u880 0612                       u960 010D                       u881 0611  
                     u961 010C                       u890 061C                       u970 0115  
                     u795 05B2                       u891 061B                       u875 0604  
                     u971 0114                       u980 0120                       u981 011F  
                     u990 0129                       u895 0618                       u991 0128  
                     _isr 063E                       _sen 0047                       fsr0 0004  
                     indf 0000              ___awmod@sign 0079              __CFG_LVP$OFF 0000  
                    ?_VAL 0028                      VAL@i 0039                      l1301 076F  
                    l1311 0784                      l1303 0772                      l1313 0786  
                    l1305 0774                      l1321 071B                      l1401 060A  
                    l1315 078B                      l1307 0779                      l1323 071F  
                    l1331 06F9                      l1411 0629                      l1403 060E  
                    l1309 0781                      l1317 070E                      l1325 06EB  
                    l1341 057F                      l1405 0612                      l1413 062F  
                    l1501 00AB                      l1421 06C7                      l1319 070F  
                    l1335 06FE                      l1327 06F3                      l1351 0593  
                    l1343 0583                      l1415 0634                      l1407 061C  
                    l1511 00ED                      l1503 00C1                      l1431 06D5  
                    l1423 06CF                      l1281 075B                      l1337 0704  
                    l1329 06F9                      l1361 05A9                      l1353 0597  
                    l1345 0588                      l1417 0639                      l1409 0622  
                    l1601 0281                      l1521 00FB                      l1513 00F4  
                    l1505 00D6                      l1441 06DC                      l1433 06D6  
                    l1425 06D0                      l1283 075E                      l1371 05C9  
                    l1363 05AD                      l1355 0599                      l1347 058A  
                    l1339 057C                      l1611 02BD                      l1603 0286  
                    l1531 0119                      l1523 0107                      l1515 00F9  
                    l1507 00DF                      l1451 06E3                      l1443 06DF  
                    l1435 06D9                      l1427 06D3                      l1277 072D  
                    l1285 0764                      l1461 06A2                      l1373 05D0  
                    l1365 05B1                      l1357 059F                      l1349 058E  
                    l1621 0309                      l1613 02D1                      l1605 029A  
                    l1541 0144                      l1533 0120                      l1525 010D  
                    l1509 00E6                      l1453 06E4                      l1445 06E0  
                    l1437 06DA                      l1429 06D4                      l1701 0433  
                    l1279 0731                      l1295 0677                      l1287 0672  
                    l1471 06B4                      l1463 06A3                      l1367 05C2  
                    l1359 05A2                      l1375 05D6                      l1391 05F1  
                    l1383 05E5                      l1631 0349                      l1623 0311  
                    l1615 02D9                      l1607 02A1                      l1551 0190  
                    l1543 0158                      l1535 0124                      l1527 010F  
                    l1455 06E5                      l1447 06E1                      l1439 06DB  
                    l1711 0470                      l1703 0445                      l1481 0745  
                    l1297 067D                      l1289 0675                      l1473 06BA  
                    l1465 06A6                      l1377 05DB                      l1369 05C8  
                    l1393 05F5                      l1385 05E6                      l1641 0395  
                    l1633 035D                      l1625 0325                      l1617 02ED  
                    l1609 02B5                      l1561 01D0                      l1553 0198  
                    l1545 0160                      l1537 0129                      l1529 0115  
                    l1457 06E6                      l1449 06E2                      l1721 0483  
                    l1713 0471                      l1705 0457                      l1483 0756  
                    l1299 068A                      l1475 06C0                      l1467 06A8  
                    l1459 069E                      l1379 05E0                      l1395 05FA  
                    l1387 05EA                      l1643 039D                      l1635 0365  
                    l1627 032D                      l1619 02F5                      l1571 021C  
                    l1563 01E4                      l1555 01AC                      l1547 0174  
                    l1539 013D                      l1491 002E                      l1731 049D  
                    l1715 0476                      l1723 0484                      l1707 0464  
                    l1485 0792                      l1469 06AE                      l1477 07A8  
                    l1397 0600                      l1389 05EF                      l1637 0379  
                    l1629 0341                      l1581 0254                      l1573 0224  
                    l1565 01EC                      l1557 01B4                      l1549 017C  
                    l1493 002E                      l1733 04A5                      l1725 048A  
                    l1717 047A                      l1709 0469                      l1479 07A1  
                    l1399 0603                      l1639 0381                      l1591 0268  
                    l1575 0238                      l1567 0200                      l1559 01C8  
                    l1495 002F                      l1487 0024                      l1735 04AB  
                    l1727 048F                      l1719 047F                      l1671 03B0  
                    l1593 026C                      l1577 0240                      l1569 0208  
                    l1497 0059                      l1489 002A                      l1737 04B1  
                    l1729 0496                      l1681 03D7                      l1673 03B5  
                    l1595 0272                      l1587 0256                      l1579 024D  
                    l1499 006F                      l1691 040B                      l1683 03E9  
                    l1675 03BA                      l1597 0276                      l1589 0262  
                    l1693 0411                      l1685 03EF                      l1677 03BF  
                    l1669 03AB                      l1599 027D                      l1695 0423  
                    l1687 03F4                      l1679 03D1                      l1697 0429  
                    l1689 03F9                      l1699 042E                      ?_isr 0070  
                    STR_1 0528                      STR_2 054A                      STR_3 0539  
                    STR_4 0506                      STR_5 055B                      STR_6 0517  
                    STR_7 0526                      STR_8 056C                      STR_9 056E  
                    u1000 0144                      u1001 0143                      u1010 0160  
                    u1011 015F                      u1100 0254                      u1020 017C  
                    u1101 0253                      u1021 017B                      u1110 0268  
                    u1030 0198                      u1111 0267                      u1031 0197  
                    u1200 032D                      u1120 0272                      u1040 01B4  
                    u1201 032C                      u1121 0271                      u1041 01B3  
                    u1210 0349                      u1130 027D                      u1050 01D0  
                    u1211 0348                      u1131 027C                      u1051 01CF  
                    u1220 0365                      u1140 0286                      u1060 01EC  
                    u1300 0470                      u1221 0364                      u1141 0285  
                    u1061 01EB                      u1301 046F                      u1230 0381  
                    u1150 02A1                      u1070 0208                      u1310 0476  
                    u1231 0380                      u1151 02A0                      u1071 0207  
                    u1311 0475                      u1240 03AA                      u1160 02BD  
                    u1080 0224                      u1320 047F                      u1241 03A9  
                    u1161 02BC                      u1081 0223                      u1321 047E  
                    u1170 02D9                      u1090 024D                      u1330 048A  
                    u1171 02D8                      u1091 024C                      u1331 0489  
                    u1180 02F5                      u1340 048F                      u1245 03A6  
                    u1181 02F4                      u1341 048E                      u1190 0311  
                    u1350 049D                      u1191 0310                      u1095 0249  
                    u1351 049C                      u1360 04B1                      u1361 04B0  
                    i1l71 0665                      i1l72 066A        __size_of_LCD_CLEAR 0007  
                    _TMR0 0001                      _eADC 004B              __CFG_WRT$OFF 0000  
          ??_LCD_PRINT_WP 007A        __size_of_LCD_PRINT 001F        __size_of_LCD_PULSE 0013  
                    _main 03AB                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F                     ??_VAL 0029  
        __end_of_LCD_DATO 0780                     ??_isr 0070      __end_of_CONFIG_USART 075B  
        __end_of_INIT_LCD 06C7                     ?_main 0070           __end_of___awdiv 05E5  
                   STR_10 0537                     STR_11 0570                     STR_20 0537  
                   STR_12 0572                     STR_21 0570                     STR_13 0574  
                   STR_22 0572                     STR_14 0576                     STR_23 0574  
                   STR_15 0578                     STR_24 0576                     STR_16 057A  
                   STR_17 0526                     STR_25 0578             __CFG_WDTE$OFF 0000  
                   STR_18 056C                     STR_26 057A                     STR_19 056E  
         __end_of___awmod 063E             LCD_PRINT@data 0079                     _ANSEL 0188  
         ___awdiv@divisor 0020           ___awdiv@counter 0024                     _RCREG 001A  
           LCD_PRINT_WP@x 0020             LCD_PRINT_WP@y 0022                     _SPBRG 0099  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000                     _setup 06C7  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 04B7         __end_of_LCD_CLEAR 07AF         __end_of_LCD_PRINT 072C  
                  ??_main 0040         __end_of_LCD_PULSE 076E                    _ADCAN0 004A  
                  _ADCAN1 0049                    _ADRESH 001E          ___awdiv@dividend 0022  
                  ?_setup 0070                    _ANSELH 0189                    _LCD_RH 07A1  
                  i1l1651 064A                    i1l1661 065F                    i1l1653 064F  
                  i1l1645 063E                    i1l1663 0663                    i1l1655 0650  
                  i1l1647 0642                    i1l1665 0666                    i1l1657 0658  
                  i1l1649 0649                    i1l1667 0668                    i1l1659 065E  
                  u125_20 0642                    u125_21 0641                    u126_20 0649  
                  u126_21 0648                    u127_20 064F                    u127_21 064E  
                  u128_20 065E                    u128_21 065D                    u129_20 0663  
                  u129_21 0662      __size_of_LCD_CONTROL 0012          __end_of_delay_ms 069E  
        __end_of_delay_us 0745            __CFG_PWRTE$OFF 0000                 ??___awdiv 007A  
               ??___awmod 0077          ___awdiv@quotient 0026           ___awmod@divisor 0073  
                  _sensor 0048           ___awmod@counter 0078      __end_of_LCD_PRINT_WP 070D  
            ??_CONFIG_ADC 0073                    saved_w 007E                 ?_LCD_DATO 0070  
 __end_of__initialization 001D                 ?_INIT_LCD 0070     __size_of_CONFIG_USART 0016  
          __pcstackCOMMON 0070        __end_of_CONFIG_ADC 07A1             __end_of_setup 06EB  
          _OPTION_REGbits 0081                   ??_setup 0073                __pbssBANK0 0041  
                 ?_LCD_RH 0070          CONFIG_USART@BAUD 0073                ??_LCD_DATO 0077  
            _CONFIG_USART 0745                ??_INIT_LCD 007A                __pmaintext 03AB  
               VAL@column 0028                __pintentry 0004                 VAL@result 003D  
               VAL@numero 0031                 ?_delay_ms 0070                 ?_delay_us 0070  
              __stringtab 0500           __size_of_LCD_RH 0007               VAL@unidades 002E  
   __size_of_LCD_PRINT_WP 0022                   ___awdiv 057C                   ___awmod 05E5  
                 __ptext1 06C7                   __ptext2 0021                   __ptext3 05E5  
                 __ptext4 057C                   __ptext5 06EB                   __ptext6 070D  
                 __ptext7 076E                   __ptext8 07A1                   __ptext9 07A8  
            __size_of_VAL 038A              __size_of_isr 0033                 _LCD_CLEAR 07A8  
        ___awmod@dividend 0075                 _LCD_PRINT 070D                ??_delay_ms 0073  
               _LCD_PULSE 075B                ??_delay_us 0073             VAL@centesimas 0030  
    end_of_initialization 001D              _LCD_PRINT_WP 06EB                 _RCSTAbits 0018  
       LCD_PRINT_WP@frase 0024             VAL@coordenada 003F                 _PORTEbits 0009  
              ?_LCD_CLEAR 0070                ?_LCD_PRINT 0070                ?_LCD_PULSE 0070  
               _TRISCbits 0087                 _TRISEbits 0089             ??_LCD_CONTROL 0079  
          __end_of_LCD_RH 07A8                 _TXSTAbits 0098         __size_of_LCD_DATO 0012  
       __size_of_INIT_LCD 0029       start_initialization 000F               __end_of_VAL 03AB  
             __end_of_isr 0671                  ??_LCD_RH 007A  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __end_of_LCD_CONTROL 0792               ??_LCD_CLEAR 007A                 ___latbits 0002  
             ??_LCD_PRINT 0078               ??_LCD_PULSE 0077             __pcstackBANK0 0020  
       __size_of_delay_ms 002D         __size_of_delay_us 0019                  VAL@F1517 0041  
               _cambiante 004C                  VAL@i_376 003B                  ?___awdiv 0020  
                ?___awmod 0073                  VAL@valor 003E                VAL@decimas 002F  
               __pstrings 0500            __size_of_setup 0024                  _LCD_DATO 076E  
             _LCD_CONTROL 0780                  _VAL$1117 0037         interrupt_function 0004  
               delay_ms@i 0075                 delay_ms@j 0077                  _INIT_LCD 069E  
               delay_us@j 0075                _ADCON0bits 001F               __stringbase 0505  
              _ADCON1bits 009F           LCD_DATO@comando 0077      LCD_PRINT_WP@location 0025  
        __size_of___awdiv 0069          __size_of___awmod 0059        __end_of__stringtab 0506  
              _CONFIG_ADC 0792                  _delay_ms 0671                  _delay_us 072C  
                __ptext10 069E                  __ptext11 0780                  __ptext12 0671  
                __ptext13 075B                  __ptext14 072C                  __ptext15 0745  
                __ptext16 0792                  __ptext17 063E         __CFG_BOR4V$BOR40V 0000  
           ?_CONFIG_USART 0073             __size_of_main 010C               delay_ms@dms 0074  
             delay_us@ams 0074                _INTCONbits 000B                  intlevel1 0000  
          ??_CONFIG_USART 0077           LCD_CONTROL@dato 0079                 stringcode 0500  
             ?_CONFIG_ADC 0070                  stringdir 0500                  stringtab 0500  
            ?_LCD_CONTROL 0070             ?_LCD_PRINT_WP 0020  
