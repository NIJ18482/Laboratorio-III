

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 01:17:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0009                     _PORTE	set	9
   361  0008                     _PORTD	set	8
   362  0007                     _PORTC	set	7
   363  0006                     _PORTB	set	6
   364  001E                     _ADRESH	set	30
   365  0001                     _TMR0	set	1
   366  001F                     _ADCON0bits	set	31
   367  000B                     _INTCONbits	set	11
   368  009F                     _ADCON1bits	set	159
   369  0081                     _OPTION_REGbits	set	129
   370  0089                     _TRISE	set	137
   371  0088                     _TRISD	set	136
   372  0087                     _TRISC	set	135
   373  0086                     _TRISB	set	134
   374  0085                     _TRISA	set	133
   375  0189                     _ANSELH	set	393
   376  0188                     _ANSEL	set	392
   377                           
   378                           ; #config settings
   379  0000                     
   380                           	psect	cinit
   381  000F                     start_initialization:	
   382  000F                     __initialization:	
   383                           
   384                           ; Clear objects allocated to COMMON
   385  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   386  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   387  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   388  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   389  0013                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392  0013                     __end_of__initialization:	
   393  0013  0183               	clrf	3
   394  0014  120A  118A  2872   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMMON
   397  0070                     __pbssCOMMON:	
   398  0070                     _ADCAN1:	
   399  0070                     	ds	1
   400  0071                     _ADCAN0:	
   401  0071                     	ds	1
   402  0072                     _eADC:	
   403  0072                     	ds	1
   404  0073                     _cambiante:	
   405  0073                     	ds	1
   406                           
   407                           	psect	cstackCOMMON
   408  0074                     __pcstackCOMMON:	
   409  0074                     ?_setup:	
   410  0074                     ?_CONFIG_ADC:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0074                     ?_isr:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0074                     ??_isr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0074                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424  0074                     	ds	3
   425  0077                     ??_setup:	
   426  0077                     ??_CONFIG_ADC:	
   427                           ; 1 bytes @ 0x3
   428                           
   429  0077                     ??_main:	
   430                           ; 1 bytes @ 0x3
   431                           
   432                           
   433                           ; 1 bytes @ 0x3
   434  0077                     	ds	1
   435                           
   436                           	psect	maintext
   437  0072                     __pmaintext:	
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 40 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : B00/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          1       0       0       0       0
   460 ;;      Totals:         1       0       0       0       0
   461 ;;Total ram usage:        1 bytes
   462 ;; Hardware stack levels required when called:    3
   463 ;; This function calls:
   464 ;;		_setup
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _main
   472  0072                     _main:	
   473  0072                     l745:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 41:     setup();
   479  0072  120A  118A  204A  120A  118A  	fcall	_setup
   480  0077                     l747:	
   481                           
   482                           ;main.c: 43:         if (eADC == 1){
   483  0077  0372               	decf	_eADC,w
   484  0078  1D03               	btfss	3,2
   485  0079  287B               	goto	u61
   486  007A  287C               	goto	u60
   487  007B                     u61:	
   488  007B  2877               	goto	l747
   489  007C                     u60:	
   490  007C                     l749:	
   491                           
   492                           ;main.c: 44:             eADC = 0;
   493  007C  01F2               	clrf	_eADC
   494  007D                     l751:	
   495                           
   496                           ;main.c: 45:             if (cambiante == 0){ADCAN0 = ADRESH;}
   497  007D  0873               	movf	_cambiante,w
   498  007E  1D03               	btfss	3,2
   499  007F  2881               	goto	u71
   500  0080  2882               	goto	u70
   501  0081                     u71:	
   502  0081  2888               	goto	l62
   503  0082                     u70:	
   504  0082                     l753:	
   505  0082  1283               	bcf	3,5	;RP0=0, select bank0
   506  0083  1303               	bcf	3,6	;RP1=0, select bank0
   507  0084  081E               	movf	30,w	;volatile
   508  0085  00F7               	movwf	??_main
   509  0086  0877               	movf	??_main,w
   510  0087  00F1               	movwf	_ADCAN0
   511  0088                     l62:	
   512                           
   513                           ;main.c: 47:             ADCON0bits.GO_DONE = 1;
   514  0088  1283               	bcf	3,5	;RP0=0, select bank0
   515  0089  1303               	bcf	3,6	;RP1=0, select bank0
   516  008A  149F               	bsf	31,1	;volatile
   517  008B  2877               	goto	l747
   518  008C  120A  118A  280C   	ljmp	start
   519  008F                     __end_of_main:	
   520                           
   521                           	psect	text1
   522  004A                     __ptext1:	
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 56 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    2
   546 ;; This function calls:
   547 ;;		_CONFIG_ADC
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _setup
   555  004A                     _setup:	
   556  004A                     l683:	
   557                           ;incstack = 0
   558                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   559                           
   560                           
   561                           ;main.c: 58:     TRISA = 0b00000011;
   562  004A  3003               	movlw	3
   563  004B  1683               	bsf	3,5	;RP0=1, select bank1
   564  004C  1303               	bcf	3,6	;RP1=0, select bank1
   565  004D  0085               	movwf	5	;volatile
   566                           
   567                           ;main.c: 59:     ANSEL = 0b00000011;
   568  004E  3003               	movlw	3
   569  004F  1683               	bsf	3,5	;RP0=1, select bank3
   570  0050  1703               	bsf	3,6	;RP1=1, select bank3
   571  0051  0088               	movwf	8	;volatile
   572  0052                     l685:	
   573                           
   574                           ;main.c: 60:     ANSELH = 0b00000000;
   575  0052  0189               	clrf	9	;volatile
   576  0053                     l687:	
   577                           
   578                           ;main.c: 61:     TRISB = 0b00000000;
   579  0053  1683               	bsf	3,5	;RP0=1, select bank1
   580  0054  1303               	bcf	3,6	;RP1=0, select bank1
   581  0055  0186               	clrf	6	;volatile
   582  0056                     l689:	
   583                           
   584                           ;main.c: 62:     TRISC = 0b00000000;
   585  0056  0187               	clrf	7	;volatile
   586  0057                     l691:	
   587                           
   588                           ;main.c: 63:     TRISD = 0b00000000;
   589  0057  0188               	clrf	8	;volatile
   590  0058                     l693:	
   591                           
   592                           ;main.c: 64:     TRISE = 0b0000;
   593  0058  0189               	clrf	9	;volatile
   594  0059                     l695:	
   595                           
   596                           ;main.c: 65:     PORTB = 0b00000000;
   597  0059  1283               	bcf	3,5	;RP0=0, select bank0
   598  005A  1303               	bcf	3,6	;RP1=0, select bank0
   599  005B  0186               	clrf	6	;volatile
   600  005C                     l697:	
   601                           
   602                           ;main.c: 66:     PORTC = 0b00000000;
   603  005C  0187               	clrf	7	;volatile
   604  005D                     l699:	
   605                           
   606                           ;main.c: 67:     PORTD = 0b00000000;
   607  005D  0188               	clrf	8	;volatile
   608  005E                     l701:	
   609                           
   610                           ;main.c: 68:     PORTE = 0b0000;
   611  005E  0189               	clrf	9	;volatile
   612  005F                     l703:	
   613                           
   614                           ;main.c: 71:     OPTION_REGbits.T0CS = 0;
   615  005F  1683               	bsf	3,5	;RP0=1, select bank1
   616  0060  1303               	bcf	3,6	;RP1=0, select bank1
   617  0061  1281               	bcf	1,5	;volatile
   618  0062                     l705:	
   619                           
   620                           ;main.c: 72:     OPTION_REGbits.PSA = 0;
   621  0062  1181               	bcf	1,3	;volatile
   622  0063                     l707:	
   623                           
   624                           ;main.c: 73:     OPTION_REGbits.PS0 = 0;
   625  0063  1001               	bcf	1,0	;volatile
   626  0064                     l709:	
   627                           
   628                           ;main.c: 74:     OPTION_REGbits.PS1 = 1;
   629  0064  1481               	bsf	1,1	;volatile
   630  0065                     l711:	
   631                           
   632                           ;main.c: 75:     OPTION_REGbits.PS2 = 0;
   633  0065  1101               	bcf	1,2	;volatile
   634  0066                     l713:	
   635                           
   636                           ;main.c: 76:     INTCONbits.T0IE = 1;
   637  0066  168B               	bsf	11,5	;volatile
   638  0067                     l715:	
   639                           
   640                           ;main.c: 77:     INTCONbits.T0IF = 0;
   641  0067  110B               	bcf	11,2	;volatile
   642  0068                     l717:	
   643                           
   644                           ;main.c: 78:     TMR0 = 130;
   645  0068  3082               	movlw	130
   646  0069  1283               	bcf	3,5	;RP0=0, select bank0
   647  006A  1303               	bcf	3,6	;RP1=0, select bank0
   648  006B  0081               	movwf	1	;volatile
   649  006C                     l719:	
   650                           
   651                           ;main.c: 81:     CONFIG_ADC();
   652  006C  120A  118A  208F  120A  118A  	fcall	_CONFIG_ADC
   653  0071                     l68:	
   654  0071  0008               	return
   655  0072                     __end_of_setup:	
   656                           
   657                           	psect	text2
   658  008F                     __ptext2:	
   659 ;; *************** function _CONFIG_ADC *****************
   660 ;; Defined at:
   661 ;;		line 15 in file "ADC.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		None
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_setup
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _CONFIG_ADC
   691  008F                     _CONFIG_ADC:	
   692  008F                     l681:	
   693                           ;incstack = 0
   694                           ; Regs used in _CONFIG_ADC: []
   695                           
   696                           
   697                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
   698  008F  1683               	bsf	3,5	;RP0=1, select bank1
   699  0090  1303               	bcf	3,6	;RP1=0, select bank1
   700  0091  139F               	bcf	31,7	;volatile
   701                           
   702                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
   703  0092  129F               	bcf	31,5	;volatile
   704                           
   705                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
   706  0093  121F               	bcf	31,4	;volatile
   707                           
   708                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
   709  0094  1283               	bcf	3,5	;RP0=0, select bank0
   710  0095  1303               	bcf	3,6	;RP1=0, select bank0
   711  0096  139F               	bcf	31,7	;volatile
   712                           
   713                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
   714  0097  171F               	bsf	31,6	;volatile
   715                           
   716                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
   717  0098  129F               	bcf	31,5	;volatile
   718                           
   719                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
   720  0099  121F               	bcf	31,4	;volatile
   721                           
   722                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
   723  009A  119F               	bcf	31,3	;volatile
   724                           
   725                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
   726  009B  111F               	bcf	31,2	;volatile
   727                           
   728                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
   729  009C  141F               	bsf	31,0	;volatile
   730  009D                     l89:	
   731                           ;ADC.c: 26:     return;
   732                           
   733  009D  0008               	return
   734  009E                     __end_of_CONFIG_ADC:	
   735                           
   736                           	psect	text3
   737  0017                     __ptext3:	
   738 ;; *************** function _isr *****************
   739 ;; Defined at:
   740 ;;		line 28 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0
   756 ;;      Temps:          3       0       0       0       0
   757 ;;      Totals:         3       0       0       0       0
   758 ;;Total ram usage:        3 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		Interrupt level 1
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           
   768                           ;psect for function _isr
   769  0017                     _isr:	
   770  0017                     i1l721:	
   771                           
   772                           ;main.c: 29:     if (INTCONbits.T0IF == 1){
   773  0017  1D0B               	btfss	11,2	;volatile
   774  0018  281A               	goto	u1_21
   775  0019  281B               	goto	u1_20
   776  001A                     u1_21:	
   777  001A  2843               	goto	i1l54
   778  001B                     u1_20:	
   779  001B                     i1l723:	
   780                           
   781                           ;main.c: 30:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
   782  001B  0873               	movf	_cambiante,w
   783  001C  1D03               	btfss	3,2
   784  001D  281F               	goto	u2_21
   785  001E  2820               	goto	u2_20
   786  001F                     u2_21:	
   787  001F  2823               	goto	i1l727
   788  0020                     u2_20:	
   789  0020                     i1l725:	
   790  0020  1283               	bcf	3,5	;RP0=0, select bank0
   791  0021  1303               	bcf	3,6	;RP1=0, select bank0
   792  0022  151F               	bsf	31,2	;volatile
   793  0023                     i1l727:	
   794                           
   795                           ;main.c: 31:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
   796  0023  0373               	decf	_cambiante,w
   797  0024  1D03               	btfss	3,2
   798  0025  2827               	goto	u3_21
   799  0026  2828               	goto	u3_20
   800  0027                     u3_21:	
   801  0027  282B               	goto	i1l731
   802  0028                     u3_20:	
   803  0028                     i1l729:	
   804  0028  1283               	bcf	3,5	;RP0=0, select bank0
   805  0029  1303               	bcf	3,6	;RP1=0, select bank0
   806  002A  111F               	bcf	31,2	;volatile
   807  002B                     i1l731:	
   808                           
   809                           ;main.c: 32:         cambiante++;
   810  002B  3001               	movlw	1
   811  002C  00F4               	movwf	??_isr
   812  002D  0874               	movf	??_isr,w
   813  002E  07F3               	addwf	_cambiante,f
   814  002F                     i1l733:	
   815                           
   816                           ;main.c: 33:         if (cambiante > 1){cambiante = 0;}
   817  002F  3002               	movlw	2
   818  0030  0273               	subwf	_cambiante,w
   819  0031  1C03               	skipc
   820  0032  2834               	goto	u4_21
   821  0033  2835               	goto	u4_20
   822  0034                     u4_21:	
   823  0034  2836               	goto	i1l737
   824  0035                     u4_20:	
   825  0035                     i1l735:	
   826  0035  01F3               	clrf	_cambiante
   827  0036                     i1l737:	
   828                           
   829                           ;main.c: 34:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
   830  0036  1283               	bcf	3,5	;RP0=0, select bank0
   831  0037  1303               	bcf	3,6	;RP1=0, select bank0
   832  0038  189F               	btfsc	31,1	;volatile
   833  0039  283B               	goto	u5_21
   834  003A  283C               	goto	u5_20
   835  003B                     u5_21:	
   836  003B  283E               	goto	i1l53
   837  003C                     u5_20:	
   838  003C                     i1l739:	
   839  003C  01F2               	clrf	_eADC
   840  003D  0AF2               	incf	_eADC,f
   841  003E                     i1l53:	
   842                           
   843                           ;main.c: 35:         INTCONbits.T0IF = 0;
   844  003E  110B               	bcf	11,2	;volatile
   845  003F                     i1l741:	
   846                           
   847                           ;main.c: 36:         TMR0 = 130;
   848  003F  3082               	movlw	130
   849  0040  0081               	movwf	1	;volatile
   850  0041                     i1l743:	
   851                           
   852                           ;main.c: 37:         eADC = 1;
   853  0041  01F2               	clrf	_eADC
   854  0042  0AF2               	incf	_eADC,f
   855  0043                     i1l54:	
   856  0043  0876               	movf	??_isr+2,w
   857  0044  008A               	movwf	10
   858  0045  0E75               	swapf	(??_isr+1)^(0+4294967168),w
   859  0046  0083               	movwf	3
   860  0047  0EFE               	swapf	btemp,f
   861  0048  0E7E               	swapf	btemp,w
   862  0049  0009               	retfie
   863  004A                     __end_of_isr:	
   864  007E                     btemp	set	126	;btemp
   865  007E                     wtemp0	set	126
   866                           
   867                           	psect	intentry
   868  0004                     __pintentry:	
   869                           ;incstack = 0
   870                           ; Regs used in _isr: [wreg+status,2+status,0]
   871                           
   872  0004                     interrupt_function:	
   873  007E                     saved_w	set	btemp
   874  0004  00FE               	movwf	btemp
   875  0005  0E03               	swapf	3,w
   876  0006  00F5               	movwf	??_isr+1
   877  0007  080A               	movf	10,w
   878  0008  00F6               	movwf	??_isr+2
   879  0009  120A  118A  2817   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _CONFIG_ADC
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _CONFIG_ADC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 01:17:38 2020

             __CFG_CP$OFF 0000                        l62 0088                        l68 0071  
                      l89 009D                        u60 007C                        u61 007B  
                      u70 0082                        u71 0081                       l701 005E  
                     l711 0065                       l703 005F                       l713 0066  
                     l705 0062                       l715 0067                       l707 0063  
                     l717 0068                       l709 0064                       l719 006C  
                     l751 007D                       l681 008F                       l753 0082  
                     l745 0072                       l691 0057                       l683 004A  
                     l747 0077                       l693 0058                       l685 0052  
                     l749 007C                       l695 0059                       l687 0053  
                     l697 005C                       l689 0056                       l699 005D  
            __CFG_CPD$OFF 0000                       _isr 0017              __CFG_LVP$OFF 0000  
                    ?_isr 0074                      i1l53 003E                      i1l54 0043  
                    _TMR0 0001                      _eADC 0072                      u1_20 001B  
                    u1_21 001A                      u2_20 0020                      u2_21 001F  
                    u3_20 0028                      u3_21 0027                      u4_20 0035  
                    u4_21 0034                      u5_20 003C                      u5_21 003B  
            __CFG_WRT$OFF 0000                      _main 0072                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F  
                   ??_isr 0074                     ?_main 0074             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l721 0017                     i1l731 002B  
                   i1l723 001B                     i1l741 003F                     i1l733 002F  
                   i1l725 0020                     i1l743 0041                     i1l735 0035  
                   i1l727 0023                     i1l737 0036                     i1l729 0028  
                   i1l739 003C                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000                     _setup 004A  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 008F                    ??_main 0077                    _ADCAN0 0071  
                  _ADCAN1 0070                    _ADRESH 001E                    ?_setup 0074  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000              ??_CONFIG_ADC 0077  
                  saved_w 007E   __end_of__initialization 0013            __pcstackCOMMON 0074  
      __end_of_CONFIG_ADC 009E             __end_of_setup 0072            _OPTION_REGbits 0081  
                 ??_setup 0077                __pmaintext 0072                __pintentry 0004  
                 __ptext1 004A                   __ptext2 008F                   __ptext3 0017  
            __size_of_isr 0033      end_of_initialization 0013       start_initialization 000F  
             __end_of_isr 004A  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0070  
               ___latbits 0002                 _cambiante 0073            __size_of_setup 0028  
       interrupt_function 0004                _ADCON0bits 001F                _ADCON1bits 009F  
              _CONFIG_ADC 008F         __CFG_BOR4V$BOR40V 0000             __size_of_main 001D  
              _INTCONbits 000B                  intlevel1 0000               ?_CONFIG_ADC 0074  
