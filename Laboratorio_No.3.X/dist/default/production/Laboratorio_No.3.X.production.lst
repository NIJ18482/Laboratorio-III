

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 16:59:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0000                     	;# 
   456  0001                     	;# 
   457  0002                     	;# 
   458  0003                     	;# 
   459  0004                     	;# 
   460  0005                     	;# 
   461  0006                     	;# 
   462  0007                     	;# 
   463  0008                     	;# 
   464  0009                     	;# 
   465  000A                     	;# 
   466  000B                     	;# 
   467  000C                     	;# 
   468  000D                     	;# 
   469  000E                     	;# 
   470  000E                     	;# 
   471  000F                     	;# 
   472  0010                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0014                     	;# 
   477  0015                     	;# 
   478  0015                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  0081                     	;# 
   491  0085                     	;# 
   492  0086                     	;# 
   493  0087                     	;# 
   494  0088                     	;# 
   495  0089                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  008F                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0094                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0097                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009A                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009E                     	;# 
   517  009F                     	;# 
   518  0105                     	;# 
   519  0107                     	;# 
   520  0108                     	;# 
   521  0109                     	;# 
   522  010C                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  010F                     	;# 
   527  0185                     	;# 
   528  0187                     	;# 
   529  0188                     	;# 
   530  0189                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  0009                     _PORTEbits	set	9
   534  0009                     _PORTE	set	9
   535  0008                     _PORTD	set	8
   536  0007                     _PORTC	set	7
   537  0006                     _PORTB	set	6
   538  001E                     _ADRESH	set	30
   539  0001                     _TMR0	set	1
   540  001F                     _ADCON0bits	set	31
   541  000B                     _INTCONbits	set	11
   542  0099                     _SPBRG	set	153
   543  0089                     _TRISEbits	set	137
   544  009F                     _ADCON1bits	set	159
   545  0081                     _OPTION_REGbits	set	129
   546  0089                     _TRISE	set	137
   547  0088                     _TRISD	set	136
   548  0087                     _TRISC	set	135
   549  0086                     _TRISB	set	134
   550  0085                     _TRISA	set	133
   551  0189                     _ANSELH	set	393
   552  0188                     _ANSEL	set	392
   553                           
   554                           	psect	strings
   555  0556                     __pstrings:	
   556  0556                     stringtab:	
   557  0556                     __stringtab:	
   558  0556                     stringcode:	
   559                           ;	String table - string pointers are 1 byte each
   560                           
   561  0556                     stringdir:	
   562  0556  3005               	movlw	high stringdir
   563  0557  008A               	movwf	10
   564  0558  0804               	movf	4,w
   565  0559  0A84               	incf	4,f
   566  055A  0782               	addwf	2,f
   567  055B                     __stringbase:	
   568  055B  3400               	retlw	0
   569  055C                     __end_of__stringtab:	
   570  055C                     STR_4:	
   571  055C  342D               	retlw	45	;'-'
   572  055D  344D               	retlw	77	;'M'
   573  055E  3450               	retlw	80	;'P'
   574  055F  344C               	retlw	76	;'L'
   575  0560  3441               	retlw	65	;'A'
   576  0561  3442               	retlw	66	;'B'
   577  0562  3458               	retlw	88	;'X'
   578  0563  342D               	retlw	45	;'-'
   579  0564  3458               	retlw	88	;'X'
   580  0565  3443               	retlw	67	;'C'
   581  0566  3438               	retlw	56	;'8'
   582  0567  342D               	retlw	45	;'-'
   583  0568  3450               	retlw	80	;'P'
   584  0569  3449               	retlw	73	;'I'
   585  056A  3443               	retlw	67	;'C'
   586  056B  342D               	retlw	45	;'-'
   587  056C  3400               	retlw	0
   588  056D                     STR_6:	
   589  056D  347C               	retlw	124	;'|'
   590  056E  3430               	retlw	48	;'0'
   591  056F  342E               	retlw	46	;'.'
   592  0570  3430               	retlw	48	;'0'
   593  0571  3430               	retlw	48	;'0'
   594  0572  3456               	retlw	86	;'V'
   595  0573  347C               	retlw	124	;'|'
   596  0574  3430               	retlw	48	;'0'
   597  0575  342E               	retlw	46	;'.'
   598  0576  3430               	retlw	48	;'0'
   599  0577  3430               	retlw	48	;'0'
   600  0578  3456               	retlw	86	;'V'
   601  0579  347C               	retlw	124	;'|'
   602  057A  3430               	retlw	48	;'0'
   603  057B  3430               	retlw	48	;'0'
   604  057C  3430               	retlw	48	;'0'
   605  057D  3400               	retlw	0
   606  057E                     STR_1:	
   607  057E  344C               	retlw	76	;'L'
   608  057F  3441               	retlw	65	;'A'
   609  0580  3442               	retlw	66	;'B'
   610  0581  344F               	retlw	79	;'O'
   611  0582  3452               	retlw	82	;'R'
   612  0583  3441               	retlw	65	;'A'
   613  0584  3454               	retlw	84	;'T'
   614  0585  344F               	retlw	79	;'O'
   615  0586  3452               	retlw	82	;'R'
   616  0587  3449               	retlw	73	;'I'
   617  0588  344F               	retlw	79	;'O'
   618  0589  3420               	retlw	32	;' '
   619  058A  344E               	retlw	78	;'N'
   620  058B  346F               	retlw	111	;'o'
   621  058C  342E               	retlw	46	;'.'
   622  058D  3433               	retlw	51	;'3'
   623  058E  3400               	retlw	0
   624  058F                     STR_3:	
   625  058F  344D               	retlw	77	;'M'
   626  0590  3441               	retlw	65	;'A'
   627  0591  344E               	retlw	78	;'N'
   628  0592  3445               	retlw	69	;'E'
   629  0593  344A               	retlw	74	;'J'
   630  0594  344F               	retlw	79	;'O'
   631  0595  3420               	retlw	32	;' '
   632  0596  3450               	retlw	80	;'P'
   633  0597  3441               	retlw	65	;'A'
   634  0598  344E               	retlw	78	;'N'
   635  0599  3445               	retlw	69	;'E'
   636  059A  344C               	retlw	76	;'L'
   637  059B  3420               	retlw	32	;' '
   638  059C  344C               	retlw	76	;'L'
   639  059D  3443               	retlw	67	;'C'
   640  059E  3444               	retlw	68	;'D'
   641  059F  3400               	retlw	0
   642  05A0                     STR_2:	
   643  05A0  344C               	retlw	76	;'L'
   644  05A1  3475               	retlw	117	;'u'
   645  05A2  3469               	retlw	105	;'i'
   646  05A3  3473               	retlw	115	;'s'
   647  05A4  3420               	retlw	32	;' '
   648  05A5  344E               	retlw	78	;'N'
   649  05A6  342E               	retlw	46	;'.'
   650  05A7  3420               	retlw	32	;' '
   651  05A8  3431               	retlw	49	;'1'
   652  05A9  3438               	retlw	56	;'8'
   653  05AA  3434               	retlw	52	;'4'
   654  05AB  3438               	retlw	56	;'8'
   655  05AC  3432               	retlw	50	;'2'
   656  05AD  3455               	retlw	85	;'U'
   657  05AE  3456               	retlw	86	;'V'
   658  05AF  3447               	retlw	71	;'G'
   659  05B0  3400               	retlw	0
   660  05B1                     STR_5:	
   661  05B1  347C               	retlw	124	;'|'
   662  05B2  3453               	retlw	83	;'S'
   663  05B3  3445               	retlw	69	;'E'
   664  05B4  344E               	retlw	78	;'N'
   665  05B5  342E               	retlw	46	;'.'
   666  05B6  3432               	retlw	50	;'2'
   667  05B7  347C               	retlw	124	;'|'
   668  05B8  3453               	retlw	83	;'S'
   669  05B9  3445               	retlw	69	;'E'
   670  05BA  344E               	retlw	78	;'N'
   671  05BB  342E               	retlw	46	;'.'
   672  05BC  3431               	retlw	49	;'1'
   673  05BD  347C               	retlw	124	;'|'
   674  05BE  3420               	retlw	32	;' '
   675  05BF  3443               	retlw	67	;'C'
   676  05C0  3454               	retlw	84	;'T'
   677  05C1  3400               	retlw	0
   678  05C2                     STR_8:	
   679  05C2  3431               	retlw	49	;'1'
   680  05C3  3400               	retlw	0
   681  05C4                     STR_9:	
   682  05C4  3432               	retlw	50	;'2'
   683  05C5  3400               	retlw	0
   684  05C6                     STR_11:	
   685  05C6  3434               	retlw	52	;'4'
   686  05C7  3400               	retlw	0
   687  05C8                     STR_12:	
   688  05C8  3435               	retlw	53	;'5'
   689  05C9  3400               	retlw	0
   690  05CA                     STR_13:	
   691  05CA  3436               	retlw	54	;'6'
   692  05CB  3400               	retlw	0
   693  05CC                     STR_14:	
   694  05CC  3437               	retlw	55	;'7'
   695  05CD  3400               	retlw	0
   696  05CE                     STR_15:	
   697  05CE  3438               	retlw	56	;'8'
   698  05CF  3400               	retlw	0
   699  05D0                     STR_16:	
   700  05D0  3439               	retlw	57	;'9'
   701  05D1  3400               	retlw	0
   702  057C                     
   703                           ; #config settings
   704  0000                     
   705                           	psect	cinit
   706  000F                     start_initialization:	
   707  000F                     __initialization:	
   708                           
   709                           ; Clear objects allocated to BANK0
   710  000F  1283               	bcf	3,5	;RP0=0, select bank0
   711  0010  1303               	bcf	3,6	;RP1=0, select bank0
   712  0011  01C1               	clrf	__pbssBANK0& (0+127)
   713  0012  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   714  0013  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   715  0014  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   716  0015  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   717  0016  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   718  0017  01C7               	clrf	(__pbssBANK0+6)& (0+127)
   719  0018  01C8               	clrf	(__pbssBANK0+7)& (0+127)
   720  0019  01C9               	clrf	(__pbssBANK0+8)& (0+127)
   721  001A  01CA               	clrf	(__pbssBANK0+9)& (0+127)
   722  001B  01CB               	clrf	(__pbssBANK0+10)& (0+127)
   723  001C  01CC               	clrf	(__pbssBANK0+11)& (0+127)
   724  001D                     end_of_initialization:	
   725                           ;End of C runtime variable initialization code
   726                           
   727  001D                     __end_of__initialization:	
   728  001D  0183               	clrf	3
   729  001E  120A  118A  2BAB   	ljmp	_main	;jump to C main() function
   730                           
   731                           	psect	bssBANK0
   732  0041                     __pbssBANK0:	
   733  0041                     VAL@F1517:	
   734  0041                     	ds	6
   735  0047                     _sen:	
   736  0047                     	ds	1
   737  0048                     _sensor:	
   738  0048                     	ds	1
   739  0049                     _ADCAN1:	
   740  0049                     	ds	1
   741  004A                     _ADCAN0:	
   742  004A                     	ds	1
   743  004B                     _eADC:	
   744  004B                     	ds	1
   745  004C                     _cambiante:	
   746  004C                     	ds	1
   747                           
   748                           	psect	cstackCOMMON
   749  0070                     __pcstackCOMMON:	
   750  0070                     ?_setup:	
   751  0070                     ?_INIT_LCD:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_LCD_CLEAR:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_LCD_RH:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_delay_ms:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_CONFIG_ADC:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_LCD_CONTROL:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_LCD_PULSE:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_isr:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ??_isr:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_main:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_delay_us:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_LCD_DATO:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_LCD_PRINT:	
   788                           ; 1 bytes @ 0x0
   789                           
   790                           
   791                           ; 1 bytes @ 0x0
   792  0070                     	ds	3
   793  0073                     ??_setup:	
   794  0073                     ??_delay_ms:	
   795                           ; 1 bytes @ 0x3
   796                           
   797  0073                     ??_CONFIG_ADC:	
   798                           ; 1 bytes @ 0x3
   799                           
   800  0073                     ??_delay_us:	
   801                           ; 1 bytes @ 0x3
   802                           
   803  0073                     ?___awmod:	
   804                           ; 1 bytes @ 0x3
   805                           
   806  0073                     ?___aldiv:	
   807                           ; 2 bytes @ 0x3
   808                           
   809  0073                     ___awmod@divisor:	
   810                           ; 4 bytes @ 0x3
   811                           
   812  0073                     ___aldiv@divisor:	
   813                           ; 2 bytes @ 0x3
   814                           
   815                           
   816                           ; 4 bytes @ 0x3
   817  0073                     	ds	1
   818  0074                     delay_ms@dms:	
   819  0074                     delay_us@ams:	
   820                           ; 1 bytes @ 0x4
   821                           
   822                           
   823                           ; 1 bytes @ 0x4
   824  0074                     	ds	1
   825  0075                     delay_ms@i:	
   826  0075                     delay_us@j:	
   827                           ; 2 bytes @ 0x5
   828                           
   829  0075                     ___awmod@dividend:	
   830                           ; 2 bytes @ 0x5
   831                           
   832                           
   833                           ; 2 bytes @ 0x5
   834  0075                     	ds	2
   835  0077                     ??_LCD_PULSE:	
   836  0077                     ??_LCD_DATO:	
   837                           ; 1 bytes @ 0x7
   838                           
   839  0077                     ??___awmod:	
   840                           ; 1 bytes @ 0x7
   841                           
   842  0077                     LCD_DATO@comando:	
   843                           ; 1 bytes @ 0x7
   844                           
   845  0077                     delay_ms@j:	
   846                           ; 1 bytes @ 0x7
   847                           
   848  0077                     ___aldiv@dividend:	
   849                           ; 2 bytes @ 0x7
   850                           
   851                           
   852                           ; 4 bytes @ 0x7
   853  0077                     	ds	1
   854  0078                     ??_LCD_PRINT:	
   855  0078                     ___awmod@counter:	
   856                           ; 1 bytes @ 0x8
   857                           
   858                           
   859                           ; 1 bytes @ 0x8
   860  0078                     	ds	1
   861  0079                     ??_LCD_CONTROL:	
   862  0079                     LCD_CONTROL@dato:	
   863                           ; 1 bytes @ 0x9
   864                           
   865  0079                     LCD_PRINT@data:	
   866                           ; 1 bytes @ 0x9
   867                           
   868  0079                     ___awmod@sign:	
   869                           ; 1 bytes @ 0x9
   870                           
   871                           
   872                           ; 1 bytes @ 0x9
   873  0079                     	ds	1
   874  007A                     ??_INIT_LCD:	
   875  007A                     ??_LCD_CLEAR:	
   876                           ; 1 bytes @ 0xA
   877                           
   878  007A                     ??_LCD_RH:	
   879                           ; 1 bytes @ 0xA
   880                           
   881  007A                     ??_LCD_PRINT_WP:	
   882                           ; 1 bytes @ 0xA
   883                           
   884  007A                     ??___awdiv:	
   885                           ; 1 bytes @ 0xA
   886                           
   887                           
   888                           ; 1 bytes @ 0xA
   889  007A                     	ds	1
   890  007B                     ??_CONFIG_USART:	
   891                           
   892                           	psect	cstackBANK0
   893  0020                     __pcstackBANK0:	
   894                           ; 1 bytes @ 0xB
   895                           
   896  0020                     ?_LCD_PRINT_WP:	
   897  0020                     ??___aldiv:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0020                     ?___awdiv:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0020                     LCD_PRINT_WP@x:	
   904                           ; 2 bytes @ 0x0
   905                           
   906  0020                     ___awdiv@divisor:	
   907                           ; 2 bytes @ 0x0
   908                           
   909                           
   910                           ; 2 bytes @ 0x0
   911  0020                     	ds	1
   912  0021                     ___aldiv@counter:	
   913                           
   914                           ; 1 bytes @ 0x1
   915  0021                     	ds	1
   916  0022                     ___aldiv@sign:	
   917  0022                     LCD_PRINT_WP@y:	
   918                           ; 1 bytes @ 0x2
   919                           
   920  0022                     ___awdiv@dividend:	
   921                           ; 2 bytes @ 0x2
   922                           
   923                           
   924                           ; 2 bytes @ 0x2
   925  0022                     	ds	1
   926  0023                     ___aldiv@quotient:	
   927                           
   928                           ; 4 bytes @ 0x3
   929  0023                     	ds	1
   930  0024                     LCD_PRINT_WP@frase:	
   931  0024                     ___awdiv@counter:	
   932                           ; 1 bytes @ 0x4
   933                           
   934                           
   935                           ; 1 bytes @ 0x4
   936  0024                     	ds	1
   937  0025                     LCD_PRINT_WP@location:	
   938  0025                     ___awdiv@sign:	
   939                           ; 1 bytes @ 0x5
   940                           
   941                           
   942                           ; 1 bytes @ 0x5
   943  0025                     	ds	1
   944  0026                     ___awdiv@quotient:	
   945                           
   946                           ; 2 bytes @ 0x6
   947  0026                     	ds	1
   948  0027                     ?_CONFIG_USART:	
   949  0027                     CONFIG_USART@BAUD:	
   950                           ; 1 bytes @ 0x7
   951                           
   952                           
   953                           ; 4 bytes @ 0x7
   954  0027                     	ds	1
   955  0028                     ?_VAL:	
   956  0028                     VAL@column:	
   957                           ; 1 bytes @ 0x8
   958                           
   959                           
   960                           ; 1 bytes @ 0x8
   961  0028                     	ds	1
   962  0029                     ??_VAL:	
   963                           
   964                           ; 1 bytes @ 0x9
   965  0029                     	ds	2
   966  002B                     _CONFIG_USART$978:	
   967                           
   968                           ; 4 bytes @ 0xB
   969  002B                     	ds	3
   970  002E                     VAL@unidades:	
   971                           
   972                           ; 1 bytes @ 0xE
   973  002E                     	ds	1
   974  002F                     VAL@decimas:	
   975                           
   976                           ; 1 bytes @ 0xF
   977  002F                     	ds	1
   978  0030                     VAL@centesimas:	
   979                           
   980                           ; 1 bytes @ 0x10
   981  0030                     	ds	1
   982  0031                     VAL@numero:	
   983                           
   984                           ; 6 bytes @ 0x11
   985  0031                     	ds	6
   986  0037                     _VAL$977:	
   987                           
   988                           ; 2 bytes @ 0x17
   989  0037                     	ds	2
   990  0039                     VAL@i:	
   991                           
   992                           ; 2 bytes @ 0x19
   993  0039                     	ds	2
   994  003B                     VAL@i_376:	
   995                           
   996                           ; 2 bytes @ 0x1B
   997  003B                     	ds	2
   998  003D                     VAL@result:	
   999                           
  1000                           ; 1 bytes @ 0x1D
  1001  003D                     	ds	1
  1002  003E                     VAL@valor:	
  1003                           
  1004                           ; 1 bytes @ 0x1E
  1005  003E                     	ds	1
  1006  003F                     VAL@coordenada:	
  1007                           
  1008                           ; 1 bytes @ 0x1F
  1009  003F                     	ds	1
  1010  0040                     ??_main:	
  1011                           
  1012                           ; 1 bytes @ 0x20
  1013  0040                     	ds	1
  1014                           
  1015                           	psect	maintext
  1016  03AB                     __pmaintext:	
  1017 ;;
  1018 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1019 ;;
  1020 ;; *************** function _main *****************
  1021 ;; Defined at:
  1022 ;;		line 45 in file "main.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : B00/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0
  1038 ;;      Temps:          0       1       0       0       0
  1039 ;;      Totals:         0       1       0       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels required when called:    7
  1042 ;; This function calls:
  1043 ;;		_CONFIG_ADC
  1044 ;;		_CONFIG_USART
  1045 ;;		_INIT_LCD
  1046 ;;		_LCD_CLEAR
  1047 ;;		_LCD_PRINT_WP
  1048 ;;		_LCD_RH
  1049 ;;		_VAL
  1050 ;;		_delay_ms
  1051 ;;		_setup
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _main
  1059  03AB                     _main:	
  1060  03AB                     l1723:	
  1061                           ;incstack = 0
  1062                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1063                           
  1064                           
  1065                           ;main.c: 46:     setup();
  1066  03AB  120A  118A  2759  120A  118A  	fcall	_setup
  1067  03B0                     l1725:	
  1068                           
  1069                           ;main.c: 47:     INIT_LCD();
  1070  03B0  120A  118A  2730  120A  118A  	fcall	_INIT_LCD
  1071  03B5                     l1727:	
  1072                           
  1073                           ;main.c: 48:     LCD_CLEAR();
  1074  03B5  120A  158A  27D1  120A  118A  	fcall	_LCD_CLEAR
  1075  03BA                     l1729:	
  1076                           
  1077                           ;main.c: 49:     LCD_RH();
  1078  03BA  120A  158A  27D8  120A  118A  	fcall	_LCD_RH
  1079  03BF                     l1731:	
  1080                           
  1081                           ;main.c: 50:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
  1082  03BF  3000               	movlw	0
  1083  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1084  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1085  03C2  00A0               	movwf	LCD_PRINT_WP@x
  1086  03C3  00A1               	movwf	LCD_PRINT_WP@x+1
  1087  03C4  3001               	movlw	1
  1088  03C5  00A2               	movwf	LCD_PRINT_WP@y
  1089  03C6  3000               	movlw	0
  1090  03C7  00A3               	movwf	LCD_PRINT_WP@y+1
  1091  03C8  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1092  03C9  00C0               	movwf	??_main
  1093  03CA  0840               	movf	??_main,w
  1094  03CB  00A4               	movwf	LCD_PRINT_WP@frase
  1095  03CC  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1096  03D1                     l1733:	
  1097                           
  1098                           ;main.c: 51:     delay_ms(150);
  1099  03D1  3096               	movlw	150
  1100  03D2  120A  118A  2703  120A  118A  	fcall	_delay_ms
  1101  03D7                     l1735:	
  1102                           
  1103                           ;main.c: 52:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
  1104  03D7  3000               	movlw	0
  1105  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1106  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1107  03DA  00A0               	movwf	LCD_PRINT_WP@x
  1108  03DB  00A1               	movwf	LCD_PRINT_WP@x+1
  1109  03DC  3002               	movlw	2
  1110  03DD  00A2               	movwf	LCD_PRINT_WP@y
  1111  03DE  3000               	movlw	0
  1112  03DF  00A3               	movwf	LCD_PRINT_WP@y+1
  1113  03E0  3045               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1114  03E1  00C0               	movwf	??_main
  1115  03E2  0840               	movf	??_main,w
  1116  03E3  00A4               	movwf	LCD_PRINT_WP@frase
  1117  03E4  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1118  03E9                     l1737:	
  1119                           
  1120                           ;main.c: 53:     delay_ms(150);
  1121  03E9  3096               	movlw	150
  1122  03EA  120A  118A  2703  120A  118A  	fcall	_delay_ms
  1123  03EF                     l1739:	
  1124                           
  1125                           ;main.c: 54:     LCD_CLEAR();
  1126  03EF  120A  158A  27D1  120A  118A  	fcall	_LCD_CLEAR
  1127  03F4                     l1741:	
  1128                           
  1129                           ;main.c: 55:     LCD_RH();
  1130  03F4  120A  158A  27D8  120A  118A  	fcall	_LCD_RH
  1131  03F9                     l1743:	
  1132                           
  1133                           ;main.c: 56:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
  1134  03F9  3000               	movlw	0
  1135  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1136  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1137  03FC  00A0               	movwf	LCD_PRINT_WP@x
  1138  03FD  00A1               	movwf	LCD_PRINT_WP@x+1
  1139  03FE  3001               	movlw	1
  1140  03FF  00A2               	movwf	LCD_PRINT_WP@y
  1141  0400  3000               	movlw	0
  1142  0401  00A3               	movwf	LCD_PRINT_WP@y+1
  1143  0402  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1144  0403  00C0               	movwf	??_main
  1145  0404  0840               	movf	??_main,w
  1146  0405  00A4               	movwf	LCD_PRINT_WP@frase
  1147  0406  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1148  040B                     l1745:	
  1149                           
  1150                           ;main.c: 57:     delay_ms(150);
  1151  040B  3096               	movlw	150
  1152  040C  120A  118A  2703  120A  118A  	fcall	_delay_ms
  1153  0411                     l1747:	
  1154                           
  1155                           ;main.c: 58:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
  1156  0411  3000               	movlw	0
  1157  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0414  00A0               	movwf	LCD_PRINT_WP@x
  1160  0415  00A1               	movwf	LCD_PRINT_WP@x+1
  1161  0416  3002               	movlw	2
  1162  0417  00A2               	movwf	LCD_PRINT_WP@y
  1163  0418  3000               	movlw	0
  1164  0419  00A3               	movwf	LCD_PRINT_WP@y+1
  1165  041A  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1166  041B  00C0               	movwf	??_main
  1167  041C  0840               	movf	??_main,w
  1168  041D  00A4               	movwf	LCD_PRINT_WP@frase
  1169  041E  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1170  0423                     l1749:	
  1171                           
  1172                           ;main.c: 59:     delay_ms(150);
  1173  0423  3096               	movlw	150
  1174  0424  120A  118A  2703  120A  118A  	fcall	_delay_ms
  1175  0429                     l1751:	
  1176                           
  1177                           ;main.c: 60:     LCD_CLEAR();
  1178  0429  120A  158A  27D1  120A  118A  	fcall	_LCD_CLEAR
  1179  042E                     l1753:	
  1180                           
  1181                           ;main.c: 61:     LCD_RH();
  1182  042E  120A  158A  27D8  120A  118A  	fcall	_LCD_RH
  1183  0433                     l1755:	
  1184                           
  1185                           ;main.c: 62:     LCD_PRINT_WP(0,1,"|SEN.2|SEN.1| CT");
  1186  0433  3000               	movlw	0
  1187  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0436  00A0               	movwf	LCD_PRINT_WP@x
  1190  0437  00A1               	movwf	LCD_PRINT_WP@x+1
  1191  0438  3001               	movlw	1
  1192  0439  00A2               	movwf	LCD_PRINT_WP@y
  1193  043A  3000               	movlw	0
  1194  043B  00A3               	movwf	LCD_PRINT_WP@y+1
  1195  043C  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1196  043D  00C0               	movwf	??_main
  1197  043E  0840               	movf	??_main,w
  1198  043F  00A4               	movwf	LCD_PRINT_WP@frase
  1199  0440  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1200  0445                     l1757:	
  1201                           
  1202                           ;main.c: 63:     LCD_PRINT_WP(0,2,"|0.00V|0.00V|000");
  1203  0445  3000               	movlw	0
  1204  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0448  00A0               	movwf	LCD_PRINT_WP@x
  1207  0449  00A1               	movwf	LCD_PRINT_WP@x+1
  1208  044A  3002               	movlw	2
  1209  044B  00A2               	movwf	LCD_PRINT_WP@y
  1210  044C  3000               	movlw	0
  1211  044D  00A3               	movwf	LCD_PRINT_WP@y+1
  1212  044E  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1213  044F  00C0               	movwf	??_main
  1214  0450  0840               	movf	??_main,w
  1215  0451  00A4               	movwf	LCD_PRINT_WP@frase
  1216  0452  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1217  0457                     l1759:	
  1218                           
  1219                           ;main.c: 64:     CONFIG_USART(9600);
  1220  0457  3000               	movlw	0
  1221  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1223  045A  00AA               	movwf	CONFIG_USART@BAUD+3
  1224  045B  3000               	movlw	0
  1225  045C  00A9               	movwf	CONFIG_USART@BAUD+2
  1226  045D  3025               	movlw	37
  1227  045E  00A8               	movwf	CONFIG_USART@BAUD+1
  1228  045F  3080               	movlw	128
  1229  0460  00A7               	movwf	CONFIG_USART@BAUD
  1230  0461  120A  118A  2694  120A  118A  	fcall	_CONFIG_USART
  1231  0466                     l1761:	
  1232                           
  1233                           ;main.c: 65:     CONFIG_ADC();
  1234  0466  120A  158A  27DF  120A  118A  	fcall	_CONFIG_ADC
  1235  046B                     l1763:	
  1236                           
  1237                           ;main.c: 68:         if (eADC == 1){
  1238  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1239  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1240  046D  034B               	decf	_eADC,w
  1241  046E  1D03               	btfss	3,2
  1242  046F  2C71               	goto	u1501
  1243  0470  2C72               	goto	u1500
  1244  0471                     u1501:	
  1245  0471  2C86               	goto	l1777
  1246  0472                     u1500:	
  1247  0472                     l1765:	
  1248                           
  1249                           ;main.c: 69:             eADC = 0;
  1250  0472  01CB               	clrf	_eADC
  1251  0473                     l1767:	
  1252                           
  1253                           ;main.c: 70:             if (cambiante == 0){ADCAN0 = ADRESH;}
  1254  0473  084C               	movf	_cambiante,w
  1255  0474  1D03               	btfss	3,2
  1256  0475  2C77               	goto	u1511
  1257  0476  2C78               	goto	u1510
  1258  0477                     u1511:	
  1259  0477  2C7C               	goto	l1771
  1260  0478                     u1510:	
  1261  0478                     l1769:	
  1262  0478  081E               	movf	30,w	;volatile
  1263  0479  00C0               	movwf	??_main
  1264  047A  0840               	movf	??_main,w
  1265  047B  00CA               	movwf	_ADCAN0
  1266  047C                     l1771:	
  1267                           
  1268                           ;main.c: 71:             if (cambiante == 1){ADCAN1 = ADRESH;}
  1269  047C  034C               	decf	_cambiante,w
  1270  047D  1D03               	btfss	3,2
  1271  047E  2C80               	goto	u1521
  1272  047F  2C81               	goto	u1520
  1273  0480                     u1521:	
  1274  0480  2C85               	goto	l1775
  1275  0481                     u1520:	
  1276  0481                     l1773:	
  1277  0481  081E               	movf	30,w	;volatile
  1278  0482  00C0               	movwf	??_main
  1279  0483  0840               	movf	??_main,w
  1280  0484  00C9               	movwf	_ADCAN1
  1281  0485                     l1775:	
  1282                           
  1283                           ;main.c: 72:             ADCON0bits.GO_DONE = 1;}
  1284  0485  149F               	bsf	31,1	;volatile
  1285  0486                     l1777:	
  1286                           
  1287                           ;main.c: 73:         if (sensor == 20){
  1288  0486  3014               	movlw	20
  1289  0487  0648               	xorwf	_sensor,w
  1290  0488  1D03               	btfss	3,2
  1291  0489  2C8B               	goto	u1531
  1292  048A  2C8C               	goto	u1530
  1293  048B                     u1531:	
  1294  048B  2C6B               	goto	l1763
  1295  048C                     u1530:	
  1296  048C                     l1779:	
  1297                           
  1298                           ;main.c: 74:             if (sen == 0){VAL(ADCAN0,0);}
  1299  048C  0847               	movf	_sen,w
  1300  048D  1D03               	btfss	3,2
  1301  048E  2C90               	goto	u1541
  1302  048F  2C91               	goto	u1540
  1303  0490                     u1541:	
  1304  0490  2C98               	goto	l1783
  1305  0491                     u1540:	
  1306  0491                     l1781:	
  1307  0491  01A8               	clrf	VAL@column
  1308  0492  084A               	movf	_ADCAN0,w
  1309  0493  120A  118A  2021  120A  118A  	fcall	_VAL
  1310  0498                     l1783:	
  1311                           
  1312                           ;main.c: 75:             if (sen == 1){VAL(ADCAN1,1);}
  1313  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1315  049A  0347               	decf	_sen,w
  1316  049B  1D03               	btfss	3,2
  1317  049C  2C9E               	goto	u1551
  1318  049D  2C9F               	goto	u1550
  1319  049E                     u1551:	
  1320  049E  2CA7               	goto	l1787
  1321  049F                     u1550:	
  1322  049F                     l1785:	
  1323  049F  01A8               	clrf	VAL@column
  1324  04A0  0AA8               	incf	VAL@column,f
  1325  04A1  0849               	movf	_ADCAN1,w
  1326  04A2  120A  118A  2021  120A  118A  	fcall	_VAL
  1327  04A7                     l1787:	
  1328                           
  1329                           ;main.c: 76:             sen++;
  1330  04A7  3001               	movlw	1
  1331  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1332  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1333  04AA  00C0               	movwf	??_main
  1334  04AB  0840               	movf	??_main,w
  1335  04AC  07C7               	addwf	_sen,f
  1336  04AD                     l1789:	
  1337                           
  1338                           ;main.c: 77:             if (sen > 1){sen = 0;}
  1339  04AD  3002               	movlw	2
  1340  04AE  0247               	subwf	_sen,w
  1341  04AF  1C03               	skipc
  1342  04B0  2CB2               	goto	u1561
  1343  04B1  2CB3               	goto	u1560
  1344  04B2                     u1561:	
  1345  04B2  2CB4               	goto	l84
  1346  04B3                     u1560:	
  1347  04B3                     l1791:	
  1348  04B3  01C7               	clrf	_sen
  1349  04B4                     l84:	
  1350                           
  1351                           ;main.c: 78:             sensor = 0;}
  1352  04B4  01C8               	clrf	_sensor
  1353  04B5  2C6B               	goto	l1763
  1354  04B6  120A  118A  280C   	ljmp	start
  1355  04B9                     __end_of_main:	
  1356                           
  1357                           	psect	text1
  1358  0759                     __ptext1:	
  1359 ;; *************** function _setup *****************
  1360 ;; Defined at:
  1361 ;;		line 83 in file "main.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _setup
  1391  0759                     _setup:	
  1392  0759                     l1477:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _setup: [wreg+status,2]
  1395                           
  1396                           
  1397                           ;main.c: 85:     TRISA = 0b00000011;
  1398  0759  3003               	movlw	3
  1399  075A  1683               	bsf	3,5	;RP0=1, select bank1
  1400  075B  1303               	bcf	3,6	;RP1=0, select bank1
  1401  075C  0085               	movwf	5	;volatile
  1402                           
  1403                           ;main.c: 86:     ANSEL = 0b00000011;
  1404  075D  3003               	movlw	3
  1405  075E  1683               	bsf	3,5	;RP0=1, select bank3
  1406  075F  1703               	bsf	3,6	;RP1=1, select bank3
  1407  0760  0088               	movwf	8	;volatile
  1408  0761                     l1479:	
  1409                           
  1410                           ;main.c: 87:     ANSELH = 0b00000000;
  1411  0761  0189               	clrf	9	;volatile
  1412  0762                     l1481:	
  1413                           
  1414                           ;main.c: 88:     TRISB = 0b00000000;
  1415  0762  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0763  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0764  0186               	clrf	6	;volatile
  1418  0765                     l1483:	
  1419                           
  1420                           ;main.c: 89:     TRISC = 0b00000000;
  1421  0765  0187               	clrf	7	;volatile
  1422  0766                     l1485:	
  1423                           
  1424                           ;main.c: 90:     TRISD = 0b00000000;
  1425  0766  0188               	clrf	8	;volatile
  1426  0767                     l1487:	
  1427                           
  1428                           ;main.c: 91:     TRISE = 0b0000;
  1429  0767  0189               	clrf	9	;volatile
  1430  0768                     l1489:	
  1431                           
  1432                           ;main.c: 92:     PORTB = 0b00000000;
  1433  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1435  076A  0186               	clrf	6	;volatile
  1436  076B                     l1491:	
  1437                           
  1438                           ;main.c: 93:     PORTC = 0b00000000;
  1439  076B  0187               	clrf	7	;volatile
  1440  076C                     l1493:	
  1441                           
  1442                           ;main.c: 94:     PORTD = 0b00000000;
  1443  076C  0188               	clrf	8	;volatile
  1444  076D                     l1495:	
  1445                           
  1446                           ;main.c: 95:     PORTE = 0b0000;
  1447  076D  0189               	clrf	9	;volatile
  1448  076E                     l1497:	
  1449                           
  1450                           ;main.c: 98:     OPTION_REGbits.T0CS = 0;
  1451  076E  1683               	bsf	3,5	;RP0=1, select bank1
  1452  076F  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0770  1281               	bcf	1,5	;volatile
  1454  0771                     l1499:	
  1455                           
  1456                           ;main.c: 99:     OPTION_REGbits.PSA = 0;
  1457  0771  1181               	bcf	1,3	;volatile
  1458  0772                     l1501:	
  1459                           
  1460                           ;main.c: 100:     OPTION_REGbits.PS0 = 0;
  1461  0772  1001               	bcf	1,0	;volatile
  1462  0773                     l1503:	
  1463                           
  1464                           ;main.c: 101:     OPTION_REGbits.PS1 = 1;
  1465  0773  1481               	bsf	1,1	;volatile
  1466  0774                     l1505:	
  1467                           
  1468                           ;main.c: 102:     OPTION_REGbits.PS2 = 0;
  1469  0774  1101               	bcf	1,2	;volatile
  1470  0775                     l1507:	
  1471                           
  1472                           ;main.c: 103:     INTCONbits.T0IE = 1;
  1473  0775  168B               	bsf	11,5	;volatile
  1474  0776                     l1509:	
  1475                           
  1476                           ;main.c: 104:     INTCONbits.T0IF = 0;
  1477  0776  110B               	bcf	11,2	;volatile
  1478  0777                     l1511:	
  1479                           
  1480                           ;main.c: 105:     INTCONbits.GIE = 1;
  1481  0777  178B               	bsf	11,7	;volatile
  1482  0778                     l1513:	
  1483                           
  1484                           ;main.c: 106:     TMR0 = 130;
  1485  0778  3082               	movlw	130
  1486  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1487  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1488  077B  0081               	movwf	1	;volatile
  1489  077C                     l90:	
  1490  077C  0008               	return
  1491  077D                     __end_of_setup:	
  1492                           
  1493                           	psect	text2
  1494  0021                     __ptext2:	
  1495 ;; *************** function _VAL *****************
  1496 ;; Defined at:
  1497 ;;		line 72 in file "LCD.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  result          1    wreg     unsigned char 
  1500 ;;  column          1    8[BANK0 ] unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  result          1   29[BANK0 ] unsigned char 
  1503 ;;  i               2   27[BANK0 ] int 
  1504 ;;  i               2   25[BANK0 ] int 
  1505 ;;  numero          6   17[BANK0 ] int [3]
  1506 ;;  coordenada      1   31[BANK0 ] unsigned char 
  1507 ;;  valor           1   30[BANK0 ] unsigned char 
  1508 ;;  centesimas      1   16[BANK0 ] unsigned char 
  1509 ;;  decimas         1   15[BANK0 ] unsigned char 
  1510 ;;  unidades        1   14[BANK0 ] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       1       0       0       0
  1521 ;;      Locals:         0      18       0       0       0
  1522 ;;      Temps:          0       5       0       0       0
  1523 ;;      Totals:         0      24       0       0       0
  1524 ;;Total ram usage:       24 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    6
  1527 ;; This function calls:
  1528 ;;		_LCD_PRINT_WP
  1529 ;;		___awdiv
  1530 ;;		___awmod
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _VAL
  1538  0021                     _VAL:	
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _VAL: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1542                           ;VAL@result stored from wreg
  1543  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0023  00BD               	movwf	VAL@result
  1546  0024                     l1541:	
  1547  0024  30FA               	movlw	250
  1548  0025  023D               	subwf	VAL@result,w
  1549  0026  1C03               	skipc
  1550  0027  2829               	goto	u1131
  1551  0028  282A               	goto	u1130
  1552  0029                     u1131:	
  1553  0029  282E               	goto	l1545
  1554  002A                     u1130:	
  1555  002A                     l1543:	
  1556  002A  30FA               	movlw	250
  1557  002B  00A9               	movwf	??_VAL
  1558  002C  0829               	movf	??_VAL,w
  1559  002D  00BD               	movwf	VAL@result
  1560  002E                     l1545:	
  1561  002E                     l1547:	
  1562  002E  01BF               	clrf	VAL@coordenada
  1563  002F                     l1549:	
  1564  002F  3032               	movlw	50
  1565  0030  00A0               	movwf	___awdiv@divisor
  1566  0031  3000               	movlw	0
  1567  0032  00A1               	movwf	___awdiv@divisor+1
  1568  0033  3032               	movlw	50
  1569  0034  00F3               	movwf	___awmod@divisor
  1570  0035  3000               	movlw	0
  1571  0036  00F4               	movwf	___awmod@divisor+1
  1572  0037  083D               	movf	VAL@result,w
  1573  0038  00A9               	movwf	??_VAL
  1574  0039  01AA               	clrf	??_VAL+1
  1575  003A  0829               	movf	??_VAL,w
  1576  003B  00F5               	movwf	___awmod@dividend
  1577  003C  082A               	movf	??_VAL+1,w
  1578  003D  00F6               	movwf	___awmod@dividend+1
  1579  003E  120A  118A  263B  120A  118A  	fcall	___awmod
  1580  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0045  083D               	movf	VAL@result,w
  1583  0046  00AB               	movwf	??_VAL+2
  1584  0047  0873               	movf	?___awmod,w
  1585  0048  022B               	subwf	??_VAL+2,w
  1586  0049  00A2               	movwf	___awdiv@dividend
  1587  004A  0974               	comf	?___awmod+1,w
  1588  004B  1803               	skipnc
  1589  004C  3E01               	addlw	1
  1590  004D  00A3               	movwf	___awdiv@dividend+1
  1591  004E  120A  118A  25D2  120A  118A  	fcall	___awdiv
  1592  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0055  0820               	movf	?___awdiv,w
  1595  0056  00AC               	movwf	??_VAL+3
  1596  0057  082C               	movf	??_VAL+3,w
  1597  0058  00AE               	movwf	VAL@unidades
  1598  0059                     l1551:	
  1599  0059  083D               	movf	VAL@result,w
  1600  005A  00A9               	movwf	??_VAL
  1601  005B  01AA               	clrf	??_VAL+1
  1602  005C  0829               	movf	??_VAL,w
  1603  005D  00F5               	movwf	___awmod@dividend
  1604  005E  082A               	movf	??_VAL+1,w
  1605  005F  00F6               	movwf	___awmod@dividend+1
  1606  0060  3032               	movlw	50
  1607  0061  00F3               	movwf	___awmod@divisor
  1608  0062  3000               	movlw	0
  1609  0063  00F4               	movwf	___awmod@divisor+1
  1610  0064  120A  118A  263B  120A  118A  	fcall	___awmod
  1611  0069  0874               	movf	?___awmod+1,w
  1612  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1613  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1614  006C  00B8               	movwf	_VAL$977+1
  1615  006D  0873               	movf	?___awmod,w
  1616  006E  00B7               	movwf	_VAL$977
  1617  006F                     l1553:	
  1618  006F  3005               	movlw	5
  1619  0070  00A0               	movwf	___awdiv@divisor
  1620  0071  3000               	movlw	0
  1621  0072  00A1               	movwf	___awdiv@divisor+1
  1622  0073  3032               	movlw	50
  1623  0074  00F3               	movwf	___awmod@divisor
  1624  0075  3000               	movlw	0
  1625  0076  00F4               	movwf	___awmod@divisor+1
  1626  0077  083D               	movf	VAL@result,w
  1627  0078  00A9               	movwf	??_VAL
  1628  0079  01AA               	clrf	??_VAL+1
  1629  007A  0829               	movf	??_VAL,w
  1630  007B  00F5               	movwf	___awmod@dividend
  1631  007C  082A               	movf	??_VAL+1,w
  1632  007D  00F6               	movwf	___awmod@dividend+1
  1633  007E  120A  118A  263B  120A  118A  	fcall	___awmod
  1634  0083  0873               	movf	?___awmod,w
  1635  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0086  00AB               	movwf	??_VAL+2
  1638  0087  0874               	movf	?___awmod+1,w
  1639  0088  00AC               	movwf	??_VAL+3
  1640  0089  3005               	movlw	5
  1641  008A  00F3               	movwf	___awmod@divisor
  1642  008B  3000               	movlw	0
  1643  008C  00F4               	movwf	___awmod@divisor+1
  1644  008D  0838               	movf	_VAL$977+1,w
  1645  008E  00F6               	movwf	___awmod@dividend+1
  1646  008F  0837               	movf	_VAL$977,w
  1647  0090  00F5               	movwf	___awmod@dividend
  1648  0091  120A  118A  263B  120A  118A  	fcall	___awmod
  1649  0096  0873               	movf	?___awmod,w
  1650  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0099  022B               	subwf	??_VAL+2,w
  1653  009A  00A2               	movwf	___awdiv@dividend
  1654  009B  0874               	movf	?___awmod+1,w
  1655  009C  1C03               	skipc
  1656  009D  0A74               	incf	?___awmod+1,w
  1657  009E  022C               	subwf	??_VAL+3,w
  1658  009F  00A3               	movwf	___awdiv@dividend+1
  1659  00A0  120A  118A  25D2  120A  118A  	fcall	___awdiv
  1660  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1661  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1662  00A7  0820               	movf	?___awdiv,w
  1663  00A8  00AD               	movwf	??_VAL+4
  1664  00A9  082D               	movf	??_VAL+4,w
  1665  00AA  00AF               	movwf	VAL@decimas
  1666  00AB                     l1555:	
  1667  00AB  083D               	movf	VAL@result,w
  1668  00AC  00A9               	movwf	??_VAL
  1669  00AD  01AA               	clrf	??_VAL+1
  1670  00AE  0829               	movf	??_VAL,w
  1671  00AF  00F5               	movwf	___awmod@dividend
  1672  00B0  082A               	movf	??_VAL+1,w
  1673  00B1  00F6               	movwf	___awmod@dividend+1
  1674  00B2  3032               	movlw	50
  1675  00B3  00F3               	movwf	___awmod@divisor
  1676  00B4  3000               	movlw	0
  1677  00B5  00F4               	movwf	___awmod@divisor+1
  1678  00B6  120A  118A  263B  120A  118A  	fcall	___awmod
  1679  00BB  0874               	movf	?___awmod+1,w
  1680  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1681  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1682  00BE  00B8               	movwf	_VAL$977+1
  1683  00BF  0873               	movf	?___awmod,w
  1684  00C0  00B7               	movwf	_VAL$977
  1685  00C1                     l1557:	
  1686  00C1  3005               	movlw	5
  1687  00C2  00F3               	movwf	___awmod@divisor
  1688  00C3  3000               	movlw	0
  1689  00C4  00F4               	movwf	___awmod@divisor+1
  1690  00C5  0838               	movf	_VAL$977+1,w
  1691  00C6  00F6               	movwf	___awmod@dividend+1
  1692  00C7  0837               	movf	_VAL$977,w
  1693  00C8  00F5               	movwf	___awmod@dividend
  1694  00C9  120A  118A  263B  120A  118A  	fcall	___awmod
  1695  00CE  0873               	movf	?___awmod,w
  1696  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1697  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1698  00D1  00A9               	movwf	??_VAL
  1699  00D2  0729               	addwf	??_VAL,w
  1700  00D3  00AA               	movwf	??_VAL+1
  1701  00D4  082A               	movf	??_VAL+1,w
  1702  00D5  00B0               	movwf	VAL@centesimas
  1703  00D6                     l1559:	
  1704  00D6  3031               	movlw	VAL@numero& (0+255)
  1705  00D7  0084               	movwf	4
  1706  00D8  3006               	movlw	6
  1707  00D9  00FF               	movwf	btemp+1
  1708  00DA                     u1140:	
  1709  00DA  1383               	bcf	3,7	;select IRP bank0
  1710  00DB  0180               	clrf	0
  1711  00DC  0A84               	incf	4,f
  1712  00DD  0BFF               	decfsz	btemp+1,f
  1713  00DE  28DA               	goto	u1140
  1714  00DF                     l1561:	
  1715  00DF  082E               	movf	VAL@unidades,w
  1716  00E0  00A9               	movwf	??_VAL
  1717  00E1  01AA               	clrf	??_VAL+1
  1718  00E2  0829               	movf	??_VAL,w
  1719  00E3  00B1               	movwf	VAL@numero
  1720  00E4  082A               	movf	??_VAL+1,w
  1721  00E5  00B2               	movwf	VAL@numero+1
  1722  00E6                     l1563:	
  1723  00E6  082F               	movf	VAL@decimas,w
  1724  00E7  00A9               	movwf	??_VAL
  1725  00E8  01AA               	clrf	??_VAL+1
  1726  00E9  0829               	movf	??_VAL,w
  1727  00EA  00B3               	movwf	VAL@numero+2
  1728  00EB  082A               	movf	??_VAL+1,w
  1729  00EC  00B4               	movwf	VAL@numero+3
  1730  00ED                     l1565:	
  1731  00ED  0830               	movf	VAL@centesimas,w
  1732  00EE  00A9               	movwf	??_VAL
  1733  00EF  01AA               	clrf	??_VAL+1
  1734  00F0  0829               	movf	??_VAL,w
  1735  00F1  00B5               	movwf	VAL@numero+4
  1736  00F2  082A               	movf	??_VAL+1,w
  1737  00F3  00B6               	movwf	VAL@numero+5
  1738  00F4                     l1567:	
  1739  00F4  0828               	movf	VAL@column,w
  1740  00F5  1D03               	btfss	3,2
  1741  00F6  28F8               	goto	u1151
  1742  00F7  28F9               	goto	u1150
  1743  00F8                     u1151:	
  1744  00F8  2A4D               	goto	l1633
  1745  00F9                     u1150:	
  1746  00F9                     l1569:	
  1747  00F9  01B9               	clrf	VAL@i
  1748  00FA  01BA               	clrf	VAL@i+1
  1749  00FB                     l1575:	
  1750  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1751  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1752  00FD  0839               	movf	VAL@i,w
  1753  00FE  00A9               	movwf	??_VAL
  1754  00FF  0729               	addwf	??_VAL,w
  1755  0100  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  1756  0101  0084               	movwf	4
  1757  0102  1383               	bcf	3,7	;select IRP bank0
  1758  0103  0800               	movf	0,w
  1759  0104  00AA               	movwf	??_VAL+1
  1760  0105  082A               	movf	??_VAL+1,w
  1761  0106  00BE               	movwf	VAL@valor
  1762  0107                     l1577:	
  1763  0107  0839               	movf	VAL@i,w
  1764  0108  043A               	iorwf	VAL@i+1,w
  1765  0109  1D03               	btfss	3,2
  1766  010A  290C               	goto	u1161
  1767  010B  290D               	goto	u1160
  1768  010C                     u1161:	
  1769  010C  290F               	goto	l1581
  1770  010D                     u1160:	
  1771  010D                     l1579:	
  1772  010D  01BF               	clrf	VAL@coordenada
  1773  010E  0ABF               	incf	VAL@coordenada,f
  1774  010F                     l1581:	
  1775  010F  0339               	decf	VAL@i,w
  1776  0110  043A               	iorwf	VAL@i+1,w
  1777  0111  1D03               	btfss	3,2
  1778  0112  2914               	goto	u1171
  1779  0113  2915               	goto	u1170
  1780  0114                     u1171:	
  1781  0114  2919               	goto	l1585
  1782  0115                     u1170:	
  1783  0115                     l1583:	
  1784  0115  3003               	movlw	3
  1785  0116  00A9               	movwf	??_VAL
  1786  0117  0829               	movf	??_VAL,w
  1787  0118  00BF               	movwf	VAL@coordenada
  1788  0119                     l1585:	
  1789  0119  3002               	movlw	2
  1790  011A  0639               	xorwf	VAL@i,w
  1791  011B  043A               	iorwf	VAL@i+1,w
  1792  011C  1D03               	btfss	3,2
  1793  011D  291F               	goto	u1181
  1794  011E  2920               	goto	u1180
  1795  011F                     u1181:	
  1796  011F  2924               	goto	l1589
  1797  0120                     u1180:	
  1798  0120                     l1587:	
  1799  0120  3004               	movlw	4
  1800  0121  00A9               	movwf	??_VAL
  1801  0122  0829               	movf	??_VAL,w
  1802  0123  00BF               	movwf	VAL@coordenada
  1803  0124                     l1589:	
  1804  0124  083E               	movf	VAL@valor,w
  1805  0125  1D03               	btfss	3,2
  1806  0126  2928               	goto	u1191
  1807  0127  2929               	goto	u1190
  1808  0128                     u1191:	
  1809  0128  293D               	goto	l1593
  1810  0129                     u1190:	
  1811  0129                     l1591:	
  1812  0129  083F               	movf	VAL@coordenada,w
  1813  012A  00A9               	movwf	??_VAL
  1814  012B  01AA               	clrf	??_VAL+1
  1815  012C  0829               	movf	??_VAL,w
  1816  012D  00A0               	movwf	LCD_PRINT_WP@x
  1817  012E  082A               	movf	??_VAL+1,w
  1818  012F  00A1               	movwf	LCD_PRINT_WP@x+1
  1819  0130  3002               	movlw	2
  1820  0131  00A2               	movwf	LCD_PRINT_WP@y
  1821  0132  3000               	movlw	0
  1822  0133  00A3               	movwf	LCD_PRINT_WP@y+1
  1823  0134  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  1824  0135  00AB               	movwf	??_VAL+2
  1825  0136  082B               	movf	??_VAL+2,w
  1826  0137  00A4               	movwf	LCD_PRINT_WP@frase
  1827  0138  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1828  013D                     l1593:	
  1829  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1830  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1831  013F  033E               	decf	VAL@valor,w
  1832  0140  1D03               	btfss	3,2
  1833  0141  2943               	goto	u1201
  1834  0142  2944               	goto	u1200
  1835  0143                     u1201:	
  1836  0143  2958               	goto	l1597
  1837  0144                     u1200:	
  1838  0144                     l1595:	
  1839  0144  083F               	movf	VAL@coordenada,w
  1840  0145  00A9               	movwf	??_VAL
  1841  0146  01AA               	clrf	??_VAL+1
  1842  0147  0829               	movf	??_VAL,w
  1843  0148  00A0               	movwf	LCD_PRINT_WP@x
  1844  0149  082A               	movf	??_VAL+1,w
  1845  014A  00A1               	movwf	LCD_PRINT_WP@x+1
  1846  014B  3002               	movlw	2
  1847  014C  00A2               	movwf	LCD_PRINT_WP@y
  1848  014D  3000               	movlw	0
  1849  014E  00A3               	movwf	LCD_PRINT_WP@y+1
  1850  014F  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1851  0150  00AB               	movwf	??_VAL+2
  1852  0151  082B               	movf	??_VAL+2,w
  1853  0152  00A4               	movwf	LCD_PRINT_WP@frase
  1854  0153  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1855  0158                     l1597:	
  1856  0158  3002               	movlw	2
  1857  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1858  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1859  015B  063E               	xorwf	VAL@valor,w
  1860  015C  1D03               	btfss	3,2
  1861  015D  295F               	goto	u1211
  1862  015E  2960               	goto	u1210
  1863  015F                     u1211:	
  1864  015F  2974               	goto	l1601
  1865  0160                     u1210:	
  1866  0160                     l1599:	
  1867  0160  083F               	movf	VAL@coordenada,w
  1868  0161  00A9               	movwf	??_VAL
  1869  0162  01AA               	clrf	??_VAL+1
  1870  0163  0829               	movf	??_VAL,w
  1871  0164  00A0               	movwf	LCD_PRINT_WP@x
  1872  0165  082A               	movf	??_VAL+1,w
  1873  0166  00A1               	movwf	LCD_PRINT_WP@x+1
  1874  0167  3002               	movlw	2
  1875  0168  00A2               	movwf	LCD_PRINT_WP@y
  1876  0169  3000               	movlw	0
  1877  016A  00A3               	movwf	LCD_PRINT_WP@y+1
  1878  016B  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1879  016C  00AB               	movwf	??_VAL+2
  1880  016D  082B               	movf	??_VAL+2,w
  1881  016E  00A4               	movwf	LCD_PRINT_WP@frase
  1882  016F  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1883  0174                     l1601:	
  1884  0174  3003               	movlw	3
  1885  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0177  063E               	xorwf	VAL@valor,w
  1888  0178  1D03               	btfss	3,2
  1889  0179  297B               	goto	u1221
  1890  017A  297C               	goto	u1220
  1891  017B                     u1221:	
  1892  017B  2990               	goto	l1605
  1893  017C                     u1220:	
  1894  017C                     l1603:	
  1895  017C  083F               	movf	VAL@coordenada,w
  1896  017D  00A9               	movwf	??_VAL
  1897  017E  01AA               	clrf	??_VAL+1
  1898  017F  0829               	movf	??_VAL,w
  1899  0180  00A0               	movwf	LCD_PRINT_WP@x
  1900  0181  082A               	movf	??_VAL+1,w
  1901  0182  00A1               	movwf	LCD_PRINT_WP@x+1
  1902  0183  3002               	movlw	2
  1903  0184  00A2               	movwf	LCD_PRINT_WP@y
  1904  0185  3000               	movlw	0
  1905  0186  00A3               	movwf	LCD_PRINT_WP@y+1
  1906  0187  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1907  0188  00AB               	movwf	??_VAL+2
  1908  0189  082B               	movf	??_VAL+2,w
  1909  018A  00A4               	movwf	LCD_PRINT_WP@frase
  1910  018B  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1911  0190                     l1605:	
  1912  0190  3004               	movlw	4
  1913  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0193  063E               	xorwf	VAL@valor,w
  1916  0194  1D03               	btfss	3,2
  1917  0195  2997               	goto	u1231
  1918  0196  2998               	goto	u1230
  1919  0197                     u1231:	
  1920  0197  29AC               	goto	l1609
  1921  0198                     u1230:	
  1922  0198                     l1607:	
  1923  0198  083F               	movf	VAL@coordenada,w
  1924  0199  00A9               	movwf	??_VAL
  1925  019A  01AA               	clrf	??_VAL+1
  1926  019B  0829               	movf	??_VAL,w
  1927  019C  00A0               	movwf	LCD_PRINT_WP@x
  1928  019D  082A               	movf	??_VAL+1,w
  1929  019E  00A1               	movwf	LCD_PRINT_WP@x+1
  1930  019F  3002               	movlw	2
  1931  01A0  00A2               	movwf	LCD_PRINT_WP@y
  1932  01A1  3000               	movlw	0
  1933  01A2  00A3               	movwf	LCD_PRINT_WP@y+1
  1934  01A3  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1935  01A4  00AB               	movwf	??_VAL+2
  1936  01A5  082B               	movf	??_VAL+2,w
  1937  01A6  00A4               	movwf	LCD_PRINT_WP@frase
  1938  01A7  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1939  01AC                     l1609:	
  1940  01AC  3005               	movlw	5
  1941  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1942  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1943  01AF  063E               	xorwf	VAL@valor,w
  1944  01B0  1D03               	btfss	3,2
  1945  01B1  29B3               	goto	u1241
  1946  01B2  29B4               	goto	u1240
  1947  01B3                     u1241:	
  1948  01B3  29C8               	goto	l1613
  1949  01B4                     u1240:	
  1950  01B4                     l1611:	
  1951  01B4  083F               	movf	VAL@coordenada,w
  1952  01B5  00A9               	movwf	??_VAL
  1953  01B6  01AA               	clrf	??_VAL+1
  1954  01B7  0829               	movf	??_VAL,w
  1955  01B8  00A0               	movwf	LCD_PRINT_WP@x
  1956  01B9  082A               	movf	??_VAL+1,w
  1957  01BA  00A1               	movwf	LCD_PRINT_WP@x+1
  1958  01BB  3002               	movlw	2
  1959  01BC  00A2               	movwf	LCD_PRINT_WP@y
  1960  01BD  3000               	movlw	0
  1961  01BE  00A3               	movwf	LCD_PRINT_WP@y+1
  1962  01BF  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1963  01C0  00AB               	movwf	??_VAL+2
  1964  01C1  082B               	movf	??_VAL+2,w
  1965  01C2  00A4               	movwf	LCD_PRINT_WP@frase
  1966  01C3  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1967  01C8                     l1613:	
  1968  01C8  3006               	movlw	6
  1969  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1970  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1971  01CB  063E               	xorwf	VAL@valor,w
  1972  01CC  1D03               	btfss	3,2
  1973  01CD  29CF               	goto	u1251
  1974  01CE  29D0               	goto	u1250
  1975  01CF                     u1251:	
  1976  01CF  29E4               	goto	l1617
  1977  01D0                     u1250:	
  1978  01D0                     l1615:	
  1979  01D0  083F               	movf	VAL@coordenada,w
  1980  01D1  00A9               	movwf	??_VAL
  1981  01D2  01AA               	clrf	??_VAL+1
  1982  01D3  0829               	movf	??_VAL,w
  1983  01D4  00A0               	movwf	LCD_PRINT_WP@x
  1984  01D5  082A               	movf	??_VAL+1,w
  1985  01D6  00A1               	movwf	LCD_PRINT_WP@x+1
  1986  01D7  3002               	movlw	2
  1987  01D8  00A2               	movwf	LCD_PRINT_WP@y
  1988  01D9  3000               	movlw	0
  1989  01DA  00A3               	movwf	LCD_PRINT_WP@y+1
  1990  01DB  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1991  01DC  00AB               	movwf	??_VAL+2
  1992  01DD  082B               	movf	??_VAL+2,w
  1993  01DE  00A4               	movwf	LCD_PRINT_WP@frase
  1994  01DF  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  1995  01E4                     l1617:	
  1996  01E4  3007               	movlw	7
  1997  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1998  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1999  01E7  063E               	xorwf	VAL@valor,w
  2000  01E8  1D03               	btfss	3,2
  2001  01E9  29EB               	goto	u1261
  2002  01EA  29EC               	goto	u1260
  2003  01EB                     u1261:	
  2004  01EB  2A00               	goto	l1621
  2005  01EC                     u1260:	
  2006  01EC                     l1619:	
  2007  01EC  083F               	movf	VAL@coordenada,w
  2008  01ED  00A9               	movwf	??_VAL
  2009  01EE  01AA               	clrf	??_VAL+1
  2010  01EF  0829               	movf	??_VAL,w
  2011  01F0  00A0               	movwf	LCD_PRINT_WP@x
  2012  01F1  082A               	movf	??_VAL+1,w
  2013  01F2  00A1               	movwf	LCD_PRINT_WP@x+1
  2014  01F3  3002               	movlw	2
  2015  01F4  00A2               	movwf	LCD_PRINT_WP@y
  2016  01F5  3000               	movlw	0
  2017  01F6  00A3               	movwf	LCD_PRINT_WP@y+1
  2018  01F7  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2019  01F8  00AB               	movwf	??_VAL+2
  2020  01F9  082B               	movf	??_VAL+2,w
  2021  01FA  00A4               	movwf	LCD_PRINT_WP@frase
  2022  01FB  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2023  0200                     l1621:	
  2024  0200  3008               	movlw	8
  2025  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0203  063E               	xorwf	VAL@valor,w
  2028  0204  1D03               	btfss	3,2
  2029  0205  2A07               	goto	u1271
  2030  0206  2A08               	goto	u1270
  2031  0207                     u1271:	
  2032  0207  2A1C               	goto	l1625
  2033  0208                     u1270:	
  2034  0208                     l1623:	
  2035  0208  083F               	movf	VAL@coordenada,w
  2036  0209  00A9               	movwf	??_VAL
  2037  020A  01AA               	clrf	??_VAL+1
  2038  020B  0829               	movf	??_VAL,w
  2039  020C  00A0               	movwf	LCD_PRINT_WP@x
  2040  020D  082A               	movf	??_VAL+1,w
  2041  020E  00A1               	movwf	LCD_PRINT_WP@x+1
  2042  020F  3002               	movlw	2
  2043  0210  00A2               	movwf	LCD_PRINT_WP@y
  2044  0211  3000               	movlw	0
  2045  0212  00A3               	movwf	LCD_PRINT_WP@y+1
  2046  0213  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2047  0214  00AB               	movwf	??_VAL+2
  2048  0215  082B               	movf	??_VAL+2,w
  2049  0216  00A4               	movwf	LCD_PRINT_WP@frase
  2050  0217  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2051  021C                     l1625:	
  2052  021C  3009               	movlw	9
  2053  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2054  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2055  021F  063E               	xorwf	VAL@valor,w
  2056  0220  1D03               	btfss	3,2
  2057  0221  2A23               	goto	u1281
  2058  0222  2A24               	goto	u1280
  2059  0223                     u1281:	
  2060  0223  2A38               	goto	l1629
  2061  0224                     u1280:	
  2062  0224                     l1627:	
  2063  0224  083F               	movf	VAL@coordenada,w
  2064  0225  00A9               	movwf	??_VAL
  2065  0226  01AA               	clrf	??_VAL+1
  2066  0227  0829               	movf	??_VAL,w
  2067  0228  00A0               	movwf	LCD_PRINT_WP@x
  2068  0229  082A               	movf	??_VAL+1,w
  2069  022A  00A1               	movwf	LCD_PRINT_WP@x+1
  2070  022B  3002               	movlw	2
  2071  022C  00A2               	movwf	LCD_PRINT_WP@y
  2072  022D  3000               	movlw	0
  2073  022E  00A3               	movwf	LCD_PRINT_WP@y+1
  2074  022F  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2075  0230  00AB               	movwf	??_VAL+2
  2076  0231  082B               	movf	??_VAL+2,w
  2077  0232  00A4               	movwf	LCD_PRINT_WP@frase
  2078  0233  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2079  0238                     l1629:	
  2080  0238  3001               	movlw	1
  2081  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2082  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2083  023B  07B9               	addwf	VAL@i,f
  2084  023C  1803               	skipnc
  2085  023D  0ABA               	incf	VAL@i+1,f
  2086  023E  3000               	movlw	0
  2087  023F  07BA               	addwf	VAL@i+1,f
  2088  0240                     l1631:	
  2089  0240  083A               	movf	VAL@i+1,w
  2090  0241  3A80               	xorlw	128
  2091  0242  00FF               	movwf	btemp+1
  2092  0243  3080               	movlw	128
  2093  0244  027F               	subwf	btemp+1,w
  2094  0245  1D03               	skipz
  2095  0246  2A49               	goto	u1295
  2096  0247  3003               	movlw	3
  2097  0248  0239               	subwf	VAL@i,w
  2098  0249                     u1295:	
  2099  0249  1C03               	skipc
  2100  024A  2A4C               	goto	u1291
  2101  024B  2A4D               	goto	u1290
  2102  024C                     u1291:	
  2103  024C  28FB               	goto	l1575
  2104  024D                     u1290:	
  2105  024D                     l1633:	
  2106  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2107  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2108  024F  0328               	decf	VAL@column,w
  2109  0250  1D03               	btfss	3,2
  2110  0251  2A53               	goto	u1301
  2111  0252  2A54               	goto	u1300
  2112  0253                     u1301:	
  2113  0253  2BAA               	goto	l196
  2114  0254                     u1300:	
  2115  0254                     l1635:	
  2116  0254  01BB               	clrf	VAL@i_376
  2117  0255  01BC               	clrf	VAL@i_376+1
  2118  0256                     l1641:	
  2119  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0258  083B               	movf	VAL@i_376,w
  2122  0259  00A9               	movwf	??_VAL
  2123  025A  0729               	addwf	??_VAL,w
  2124  025B  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  2125  025C  0084               	movwf	4
  2126  025D  1383               	bcf	3,7	;select IRP bank0
  2127  025E  0800               	movf	0,w
  2128  025F  00AA               	movwf	??_VAL+1
  2129  0260  082A               	movf	??_VAL+1,w
  2130  0261  00BE               	movwf	VAL@valor
  2131  0262                     l1643:	
  2132  0262  083B               	movf	VAL@i_376,w
  2133  0263  043C               	iorwf	VAL@i_376+1,w
  2134  0264  1D03               	btfss	3,2
  2135  0265  2A67               	goto	u1311
  2136  0266  2A68               	goto	u1310
  2137  0267                     u1311:	
  2138  0267  2A6C               	goto	l1647
  2139  0268                     u1310:	
  2140  0268                     l1645:	
  2141  0268  3007               	movlw	7
  2142  0269  00A9               	movwf	??_VAL
  2143  026A  0829               	movf	??_VAL,w
  2144  026B  00BF               	movwf	VAL@coordenada
  2145  026C                     l1647:	
  2146  026C  033B               	decf	VAL@i_376,w
  2147  026D  043C               	iorwf	VAL@i_376+1,w
  2148  026E  1D03               	btfss	3,2
  2149  026F  2A71               	goto	u1321
  2150  0270  2A72               	goto	u1320
  2151  0271                     u1321:	
  2152  0271  2A76               	goto	l1651
  2153  0272                     u1320:	
  2154  0272                     l1649:	
  2155  0272  3009               	movlw	9
  2156  0273  00A9               	movwf	??_VAL
  2157  0274  0829               	movf	??_VAL,w
  2158  0275  00BF               	movwf	VAL@coordenada
  2159  0276                     l1651:	
  2160  0276  3002               	movlw	2
  2161  0277  063B               	xorwf	VAL@i_376,w
  2162  0278  043C               	iorwf	VAL@i_376+1,w
  2163  0279  1D03               	btfss	3,2
  2164  027A  2A7C               	goto	u1331
  2165  027B  2A7D               	goto	u1330
  2166  027C                     u1331:	
  2167  027C  2A81               	goto	l1655
  2168  027D                     u1330:	
  2169  027D                     l1653:	
  2170  027D  300A               	movlw	10
  2171  027E  00A9               	movwf	??_VAL
  2172  027F  0829               	movf	??_VAL,w
  2173  0280  00BF               	movwf	VAL@coordenada
  2174  0281                     l1655:	
  2175  0281  083E               	movf	VAL@valor,w
  2176  0282  1D03               	btfss	3,2
  2177  0283  2A85               	goto	u1341
  2178  0284  2A86               	goto	u1340
  2179  0285                     u1341:	
  2180  0285  2A9A               	goto	l1659
  2181  0286                     u1340:	
  2182  0286                     l1657:	
  2183  0286  083F               	movf	VAL@coordenada,w
  2184  0287  00A9               	movwf	??_VAL
  2185  0288  01AA               	clrf	??_VAL+1
  2186  0289  0829               	movf	??_VAL,w
  2187  028A  00A0               	movwf	LCD_PRINT_WP@x
  2188  028B  082A               	movf	??_VAL+1,w
  2189  028C  00A1               	movwf	LCD_PRINT_WP@x+1
  2190  028D  3002               	movlw	2
  2191  028E  00A2               	movwf	LCD_PRINT_WP@y
  2192  028F  3000               	movlw	0
  2193  0290  00A3               	movwf	LCD_PRINT_WP@y+1
  2194  0291  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  2195  0292  00AB               	movwf	??_VAL+2
  2196  0293  082B               	movf	??_VAL+2,w
  2197  0294  00A4               	movwf	LCD_PRINT_WP@frase
  2198  0295  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2199  029A                     l1659:	
  2200  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2201  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2202  029C  033E               	decf	VAL@valor,w
  2203  029D  1D03               	btfss	3,2
  2204  029E  2AA0               	goto	u1351
  2205  029F  2AA1               	goto	u1350
  2206  02A0                     u1351:	
  2207  02A0  2AB5               	goto	l1663
  2208  02A1                     u1350:	
  2209  02A1                     l1661:	
  2210  02A1  083F               	movf	VAL@coordenada,w
  2211  02A2  00A9               	movwf	??_VAL
  2212  02A3  01AA               	clrf	??_VAL+1
  2213  02A4  0829               	movf	??_VAL,w
  2214  02A5  00A0               	movwf	LCD_PRINT_WP@x
  2215  02A6  082A               	movf	??_VAL+1,w
  2216  02A7  00A1               	movwf	LCD_PRINT_WP@x+1
  2217  02A8  3002               	movlw	2
  2218  02A9  00A2               	movwf	LCD_PRINT_WP@y
  2219  02AA  3000               	movlw	0
  2220  02AB  00A3               	movwf	LCD_PRINT_WP@y+1
  2221  02AC  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2222  02AD  00AB               	movwf	??_VAL+2
  2223  02AE  082B               	movf	??_VAL+2,w
  2224  02AF  00A4               	movwf	LCD_PRINT_WP@frase
  2225  02B0  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2226  02B5                     l1663:	
  2227  02B5  3002               	movlw	2
  2228  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2229  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2230  02B8  063E               	xorwf	VAL@valor,w
  2231  02B9  1D03               	btfss	3,2
  2232  02BA  2ABC               	goto	u1361
  2233  02BB  2ABD               	goto	u1360
  2234  02BC                     u1361:	
  2235  02BC  2AD1               	goto	l1667
  2236  02BD                     u1360:	
  2237  02BD                     l1665:	
  2238  02BD  083F               	movf	VAL@coordenada,w
  2239  02BE  00A9               	movwf	??_VAL
  2240  02BF  01AA               	clrf	??_VAL+1
  2241  02C0  0829               	movf	??_VAL,w
  2242  02C1  00A0               	movwf	LCD_PRINT_WP@x
  2243  02C2  082A               	movf	??_VAL+1,w
  2244  02C3  00A1               	movwf	LCD_PRINT_WP@x+1
  2245  02C4  3002               	movlw	2
  2246  02C5  00A2               	movwf	LCD_PRINT_WP@y
  2247  02C6  3000               	movlw	0
  2248  02C7  00A3               	movwf	LCD_PRINT_WP@y+1
  2249  02C8  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2250  02C9  00AB               	movwf	??_VAL+2
  2251  02CA  082B               	movf	??_VAL+2,w
  2252  02CB  00A4               	movwf	LCD_PRINT_WP@frase
  2253  02CC  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2254  02D1                     l1667:	
  2255  02D1  3003               	movlw	3
  2256  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2257  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2258  02D4  063E               	xorwf	VAL@valor,w
  2259  02D5  1D03               	btfss	3,2
  2260  02D6  2AD8               	goto	u1371
  2261  02D7  2AD9               	goto	u1370
  2262  02D8                     u1371:	
  2263  02D8  2AED               	goto	l1671
  2264  02D9                     u1370:	
  2265  02D9                     l1669:	
  2266  02D9  083F               	movf	VAL@coordenada,w
  2267  02DA  00A9               	movwf	??_VAL
  2268  02DB  01AA               	clrf	??_VAL+1
  2269  02DC  0829               	movf	??_VAL,w
  2270  02DD  00A0               	movwf	LCD_PRINT_WP@x
  2271  02DE  082A               	movf	??_VAL+1,w
  2272  02DF  00A1               	movwf	LCD_PRINT_WP@x+1
  2273  02E0  3002               	movlw	2
  2274  02E1  00A2               	movwf	LCD_PRINT_WP@y
  2275  02E2  3000               	movlw	0
  2276  02E3  00A3               	movwf	LCD_PRINT_WP@y+1
  2277  02E4  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  2278  02E5  00AB               	movwf	??_VAL+2
  2279  02E6  082B               	movf	??_VAL+2,w
  2280  02E7  00A4               	movwf	LCD_PRINT_WP@frase
  2281  02E8  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2282  02ED                     l1671:	
  2283  02ED  3004               	movlw	4
  2284  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2285  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2286  02F0  063E               	xorwf	VAL@valor,w
  2287  02F1  1D03               	btfss	3,2
  2288  02F2  2AF4               	goto	u1381
  2289  02F3  2AF5               	goto	u1380
  2290  02F4                     u1381:	
  2291  02F4  2B09               	goto	l1675
  2292  02F5                     u1380:	
  2293  02F5                     l1673:	
  2294  02F5  083F               	movf	VAL@coordenada,w
  2295  02F6  00A9               	movwf	??_VAL
  2296  02F7  01AA               	clrf	??_VAL+1
  2297  02F8  0829               	movf	??_VAL,w
  2298  02F9  00A0               	movwf	LCD_PRINT_WP@x
  2299  02FA  082A               	movf	??_VAL+1,w
  2300  02FB  00A1               	movwf	LCD_PRINT_WP@x+1
  2301  02FC  3002               	movlw	2
  2302  02FD  00A2               	movwf	LCD_PRINT_WP@y
  2303  02FE  3000               	movlw	0
  2304  02FF  00A3               	movwf	LCD_PRINT_WP@y+1
  2305  0300  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2306  0301  00AB               	movwf	??_VAL+2
  2307  0302  082B               	movf	??_VAL+2,w
  2308  0303  00A4               	movwf	LCD_PRINT_WP@frase
  2309  0304  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2310  0309                     l1675:	
  2311  0309  3005               	movlw	5
  2312  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2313  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2314  030C  063E               	xorwf	VAL@valor,w
  2315  030D  1D03               	btfss	3,2
  2316  030E  2B10               	goto	u1391
  2317  030F  2B11               	goto	u1390
  2318  0310                     u1391:	
  2319  0310  2B25               	goto	l1679
  2320  0311                     u1390:	
  2321  0311                     l1677:	
  2322  0311  083F               	movf	VAL@coordenada,w
  2323  0312  00A9               	movwf	??_VAL
  2324  0313  01AA               	clrf	??_VAL+1
  2325  0314  0829               	movf	??_VAL,w
  2326  0315  00A0               	movwf	LCD_PRINT_WP@x
  2327  0316  082A               	movf	??_VAL+1,w
  2328  0317  00A1               	movwf	LCD_PRINT_WP@x+1
  2329  0318  3002               	movlw	2
  2330  0319  00A2               	movwf	LCD_PRINT_WP@y
  2331  031A  3000               	movlw	0
  2332  031B  00A3               	movwf	LCD_PRINT_WP@y+1
  2333  031C  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2334  031D  00AB               	movwf	??_VAL+2
  2335  031E  082B               	movf	??_VAL+2,w
  2336  031F  00A4               	movwf	LCD_PRINT_WP@frase
  2337  0320  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2338  0325                     l1679:	
  2339  0325  3006               	movlw	6
  2340  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0328  063E               	xorwf	VAL@valor,w
  2343  0329  1D03               	btfss	3,2
  2344  032A  2B2C               	goto	u1401
  2345  032B  2B2D               	goto	u1400
  2346  032C                     u1401:	
  2347  032C  2B41               	goto	l1683
  2348  032D                     u1400:	
  2349  032D                     l1681:	
  2350  032D  083F               	movf	VAL@coordenada,w
  2351  032E  00A9               	movwf	??_VAL
  2352  032F  01AA               	clrf	??_VAL+1
  2353  0330  0829               	movf	??_VAL,w
  2354  0331  00A0               	movwf	LCD_PRINT_WP@x
  2355  0332  082A               	movf	??_VAL+1,w
  2356  0333  00A1               	movwf	LCD_PRINT_WP@x+1
  2357  0334  3002               	movlw	2
  2358  0335  00A2               	movwf	LCD_PRINT_WP@y
  2359  0336  3000               	movlw	0
  2360  0337  00A3               	movwf	LCD_PRINT_WP@y+1
  2361  0338  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2362  0339  00AB               	movwf	??_VAL+2
  2363  033A  082B               	movf	??_VAL+2,w
  2364  033B  00A4               	movwf	LCD_PRINT_WP@frase
  2365  033C  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2366  0341                     l1683:	
  2367  0341  3007               	movlw	7
  2368  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0344  063E               	xorwf	VAL@valor,w
  2371  0345  1D03               	btfss	3,2
  2372  0346  2B48               	goto	u1411
  2373  0347  2B49               	goto	u1410
  2374  0348                     u1411:	
  2375  0348  2B5D               	goto	l1687
  2376  0349                     u1410:	
  2377  0349                     l1685:	
  2378  0349  083F               	movf	VAL@coordenada,w
  2379  034A  00A9               	movwf	??_VAL
  2380  034B  01AA               	clrf	??_VAL+1
  2381  034C  0829               	movf	??_VAL,w
  2382  034D  00A0               	movwf	LCD_PRINT_WP@x
  2383  034E  082A               	movf	??_VAL+1,w
  2384  034F  00A1               	movwf	LCD_PRINT_WP@x+1
  2385  0350  3002               	movlw	2
  2386  0351  00A2               	movwf	LCD_PRINT_WP@y
  2387  0352  3000               	movlw	0
  2388  0353  00A3               	movwf	LCD_PRINT_WP@y+1
  2389  0354  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2390  0355  00AB               	movwf	??_VAL+2
  2391  0356  082B               	movf	??_VAL+2,w
  2392  0357  00A4               	movwf	LCD_PRINT_WP@frase
  2393  0358  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2394  035D                     l1687:	
  2395  035D  3008               	movlw	8
  2396  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2397  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0360  063E               	xorwf	VAL@valor,w
  2399  0361  1D03               	btfss	3,2
  2400  0362  2B64               	goto	u1421
  2401  0363  2B65               	goto	u1420
  2402  0364                     u1421:	
  2403  0364  2B79               	goto	l1691
  2404  0365                     u1420:	
  2405  0365                     l1689:	
  2406  0365  083F               	movf	VAL@coordenada,w
  2407  0366  00A9               	movwf	??_VAL
  2408  0367  01AA               	clrf	??_VAL+1
  2409  0368  0829               	movf	??_VAL,w
  2410  0369  00A0               	movwf	LCD_PRINT_WP@x
  2411  036A  082A               	movf	??_VAL+1,w
  2412  036B  00A1               	movwf	LCD_PRINT_WP@x+1
  2413  036C  3002               	movlw	2
  2414  036D  00A2               	movwf	LCD_PRINT_WP@y
  2415  036E  3000               	movlw	0
  2416  036F  00A3               	movwf	LCD_PRINT_WP@y+1
  2417  0370  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2418  0371  00AB               	movwf	??_VAL+2
  2419  0372  082B               	movf	??_VAL+2,w
  2420  0373  00A4               	movwf	LCD_PRINT_WP@frase
  2421  0374  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2422  0379                     l1691:	
  2423  0379  3009               	movlw	9
  2424  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2425  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2426  037C  063E               	xorwf	VAL@valor,w
  2427  037D  1D03               	btfss	3,2
  2428  037E  2B80               	goto	u1431
  2429  037F  2B81               	goto	u1430
  2430  0380                     u1431:	
  2431  0380  2B95               	goto	l1695
  2432  0381                     u1430:	
  2433  0381                     l1693:	
  2434  0381  083F               	movf	VAL@coordenada,w
  2435  0382  00A9               	movwf	??_VAL
  2436  0383  01AA               	clrf	??_VAL+1
  2437  0384  0829               	movf	??_VAL,w
  2438  0385  00A0               	movwf	LCD_PRINT_WP@x
  2439  0386  082A               	movf	??_VAL+1,w
  2440  0387  00A1               	movwf	LCD_PRINT_WP@x+1
  2441  0388  3002               	movlw	2
  2442  0389  00A2               	movwf	LCD_PRINT_WP@y
  2443  038A  3000               	movlw	0
  2444  038B  00A3               	movwf	LCD_PRINT_WP@y+1
  2445  038C  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2446  038D  00AB               	movwf	??_VAL+2
  2447  038E  082B               	movf	??_VAL+2,w
  2448  038F  00A4               	movwf	LCD_PRINT_WP@frase
  2449  0390  120A  118A  277D  120A  118A  	fcall	_LCD_PRINT_WP
  2450  0395                     l1695:	
  2451  0395  3001               	movlw	1
  2452  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0398  07BB               	addwf	VAL@i_376,f
  2455  0399  1803               	skipnc
  2456  039A  0ABC               	incf	VAL@i_376+1,f
  2457  039B  3000               	movlw	0
  2458  039C  07BC               	addwf	VAL@i_376+1,f
  2459  039D                     l1697:	
  2460  039D  083C               	movf	VAL@i_376+1,w
  2461  039E  3A80               	xorlw	128
  2462  039F  00FF               	movwf	btemp+1
  2463  03A0  3080               	movlw	128
  2464  03A1  027F               	subwf	btemp+1,w
  2465  03A2  1D03               	skipz
  2466  03A3  2BA6               	goto	u1445
  2467  03A4  3003               	movlw	3
  2468  03A5  023B               	subwf	VAL@i_376,w
  2469  03A6                     u1445:	
  2470  03A6  1C03               	skipc
  2471  03A7  2BA9               	goto	u1441
  2472  03A8  2BAA               	goto	u1440
  2473  03A9                     u1441:	
  2474  03A9  2A56               	goto	l1641
  2475  03AA                     u1440:	
  2476  03AA                     l196:	
  2477  03AA  0008               	return
  2478  03AB                     __end_of_VAL:	
  2479                           
  2480                           	psect	text3
  2481  063B                     __ptext3:	
  2482 ;; *************** function ___awmod *****************
  2483 ;; Defined at:
  2484 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  divisor         2    3[COMMON] int 
  2487 ;;  dividend        2    5[COMMON] int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  sign            1    9[COMMON] unsigned char 
  2490 ;;  counter         1    8[COMMON] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2    3[COMMON] int 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         4       0       0       0       0
  2501 ;;      Locals:         2       0       0       0       0
  2502 ;;      Temps:          1       0       0       0       0
  2503 ;;      Totals:         7       0       0       0       0
  2504 ;;Total ram usage:        7 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    1
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_VAL
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function ___awmod
  2516  063B                     ___awmod:	
  2517  063B                     l1439:	
  2518                           ;incstack = 0
  2519                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2520                           
  2521  063B  01F9               	clrf	___awmod@sign
  2522  063C                     l1441:	
  2523  063C  1FF6               	btfss	___awmod@dividend+1,7
  2524  063D  2E3F               	goto	u1041
  2525  063E  2E40               	goto	u1040
  2526  063F                     u1041:	
  2527  063F  2E47               	goto	l1447
  2528  0640                     u1040:	
  2529  0640                     l1443:	
  2530  0640  09F5               	comf	___awmod@dividend,f
  2531  0641  09F6               	comf	___awmod@dividend+1,f
  2532  0642  0AF5               	incf	___awmod@dividend,f
  2533  0643  1903               	skipnz
  2534  0644  0AF6               	incf	___awmod@dividend+1,f
  2535  0645                     l1445:	
  2536  0645  01F9               	clrf	___awmod@sign
  2537  0646  0AF9               	incf	___awmod@sign,f
  2538  0647                     l1447:	
  2539  0647  1FF4               	btfss	___awmod@divisor+1,7
  2540  0648  2E4A               	goto	u1051
  2541  0649  2E4B               	goto	u1050
  2542  064A                     u1051:	
  2543  064A  2E50               	goto	l1451
  2544  064B                     u1050:	
  2545  064B                     l1449:	
  2546  064B  09F3               	comf	___awmod@divisor,f
  2547  064C  09F4               	comf	___awmod@divisor+1,f
  2548  064D  0AF3               	incf	___awmod@divisor,f
  2549  064E  1903               	skipnz
  2550  064F  0AF4               	incf	___awmod@divisor+1,f
  2551  0650                     l1451:	
  2552  0650  0873               	movf	___awmod@divisor,w
  2553  0651  0474               	iorwf	___awmod@divisor+1,w
  2554  0652  1903               	btfsc	3,2
  2555  0653  2E55               	goto	u1061
  2556  0654  2E56               	goto	u1060
  2557  0655                     u1061:	
  2558  0655  2E85               	goto	l1469
  2559  0656                     u1060:	
  2560  0656                     l1453:	
  2561  0656  01F8               	clrf	___awmod@counter
  2562  0657  0AF8               	incf	___awmod@counter,f
  2563  0658  2E64               	goto	l1459
  2564  0659                     l1455:	
  2565  0659  3001               	movlw	1
  2566  065A                     u1075:	
  2567  065A  1003               	clrc
  2568  065B  0DF3               	rlf	___awmod@divisor,f
  2569  065C  0DF4               	rlf	___awmod@divisor+1,f
  2570  065D  3EFF               	addlw	-1
  2571  065E  1D03               	skipz
  2572  065F  2E5A               	goto	u1075
  2573  0660                     l1457:	
  2574  0660  3001               	movlw	1
  2575  0661  00F7               	movwf	??___awmod
  2576  0662  0877               	movf	??___awmod,w
  2577  0663  07F8               	addwf	___awmod@counter,f
  2578  0664                     l1459:	
  2579  0664  1FF4               	btfss	___awmod@divisor+1,7
  2580  0665  2E67               	goto	u1081
  2581  0666  2E68               	goto	u1080
  2582  0667                     u1081:	
  2583  0667  2E59               	goto	l1455
  2584  0668                     u1080:	
  2585  0668                     l1461:	
  2586  0668  0874               	movf	___awmod@divisor+1,w
  2587  0669  0276               	subwf	___awmod@dividend+1,w
  2588  066A  1D03               	skipz
  2589  066B  2E6E               	goto	u1095
  2590  066C  0873               	movf	___awmod@divisor,w
  2591  066D  0275               	subwf	___awmod@dividend,w
  2592  066E                     u1095:	
  2593  066E  1C03               	skipc
  2594  066F  2E71               	goto	u1091
  2595  0670  2E72               	goto	u1090
  2596  0671                     u1091:	
  2597  0671  2E78               	goto	l1465
  2598  0672                     u1090:	
  2599  0672                     l1463:	
  2600  0672  0873               	movf	___awmod@divisor,w
  2601  0673  02F5               	subwf	___awmod@dividend,f
  2602  0674  0874               	movf	___awmod@divisor+1,w
  2603  0675  1C03               	skipc
  2604  0676  03F6               	decf	___awmod@dividend+1,f
  2605  0677  02F6               	subwf	___awmod@dividend+1,f
  2606  0678                     l1465:	
  2607  0678  3001               	movlw	1
  2608  0679                     u1105:	
  2609  0679  1003               	clrc
  2610  067A  0CF4               	rrf	___awmod@divisor+1,f
  2611  067B  0CF3               	rrf	___awmod@divisor,f
  2612  067C  3EFF               	addlw	-1
  2613  067D  1D03               	skipz
  2614  067E  2E79               	goto	u1105
  2615  067F                     l1467:	
  2616  067F  3001               	movlw	1
  2617  0680  02F8               	subwf	___awmod@counter,f
  2618  0681  1D03               	btfss	3,2
  2619  0682  2E84               	goto	u1111
  2620  0683  2E85               	goto	u1110
  2621  0684                     u1111:	
  2622  0684  2E68               	goto	l1461
  2623  0685                     u1110:	
  2624  0685                     l1469:	
  2625  0685  0879               	movf	___awmod@sign,w
  2626  0686  1903               	btfsc	3,2
  2627  0687  2E89               	goto	u1121
  2628  0688  2E8A               	goto	u1120
  2629  0689                     u1121:	
  2630  0689  2E8F               	goto	l1473
  2631  068A                     u1120:	
  2632  068A                     l1471:	
  2633  068A  09F5               	comf	___awmod@dividend,f
  2634  068B  09F6               	comf	___awmod@dividend+1,f
  2635  068C  0AF5               	incf	___awmod@dividend,f
  2636  068D  1903               	skipnz
  2637  068E  0AF6               	incf	___awmod@dividend+1,f
  2638  068F                     l1473:	
  2639  068F  0876               	movf	___awmod@dividend+1,w
  2640  0690  00F4               	movwf	?___awmod+1
  2641  0691  0875               	movf	___awmod@dividend,w
  2642  0692  00F3               	movwf	?___awmod
  2643  0693                     l453:	
  2644  0693  0008               	return
  2645  0694                     __end_of___awmod:	
  2646                           
  2647                           	psect	text4
  2648  05D2                     __ptext4:	
  2649 ;; *************** function ___awdiv *****************
  2650 ;; Defined at:
  2651 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  divisor         2    0[BANK0 ] int 
  2654 ;;  dividend        2    2[BANK0 ] int 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  quotient        2    6[BANK0 ] int 
  2657 ;;  sign            1    5[BANK0 ] unsigned char 
  2658 ;;  counter         1    4[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  2    0[BANK0 ] int 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       4       0       0       0
  2669 ;;      Locals:         0       4       0       0       0
  2670 ;;      Temps:          1       0       0       0       0
  2671 ;;      Totals:         1       8       0       0       0
  2672 ;;Total ram usage:        9 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_VAL
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function ___awdiv
  2684  05D2                     ___awdiv:	
  2685  05D2                     l1395:	
  2686                           ;incstack = 0
  2687                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2688                           
  2689  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2690  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2691  05D4  01A5               	clrf	___awdiv@sign
  2692  05D5                     l1397:	
  2693  05D5  1FA1               	btfss	___awdiv@divisor+1,7
  2694  05D6  2DD8               	goto	u941
  2695  05D7  2DD9               	goto	u940
  2696  05D8                     u941:	
  2697  05D8  2DE0               	goto	l1403
  2698  05D9                     u940:	
  2699  05D9                     l1399:	
  2700  05D9  09A0               	comf	___awdiv@divisor,f
  2701  05DA  09A1               	comf	___awdiv@divisor+1,f
  2702  05DB  0AA0               	incf	___awdiv@divisor,f
  2703  05DC  1903               	skipnz
  2704  05DD  0AA1               	incf	___awdiv@divisor+1,f
  2705  05DE                     l1401:	
  2706  05DE  01A5               	clrf	___awdiv@sign
  2707  05DF  0AA5               	incf	___awdiv@sign,f
  2708  05E0                     l1403:	
  2709  05E0  1FA3               	btfss	___awdiv@dividend+1,7
  2710  05E1  2DE3               	goto	u951
  2711  05E2  2DE4               	goto	u950
  2712  05E3                     u951:	
  2713  05E3  2DED               	goto	l1409
  2714  05E4                     u950:	
  2715  05E4                     l1405:	
  2716  05E4  09A2               	comf	___awdiv@dividend,f
  2717  05E5  09A3               	comf	___awdiv@dividend+1,f
  2718  05E6  0AA2               	incf	___awdiv@dividend,f
  2719  05E7  1903               	skipnz
  2720  05E8  0AA3               	incf	___awdiv@dividend+1,f
  2721  05E9                     l1407:	
  2722  05E9  3001               	movlw	1
  2723  05EA  00FA               	movwf	??___awdiv
  2724  05EB  087A               	movf	??___awdiv,w
  2725  05EC  06A5               	xorwf	___awdiv@sign,f
  2726  05ED                     l1409:	
  2727  05ED  01A6               	clrf	___awdiv@quotient
  2728  05EE  01A7               	clrf	___awdiv@quotient+1
  2729  05EF                     l1411:	
  2730  05EF  0820               	movf	___awdiv@divisor,w
  2731  05F0  0421               	iorwf	___awdiv@divisor+1,w
  2732  05F1  1903               	btfsc	3,2
  2733  05F2  2DF4               	goto	u961
  2734  05F3  2DF5               	goto	u960
  2735  05F4                     u961:	
  2736  05F4  2E2C               	goto	l1431
  2737  05F5                     u960:	
  2738  05F5                     l1413:	
  2739  05F5  01A4               	clrf	___awdiv@counter
  2740  05F6  0AA4               	incf	___awdiv@counter,f
  2741  05F7  2E03               	goto	l1419
  2742  05F8                     l1415:	
  2743  05F8  3001               	movlw	1
  2744  05F9                     u975:	
  2745  05F9  1003               	clrc
  2746  05FA  0DA0               	rlf	___awdiv@divisor,f
  2747  05FB  0DA1               	rlf	___awdiv@divisor+1,f
  2748  05FC  3EFF               	addlw	-1
  2749  05FD  1D03               	skipz
  2750  05FE  2DF9               	goto	u975
  2751  05FF                     l1417:	
  2752  05FF  3001               	movlw	1
  2753  0600  00FA               	movwf	??___awdiv
  2754  0601  087A               	movf	??___awdiv,w
  2755  0602  07A4               	addwf	___awdiv@counter,f
  2756  0603                     l1419:	
  2757  0603  1FA1               	btfss	___awdiv@divisor+1,7
  2758  0604  2E06               	goto	u981
  2759  0605  2E07               	goto	u980
  2760  0606                     u981:	
  2761  0606  2DF8               	goto	l1415
  2762  0607                     u980:	
  2763  0607                     l1421:	
  2764  0607  3001               	movlw	1
  2765  0608                     u995:	
  2766  0608  1003               	clrc
  2767  0609  0DA6               	rlf	___awdiv@quotient,f
  2768  060A  0DA7               	rlf	___awdiv@quotient+1,f
  2769  060B  3EFF               	addlw	-1
  2770  060C  1D03               	skipz
  2771  060D  2E08               	goto	u995
  2772  060E  0821               	movf	___awdiv@divisor+1,w
  2773  060F  0223               	subwf	___awdiv@dividend+1,w
  2774  0610  1D03               	skipz
  2775  0611  2E14               	goto	u1005
  2776  0612  0820               	movf	___awdiv@divisor,w
  2777  0613  0222               	subwf	___awdiv@dividend,w
  2778  0614                     u1005:	
  2779  0614  1C03               	skipc
  2780  0615  2E17               	goto	u1001
  2781  0616  2E18               	goto	u1000
  2782  0617                     u1001:	
  2783  0617  2E1F               	goto	l1427
  2784  0618                     u1000:	
  2785  0618                     l1423:	
  2786  0618  0820               	movf	___awdiv@divisor,w
  2787  0619  02A2               	subwf	___awdiv@dividend,f
  2788  061A  0821               	movf	___awdiv@divisor+1,w
  2789  061B  1C03               	skipc
  2790  061C  03A3               	decf	___awdiv@dividend+1,f
  2791  061D  02A3               	subwf	___awdiv@dividend+1,f
  2792  061E                     l1425:	
  2793  061E  1426               	bsf	___awdiv@quotient,0
  2794  061F                     l1427:	
  2795  061F  3001               	movlw	1
  2796  0620                     u1015:	
  2797  0620  1003               	clrc
  2798  0621  0CA1               	rrf	___awdiv@divisor+1,f
  2799  0622  0CA0               	rrf	___awdiv@divisor,f
  2800  0623  3EFF               	addlw	-1
  2801  0624  1D03               	skipz
  2802  0625  2E20               	goto	u1015
  2803  0626                     l1429:	
  2804  0626  3001               	movlw	1
  2805  0627  02A4               	subwf	___awdiv@counter,f
  2806  0628  1D03               	btfss	3,2
  2807  0629  2E2B               	goto	u1021
  2808  062A  2E2C               	goto	u1020
  2809  062B                     u1021:	
  2810  062B  2E07               	goto	l1421
  2811  062C                     u1020:	
  2812  062C                     l1431:	
  2813  062C  0825               	movf	___awdiv@sign,w
  2814  062D  1903               	btfsc	3,2
  2815  062E  2E30               	goto	u1031
  2816  062F  2E31               	goto	u1030
  2817  0630                     u1031:	
  2818  0630  2E36               	goto	l1435
  2819  0631                     u1030:	
  2820  0631                     l1433:	
  2821  0631  09A6               	comf	___awdiv@quotient,f
  2822  0632  09A7               	comf	___awdiv@quotient+1,f
  2823  0633  0AA6               	incf	___awdiv@quotient,f
  2824  0634  1903               	skipnz
  2825  0635  0AA7               	incf	___awdiv@quotient+1,f
  2826  0636                     l1435:	
  2827  0636  0827               	movf	___awdiv@quotient+1,w
  2828  0637  00A1               	movwf	?___awdiv+1
  2829  0638  0826               	movf	___awdiv@quotient,w
  2830  0639  00A0               	movwf	?___awdiv
  2831  063A                     l440:	
  2832  063A  0008               	return
  2833  063B                     __end_of___awdiv:	
  2834                           
  2835                           	psect	text5
  2836  077D                     __ptext5:	
  2837 ;; *************** function _LCD_PRINT_WP *****************
  2838 ;; Defined at:
  2839 ;;		line 63 in file "LCD.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  x               2    0[BANK0 ] int 
  2842 ;;  y               2    2[BANK0 ] int 
  2843 ;;  frase           1    4[BANK0 ] PTR unsigned char 
  2844 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2845 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2846 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2847 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2848 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2849 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2850 ;;		 -> STR_2(17), STR_1(17), 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  location        1    5[BANK0 ] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2862 ;;      Params:         0       5       0       0       0
  2863 ;;      Locals:         0       1       0       0       0
  2864 ;;      Temps:          1       0       0       0       0
  2865 ;;      Totals:         1       6       0       0       0
  2866 ;;Total ram usage:        7 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    5
  2869 ;; This function calls:
  2870 ;;		_LCD_CONTROL
  2871 ;;		_LCD_PRINT
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;;		_VAL
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _LCD_PRINT_WP
  2880  077D                     _LCD_PRINT_WP:	
  2881  077D                     l1341:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2884                           
  2885  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2886  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2887  077F  0322               	decf	LCD_PRINT_WP@y,w
  2888  0780  0423               	iorwf	LCD_PRINT_WP@y+1,w
  2889  0781  1D03               	btfss	3,2
  2890  0782  2F84               	goto	u831
  2891  0783  2F85               	goto	u830
  2892  0784                     u831:	
  2893  0784  2F8B               	goto	l1345
  2894  0785                     u830:	
  2895  0785                     l1343:	
  2896  0785  0820               	movf	LCD_PRINT_WP@x,w
  2897  0786  3E80               	addlw	128
  2898  0787  00FA               	movwf	??_LCD_PRINT_WP
  2899  0788  087A               	movf	??_LCD_PRINT_WP,w
  2900  0789  00A5               	movwf	LCD_PRINT_WP@location
  2901  078A  2F90               	goto	l1351
  2902  078B                     l1345:	
  2903  078B                     l1347:	
  2904  078B  0820               	movf	LCD_PRINT_WP@x,w
  2905  078C  3EC0               	addlw	192
  2906  078D  00FA               	movwf	??_LCD_PRINT_WP
  2907  078E  087A               	movf	??_LCD_PRINT_WP,w
  2908  078F  00A5               	movwf	LCD_PRINT_WP@location
  2909  0790                     l1351:	
  2910  0790  0825               	movf	LCD_PRINT_WP@location,w
  2911  0791  120A  158A  27EE  120A  118A  	fcall	_LCD_CONTROL
  2912  0796                     l1353:	
  2913  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0798  0824               	movf	LCD_PRINT_WP@frase,w
  2916  0799  120A  118A  279F  120A  118A  	fcall	_LCD_PRINT
  2917  079E                     l158:	
  2918  079E  0008               	return
  2919  079F                     __end_of_LCD_PRINT_WP:	
  2920                           
  2921                           	psect	text6
  2922  079F                     __ptext6:	
  2923 ;; *************** function _LCD_PRINT *****************
  2924 ;; Defined at:
  2925 ;;		line 56 in file "LCD.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  data            1    wreg     PTR unsigned char 
  2928 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2929 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2930 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2931 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2932 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2933 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2934 ;;		 -> STR_2(17), STR_1(17), 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  data            1    9[COMMON] PTR unsigned char 
  2937 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2938 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2939 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2940 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2941 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2942 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2943 ;;		 -> STR_2(17), STR_1(17), 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         1       0       0       0       0
  2955 ;;      Temps:          1       0       0       0       0
  2956 ;;      Totals:         2       0       0       0       0
  2957 ;;Total ram usage:        2 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    4
  2960 ;; This function calls:
  2961 ;;		_LCD_DATO
  2962 ;; This function is called by:
  2963 ;;		_LCD_PRINT_WP
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _LCD_PRINT
  2969  079F                     _LCD_PRINT:	
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2973                           ;LCD_PRINT@data stored from wreg
  2974  079F  00F9               	movwf	LCD_PRINT@data
  2975  07A0                     l1333:	
  2976  07A0  2FB1               	goto	l1339
  2977  07A1                     l1335:	
  2978  07A1  0879               	movf	LCD_PRINT@data,w
  2979  07A2  0084               	movwf	4
  2980  07A3  120A  118A  2556  120A  118A  	fcall	stringdir
  2981  07A8  120A  118A  27EA  120A  118A  	fcall	_LCD_DATO
  2982  07AD                     l1337:	
  2983  07AD  3001               	movlw	1
  2984  07AE  00F8               	movwf	??_LCD_PRINT
  2985  07AF  0878               	movf	??_LCD_PRINT,w
  2986  07B0  07F9               	addwf	LCD_PRINT@data,f
  2987  07B1                     l1339:	
  2988  07B1  0879               	movf	LCD_PRINT@data,w
  2989  07B2  0084               	movwf	4
  2990  07B3  120A  118A  2556  120A  118A  	fcall	stringdir
  2991  07B8  3A00               	xorlw	0
  2992  07B9  1D03               	skipz
  2993  07BA  2FBC               	goto	u821
  2994  07BB  2FBD               	goto	u820
  2995  07BC                     u821:	
  2996  07BC  2FA1               	goto	l1335
  2997  07BD                     u820:	
  2998  07BD                     l148:	
  2999  07BD  0008               	return
  3000  07BE                     __end_of_LCD_PRINT:	
  3001                           
  3002                           	psect	text7
  3003  07EA                     __ptext7:	
  3004 ;; *************** function _LCD_DATO *****************
  3005 ;; Defined at:
  3006 ;;		line 45 in file "LCD.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  comando         1    wreg     unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  comando         1    7[COMMON] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0
  3023 ;;      Totals:         1       0       0       0       0
  3024 ;;Total ram usage:        1 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    3
  3027 ;; This function calls:
  3028 ;;		_LCD_PULSE
  3029 ;;		_delay_us
  3030 ;; This function is called by:
  3031 ;;		_LCD_PRINT
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _LCD_DATO
  3037  07EA                     _LCD_DATO:	
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  3041                           ;LCD_DATO@comando stored from wreg
  3042  07EA  00F7               	movwf	LCD_DATO@comando
  3043  07EB                     l1317:	
  3044  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3045  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3046  07ED  1409               	bsf	9,0	;volatile
  3047  07EE                     l1319:	
  3048  07EE  0877               	movf	LCD_DATO@comando,w
  3049  07EF  0088               	movwf	8	;volatile
  3050  07F0                     l1321:	
  3051  07F0  120A  118A  27D7  120A  118A  	fcall	_LCD_PULSE
  3052  07F5                     l1323:	
  3053  07F5  3032               	movlw	50
  3054  07F6  120A  118A  27BE  120A  118A  	fcall	_delay_us
  3055  07FB                     l139:	
  3056  07FB  0008               	return
  3057  07FC                     __end_of_LCD_DATO:	
  3058                           
  3059                           	psect	text8
  3060  0FD8                     __ptext8:	
  3061 ;; *************** function _LCD_RH *****************
  3062 ;; Defined at:
  3063 ;;		line 61 in file "LCD.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    4
  3084 ;; This function calls:
  3085 ;;		_LCD_CONTROL
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _LCD_RH
  3093  0FD8                     _LCD_RH:	
  3094  0FD8                     l1535:	
  3095                           ;incstack = 0
  3096                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3097                           
  3098  0FD8  3002               	movlw	2
  3099  0FD9  120A  158A  27EE  120A  158A  	fcall	_LCD_CONTROL
  3100  0FDE                     l151:	
  3101  0FDE  0008               	return
  3102  0FDF                     __end_of_LCD_RH:	
  3103                           
  3104                           	psect	text9
  3105  0FD1                     __ptext9:	
  3106 ;; *************** function _LCD_CLEAR *****************
  3107 ;; Defined at:
  3108 ;;		line 52 in file "LCD.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    4
  3129 ;; This function calls:
  3130 ;;		_LCD_CONTROL
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _LCD_CLEAR
  3138  0FD1                     _LCD_CLEAR:	
  3139  0FD1                     l1533:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3142                           
  3143  0FD1  3001               	movlw	1
  3144  0FD2  120A  158A  27EE  120A  158A  	fcall	_LCD_CONTROL
  3145  0FD7                     l142:	
  3146  0FD7  0008               	return
  3147  0FD8                     __end_of_LCD_CLEAR:	
  3148                           
  3149                           	psect	text10
  3150  0730                     __ptext10:	
  3151 ;; *************** function _INIT_LCD *****************
  3152 ;; Defined at:
  3153 ;;		line 20 in file "LCD.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    4
  3174 ;; This function calls:
  3175 ;;		_LCD_CONTROL
  3176 ;;		_delay_ms
  3177 ;; This function is called by:
  3178 ;;		_main
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function _INIT_LCD
  3184  0730                     _INIT_LCD:	
  3185  0730                     l1515:	
  3186                           ;incstack = 0
  3187                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3188                           
  3189  0730  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0731  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0732  1009               	bcf	9,0	;volatile
  3192  0733  1089               	bcf	9,1	;volatile
  3193  0734                     l1517:	
  3194  0734  0188               	clrf	8	;volatile
  3195  0735                     l1519:	
  3196  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0737  1009               	bcf	9,0	;volatile
  3199  0738                     l1521:	
  3200  0738  1089               	bcf	9,1	;volatile
  3201  0739  0188               	clrf	8	;volatile
  3202  073A                     l1523:	
  3203  073A  3032               	movlw	50
  3204  073B  120A  118A  2703  120A  118A  	fcall	_delay_ms
  3205  0740                     l1525:	
  3206  0740  3002               	movlw	2
  3207  0741  120A  158A  27EE  120A  118A  	fcall	_LCD_CONTROL
  3208  0746                     l1527:	
  3209  0746  3038               	movlw	56
  3210  0747  120A  158A  27EE  120A  118A  	fcall	_LCD_CONTROL
  3211  074C                     l1529:	
  3212  074C  300C               	movlw	12
  3213  074D  120A  158A  27EE  120A  118A  	fcall	_LCD_CONTROL
  3214  0752                     l1531:	
  3215  0752  3006               	movlw	6
  3216  0753  120A  158A  27EE  120A  118A  	fcall	_LCD_CONTROL
  3217  0758                     l130:	
  3218  0758  0008               	return
  3219  0759                     __end_of_INIT_LCD:	
  3220                           
  3221                           	psect	text11
  3222  0FEE                     __ptext11:	
  3223 ;; *************** function _LCD_CONTROL *****************
  3224 ;; Defined at:
  3225 ;;		line 33 in file "LCD.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  dato            1    wreg     unsigned char 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  dato            1    9[COMMON] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0
  3242 ;;      Totals:         1       0       0       0       0
  3243 ;;Total ram usage:        1 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    3
  3246 ;; This function calls:
  3247 ;;		_LCD_PULSE
  3248 ;;		_delay_ms
  3249 ;; This function is called by:
  3250 ;;		_INIT_LCD
  3251 ;;		_LCD_CLEAR
  3252 ;;		_LCD_RH
  3253 ;;		_LCD_PRINT_WP
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _LCD_CONTROL
  3259  0FEE                     _LCD_CONTROL:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3263                           ;LCD_CONTROL@dato stored from wreg
  3264  0FEE  00F9               	movwf	LCD_CONTROL@dato
  3265  0FEF                     l1325:	
  3266  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0FF1  1009               	bcf	9,0	;volatile
  3269  0FF2                     l1327:	
  3270  0FF2  0879               	movf	LCD_CONTROL@dato,w
  3271  0FF3  0088               	movwf	8	;volatile
  3272  0FF4                     l1329:	
  3273  0FF4  120A  118A  27D7  120A  158A  	fcall	_LCD_PULSE
  3274  0FF9                     l1331:	
  3275  0FF9  3002               	movlw	2
  3276  0FFA  120A  118A  2703  120A  158A  	fcall	_delay_ms
  3277  0FFF                     l133:	
  3278  0FFF  0008               	return
  3279  1000                     __end_of_LCD_CONTROL:	
  3280                           
  3281                           	psect	text12
  3282  0703                     __ptext12:	
  3283 ;; *************** function _delay_ms *****************
  3284 ;; Defined at:
  3285 ;;		line 17 in file "DELAYS.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  dms             1    wreg     unsigned char 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  dms             1    4[COMMON] unsigned char 
  3290 ;;  j               2    7[COMMON] int 
  3291 ;;  i               2    5[COMMON] int 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, btemp+1
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         5       0       0       0       0
  3303 ;;      Temps:          1       0       0       0       0
  3304 ;;      Totals:         6       0       0       0       0
  3305 ;;Total ram usage:        6 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    1
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;;		_INIT_LCD
  3313 ;;		_LCD_CONTROL
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _delay_ms
  3319  0703                     _delay_ms:	
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  3323                           ;delay_ms@dms stored from wreg
  3324  0703  00F4               	movwf	delay_ms@dms
  3325  0704                     l1303:	
  3326                           
  3327                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++);DELAYS.c: 18:     for (int i = 0; i<dms;i+
      +                          +)
  3328  0704  01F5               	clrf	delay_ms@i
  3329  0705  01F6               	clrf	delay_ms@i+1
  3330  0706  2F22               	goto	l93
  3331  0707                     l1305:	
  3332                           
  3333                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}};DELAYS.c: 19:     {for (int j = 0; j
      +                          <255 ;j++){}}}
  3334  0707  01F7               	clrf	delay_ms@j
  3335  0708  01F8               	clrf	delay_ms@j+1
  3336  0709                     l1311:	
  3337  0709  3001               	movlw	1
  3338  070A  07F7               	addwf	delay_ms@j,f
  3339  070B  1803               	skipnc
  3340  070C  0AF8               	incf	delay_ms@j+1,f
  3341  070D  3000               	movlw	0
  3342  070E  07F8               	addwf	delay_ms@j+1,f
  3343  070F                     l1313:	
  3344  070F  0878               	movf	delay_ms@j+1,w
  3345  0710  3A80               	xorlw	128
  3346  0711  00FF               	movwf	btemp+1
  3347  0712  3080               	movlw	128
  3348  0713  027F               	subwf	btemp+1,w
  3349  0714  1D03               	skipz
  3350  0715  2F18               	goto	u805
  3351  0716  30FF               	movlw	255
  3352  0717  0277               	subwf	delay_ms@j,w
  3353  0718                     u805:	
  3354  0718  1C03               	skipc
  3355  0719  2F1B               	goto	u801
  3356  071A  2F1C               	goto	u800
  3357  071B                     u801:	
  3358  071B  2F09               	goto	l1311
  3359  071C                     u800:	
  3360  071C                     l1315:	
  3361  071C  3001               	movlw	1
  3362  071D  07F5               	addwf	delay_ms@i,f
  3363  071E  1803               	skipnc
  3364  071F  0AF6               	incf	delay_ms@i+1,f
  3365  0720  3000               	movlw	0
  3366  0721  07F6               	addwf	delay_ms@i+1,f
  3367  0722                     l93:	
  3368  0722  0876               	movf	delay_ms@i+1,w
  3369  0723  3A80               	xorlw	128
  3370  0724  00F3               	movwf	??_delay_ms
  3371  0725  3080               	movlw	128
  3372  0726  0273               	subwf	??_delay_ms,w
  3373  0727  1D03               	skipz
  3374  0728  2F2B               	goto	u815
  3375  0729  0874               	movf	delay_ms@dms,w
  3376  072A  0275               	subwf	delay_ms@i,w
  3377  072B                     u815:	
  3378  072B  1C03               	skipc
  3379  072C  2F2E               	goto	u811
  3380  072D  2F2F               	goto	u810
  3381  072E                     u811:	
  3382  072E  2F07               	goto	l1305
  3383  072F                     u810:	
  3384  072F                     l98:	
  3385  072F  0008               	return
  3386  0730                     __end_of_delay_ms:	
  3387                           
  3388                           	psect	text13
  3389  07D7                     __ptext13:	
  3390 ;; *************** function _LCD_PULSE *****************
  3391 ;; Defined at:
  3392 ;;		line 39 in file "LCD.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0
  3409 ;;      Totals:         0       0       0       0       0
  3410 ;;Total ram usage:        0 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    2
  3413 ;; This function calls:
  3414 ;;		_delay_us
  3415 ;; This function is called by:
  3416 ;;		_LCD_CONTROL
  3417 ;;		_LCD_DATO
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function _LCD_PULSE
  3423  07D7                     _LCD_PULSE:	
  3424  07D7                     l1297:	
  3425                           ;incstack = 0
  3426                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  3427                           
  3428  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  3429  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  3430  07D9  1489               	bsf	9,1	;volatile
  3431  07DA                     l1299:	
  3432  07DA  3005               	movlw	5
  3433  07DB  120A  118A  27BE  120A  118A  	fcall	_delay_us
  3434  07E0                     l1301:	
  3435  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3436  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3437  07E2  1089               	bcf	9,1	;volatile
  3438  07E3  3005               	movlw	5
  3439  07E4  120A  118A  27BE  120A  118A  	fcall	_delay_us
  3440  07E9                     l136:	
  3441  07E9  0008               	return
  3442  07EA                     __end_of_LCD_PULSE:	
  3443                           
  3444                           	psect	text14
  3445  07BE                     __ptext14:	
  3446 ;; *************** function _delay_us *****************
  3447 ;; Defined at:
  3448 ;;		line 22 in file "DELAYS.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  ams             1    wreg     unsigned char 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  ams             1    4[COMMON] unsigned char 
  3453 ;;  j               2    5[COMMON] int 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         0       0       0       0       0
  3464 ;;      Locals:         3       0       0       0       0
  3465 ;;      Temps:          1       0       0       0       0
  3466 ;;      Totals:         4       0       0       0       0
  3467 ;;Total ram usage:        4 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_LCD_PULSE
  3474 ;;		_LCD_DATO
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _delay_us
  3480  07BE                     _delay_us:	
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _delay_us: [wreg+status,2]
  3484                           ;delay_us@ams stored from wreg
  3485  07BE  00F4               	movwf	delay_us@ams
  3486  07BF                     l1293:	
  3487                           
  3488                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){;DELAYS.c: 23:     for (int j = 0; j<ams;j
      +                          ++){
  3489  07BF  01F5               	clrf	delay_us@j
  3490  07C0  01F6               	clrf	delay_us@j+1
  3491  07C1  2FC9               	goto	l101
  3492  07C2                     l102:	
  3493  07C2  0000               	nop	;# 
  3494  07C3                     l1295:	
  3495  07C3  3001               	movlw	1
  3496  07C4  07F5               	addwf	delay_us@j,f
  3497  07C5  1803               	skipnc
  3498  07C6  0AF6               	incf	delay_us@j+1,f
  3499  07C7  3000               	movlw	0
  3500  07C8  07F6               	addwf	delay_us@j+1,f
  3501  07C9                     l101:	
  3502  07C9  0876               	movf	delay_us@j+1,w
  3503  07CA  3A80               	xorlw	128
  3504  07CB  00F3               	movwf	??_delay_us
  3505  07CC  3080               	movlw	128
  3506  07CD  0273               	subwf	??_delay_us,w
  3507  07CE  1D03               	skipz
  3508  07CF  2FD2               	goto	u795
  3509  07D0  0874               	movf	delay_us@ams,w
  3510  07D1  0275               	subwf	delay_us@j,w
  3511  07D2                     u795:	
  3512  07D2  1C03               	skipc
  3513  07D3  2FD5               	goto	u791
  3514  07D4  2FD6               	goto	u790
  3515  07D5                     u791:	
  3516  07D5  2FC2               	goto	l102
  3517  07D6                     u790:	
  3518  07D6                     l104:	
  3519  07D6  0008               	return
  3520  07D7                     __end_of_delay_us:	
  3521                           
  3522                           	psect	text15
  3523  0694                     __ptext15:	
  3524 ;; *************** function _CONFIG_USART *****************
  3525 ;; Defined at:
  3526 ;;		line 4 in file "USART.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  BAUD            4    7[BANK0 ] long 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         0       4       0       0       0
  3541 ;;      Locals:         0       4       0       0       0
  3542 ;;      Temps:          0       0       0       0       0
  3543 ;;      Totals:         0       8       0       0       0
  3544 ;;Total ram usage:        8 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    2
  3547 ;; This function calls:
  3548 ;;		___aldiv
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _CONFIG_USART
  3556  0694                     _CONFIG_USART:	
  3557  0694                     l1537:	
  3558                           ;incstack = 0
  3559                           ; Regs used in _CONFIG_USART: [wreg+status,2+status,0+pclath+cstack]
  3560                           
  3561                           
  3562                           ;USART.c: 5:     SPBRG = (unsigned char)(((4000000/BAUD)/(64))-1);}
  3563  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0696  082A               	movf	CONFIG_USART@BAUD+3,w
  3566  0697  00F6               	movwf	___aldiv@divisor+3
  3567  0698  0829               	movf	CONFIG_USART@BAUD+2,w
  3568  0699  00F5               	movwf	___aldiv@divisor+2
  3569  069A  0828               	movf	CONFIG_USART@BAUD+1,w
  3570  069B  00F4               	movwf	___aldiv@divisor+1
  3571  069C  0827               	movf	CONFIG_USART@BAUD,w
  3572  069D  00F3               	movwf	___aldiv@divisor
  3573  069E  3000               	movlw	0
  3574  069F  00FA               	movwf	___aldiv@dividend+3
  3575  06A0  303D               	movlw	61
  3576  06A1  00F9               	movwf	___aldiv@dividend+2
  3577  06A2  3009               	movlw	9
  3578  06A3  00F8               	movwf	___aldiv@dividend+1
  3579  06A4  3000               	movlw	0
  3580  06A5  00F7               	movwf	___aldiv@dividend
  3581  06A6  120A  118A  24B9  120A  118A  	fcall	___aldiv
  3582  06AB  0876               	movf	?___aldiv+3,w
  3583  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  3584  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  3585  06AE  00AE               	movwf	_CONFIG_USART$978+3
  3586  06AF  0875               	movf	?___aldiv+2,w
  3587  06B0  00AD               	movwf	_CONFIG_USART$978+2
  3588  06B1  0874               	movf	?___aldiv+1,w
  3589  06B2  00AC               	movwf	_CONFIG_USART$978+1
  3590  06B3  0873               	movf	?___aldiv,w
  3591  06B4  00AB               	movwf	_CONFIG_USART$978
  3592                           
  3593                           ;USART.c: 5:     SPBRG = (unsigned char)(((4000000/BAUD)/(64))-1);}
  3594  06B5  3000               	movlw	0
  3595  06B6  00F6               	movwf	___aldiv@divisor+3
  3596  06B7  3000               	movlw	0
  3597  06B8  00F5               	movwf	___aldiv@divisor+2
  3598  06B9  3000               	movlw	0
  3599  06BA  00F4               	movwf	___aldiv@divisor+1
  3600  06BB  3040               	movlw	64
  3601  06BC  00F3               	movwf	___aldiv@divisor
  3602  06BD  082E               	movf	_CONFIG_USART$978+3,w
  3603  06BE  00FA               	movwf	___aldiv@dividend+3
  3604  06BF  082D               	movf	_CONFIG_USART$978+2,w
  3605  06C0  00F9               	movwf	___aldiv@dividend+2
  3606  06C1  082C               	movf	_CONFIG_USART$978+1,w
  3607  06C2  00F8               	movwf	___aldiv@dividend+1
  3608  06C3  082B               	movf	_CONFIG_USART$978,w
  3609  06C4  00F7               	movwf	___aldiv@dividend
  3610  06C5  120A  118A  24B9  120A  118A  	fcall	___aldiv
  3611  06CA  0873               	movf	?___aldiv,w
  3612  06CB  3EFF               	addlw	255
  3613  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3614  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3615  06CE  0099               	movwf	25	;volatile
  3616  06CF                     l201:	
  3617  06CF  0008               	return
  3618  06D0                     __end_of_CONFIG_USART:	
  3619                           
  3620                           	psect	text16
  3621  04B9                     __ptext16:	
  3622 ;; *************** function ___aldiv *****************
  3623 ;; Defined at:
  3624 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  divisor         4    3[COMMON] long 
  3627 ;;  dividend        4    7[COMMON] long 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  quotient        4    3[BANK0 ] long 
  3630 ;;  sign            1    2[BANK0 ] unsigned char 
  3631 ;;  counter         1    1[BANK0 ] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  4    3[COMMON] long 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3641 ;;      Params:         8       0       0       0       0
  3642 ;;      Locals:         0       6       0       0       0
  3643 ;;      Temps:          0       1       0       0       0
  3644 ;;      Totals:         8       7       0       0       0
  3645 ;;Total ram usage:       15 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_CONFIG_USART
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function ___aldiv
  3657  04B9                     ___aldiv:	
  3658  04B9                     l1355:	
  3659                           ;incstack = 0
  3660                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3661                           
  3662  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3663  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3664  04BB  01A2               	clrf	___aldiv@sign
  3665  04BC                     l1357:	
  3666  04BC  1FF6               	btfss	___aldiv@divisor+3,7
  3667  04BD  2CBF               	goto	u841
  3668  04BE  2CC0               	goto	u840
  3669  04BF                     u841:	
  3670  04BF  2CCD               	goto	l352
  3671  04C0                     u840:	
  3672  04C0                     l1359:	
  3673  04C0  09F3               	comf	___aldiv@divisor,f
  3674  04C1  09F4               	comf	___aldiv@divisor+1,f
  3675  04C2  09F5               	comf	___aldiv@divisor+2,f
  3676  04C3  09F6               	comf	___aldiv@divisor+3,f
  3677  04C4  0AF3               	incf	___aldiv@divisor,f
  3678  04C5  1903               	skipnz
  3679  04C6  0AF4               	incf	___aldiv@divisor+1,f
  3680  04C7  1903               	skipnz
  3681  04C8  0AF5               	incf	___aldiv@divisor+2,f
  3682  04C9  1903               	skipnz
  3683  04CA  0AF6               	incf	___aldiv@divisor+3,f
  3684  04CB  01A2               	clrf	___aldiv@sign
  3685  04CC  0AA2               	incf	___aldiv@sign,f
  3686  04CD                     l352:	
  3687  04CD  1FFA               	btfss	___aldiv@dividend+3,7
  3688  04CE  2CD0               	goto	u851
  3689  04CF  2CD1               	goto	u850
  3690  04D0                     u851:	
  3691  04D0  2CE0               	goto	l1365
  3692  04D1                     u850:	
  3693  04D1                     l1361:	
  3694  04D1  09F7               	comf	___aldiv@dividend,f
  3695  04D2  09F8               	comf	___aldiv@dividend+1,f
  3696  04D3  09F9               	comf	___aldiv@dividend+2,f
  3697  04D4  09FA               	comf	___aldiv@dividend+3,f
  3698  04D5  0AF7               	incf	___aldiv@dividend,f
  3699  04D6  1903               	skipnz
  3700  04D7  0AF8               	incf	___aldiv@dividend+1,f
  3701  04D8  1903               	skipnz
  3702  04D9  0AF9               	incf	___aldiv@dividend+2,f
  3703  04DA  1903               	skipnz
  3704  04DB  0AFA               	incf	___aldiv@dividend+3,f
  3705  04DC                     l1363:	
  3706  04DC  3001               	movlw	1
  3707  04DD  00A0               	movwf	??___aldiv
  3708  04DE  0820               	movf	??___aldiv,w
  3709  04DF  06A2               	xorwf	___aldiv@sign,f
  3710  04E0                     l1365:	
  3711  04E0  3000               	movlw	0
  3712  04E1  00A6               	movwf	___aldiv@quotient+3
  3713  04E2  3000               	movlw	0
  3714  04E3  00A5               	movwf	___aldiv@quotient+2
  3715  04E4  3000               	movlw	0
  3716  04E5  00A4               	movwf	___aldiv@quotient+1
  3717  04E6  3000               	movlw	0
  3718  04E7  00A3               	movwf	___aldiv@quotient
  3719  04E8                     l1367:	
  3720  04E8  0876               	movf	___aldiv@divisor+3,w
  3721  04E9  0475               	iorwf	___aldiv@divisor+2,w
  3722  04EA  0474               	iorwf	___aldiv@divisor+1,w
  3723  04EB  0473               	iorwf	___aldiv@divisor,w
  3724  04EC  1903               	skipnz
  3725  04ED  2CEF               	goto	u861
  3726  04EE  2CF0               	goto	u860
  3727  04EF                     u861:	
  3728  04EF  2D3D               	goto	l1387
  3729  04F0                     u860:	
  3730  04F0                     l1369:	
  3731  04F0  01A1               	clrf	___aldiv@counter
  3732  04F1  0AA1               	incf	___aldiv@counter,f
  3733  04F2  2D00               	goto	l1373
  3734  04F3                     l1371:	
  3735  04F3  3001               	movlw	1
  3736  04F4  00A0               	movwf	??___aldiv
  3737  04F5                     u875:	
  3738  04F5  1003               	clrc
  3739  04F6  0DF3               	rlf	___aldiv@divisor,f
  3740  04F7  0DF4               	rlf	___aldiv@divisor+1,f
  3741  04F8  0DF5               	rlf	___aldiv@divisor+2,f
  3742  04F9  0DF6               	rlf	___aldiv@divisor+3,f
  3743  04FA  0BA0               	decfsz	??___aldiv,f
  3744  04FB  2CF5               	goto	u875
  3745  04FC  3001               	movlw	1
  3746  04FD  00A0               	movwf	??___aldiv
  3747  04FE  0820               	movf	??___aldiv,w
  3748  04FF  07A1               	addwf	___aldiv@counter,f
  3749  0500                     l1373:	
  3750  0500  1FF6               	btfss	___aldiv@divisor+3,7
  3751  0501  2D03               	goto	u881
  3752  0502  2D04               	goto	u880
  3753  0503                     u881:	
  3754  0503  2CF3               	goto	l1371
  3755  0504                     u880:	
  3756  0504                     l1375:	
  3757  0504  3001               	movlw	1
  3758  0505  00A0               	movwf	??___aldiv
  3759  0506                     u895:	
  3760  0506  1003               	clrc
  3761  0507  0DA3               	rlf	___aldiv@quotient,f
  3762  0508  0DA4               	rlf	___aldiv@quotient+1,f
  3763  0509  0DA5               	rlf	___aldiv@quotient+2,f
  3764  050A  0DA6               	rlf	___aldiv@quotient+3,f
  3765  050B  0BA0               	decfsz	??___aldiv,f
  3766  050C  2D06               	goto	u895
  3767  050D                     l1377:	
  3768  050D  0876               	movf	___aldiv@divisor+3,w
  3769  050E  027A               	subwf	___aldiv@dividend+3,w
  3770  050F  1D03               	skipz
  3771  0510  2D1B               	goto	u905
  3772  0511  0875               	movf	___aldiv@divisor+2,w
  3773  0512  0279               	subwf	___aldiv@dividend+2,w
  3774  0513  1D03               	skipz
  3775  0514  2D1B               	goto	u905
  3776  0515  0874               	movf	___aldiv@divisor+1,w
  3777  0516  0278               	subwf	___aldiv@dividend+1,w
  3778  0517  1D03               	skipz
  3779  0518  2D1B               	goto	u905
  3780  0519  0873               	movf	___aldiv@divisor,w
  3781  051A  0277               	subwf	___aldiv@dividend,w
  3782  051B                     u905:	
  3783  051B  1C03               	skipc
  3784  051C  2D1E               	goto	u901
  3785  051D  2D1F               	goto	u900
  3786  051E                     u901:	
  3787  051E  2D2E               	goto	l1383
  3788  051F                     u900:	
  3789  051F                     l1379:	
  3790  051F  0873               	movf	___aldiv@divisor,w
  3791  0520  02F7               	subwf	___aldiv@dividend,f
  3792  0521  0874               	movf	___aldiv@divisor+1,w
  3793  0522  1C03               	skipc
  3794  0523  0F74               	incfsz	___aldiv@divisor+1,w
  3795  0524  02F8               	subwf	___aldiv@dividend+1,f
  3796  0525  0875               	movf	___aldiv@divisor+2,w
  3797  0526  1C03               	skipc
  3798  0527  0F75               	incfsz	___aldiv@divisor+2,w
  3799  0528  02F9               	subwf	___aldiv@dividend+2,f
  3800  0529  0876               	movf	___aldiv@divisor+3,w
  3801  052A  1C03               	skipc
  3802  052B  0F76               	incfsz	___aldiv@divisor+3,w
  3803  052C  02FA               	subwf	___aldiv@dividend+3,f
  3804  052D                     l1381:	
  3805  052D  1423               	bsf	___aldiv@quotient,0
  3806  052E                     l1383:	
  3807  052E  3001               	movlw	1
  3808  052F                     u915:	
  3809  052F  1003               	clrc
  3810  0530  0CF6               	rrf	___aldiv@divisor+3,f
  3811  0531  0CF5               	rrf	___aldiv@divisor+2,f
  3812  0532  0CF4               	rrf	___aldiv@divisor+1,f
  3813  0533  0CF3               	rrf	___aldiv@divisor,f
  3814  0534  3EFF               	addlw	-1
  3815  0535  1D03               	skipz
  3816  0536  2D2F               	goto	u915
  3817  0537                     l1385:	
  3818  0537  3001               	movlw	1
  3819  0538  02A1               	subwf	___aldiv@counter,f
  3820  0539  1D03               	btfss	3,2
  3821  053A  2D3C               	goto	u921
  3822  053B  2D3D               	goto	u920
  3823  053C                     u921:	
  3824  053C  2D04               	goto	l1375
  3825  053D                     u920:	
  3826  053D                     l1387:	
  3827  053D  0822               	movf	___aldiv@sign,w
  3828  053E  1903               	btfsc	3,2
  3829  053F  2D41               	goto	u931
  3830  0540  2D42               	goto	u930
  3831  0541                     u931:	
  3832  0541  2D4D               	goto	l1391
  3833  0542                     u930:	
  3834  0542                     l1389:	
  3835  0542  09A3               	comf	___aldiv@quotient,f
  3836  0543  09A4               	comf	___aldiv@quotient+1,f
  3837  0544  09A5               	comf	___aldiv@quotient+2,f
  3838  0545  09A6               	comf	___aldiv@quotient+3,f
  3839  0546  0AA3               	incf	___aldiv@quotient,f
  3840  0547  1903               	skipnz
  3841  0548  0AA4               	incf	___aldiv@quotient+1,f
  3842  0549  1903               	skipnz
  3843  054A  0AA5               	incf	___aldiv@quotient+2,f
  3844  054B  1903               	skipnz
  3845  054C  0AA6               	incf	___aldiv@quotient+3,f
  3846  054D                     l1391:	
  3847  054D  0826               	movf	___aldiv@quotient+3,w
  3848  054E  00F6               	movwf	?___aldiv+3
  3849  054F  0825               	movf	___aldiv@quotient+2,w
  3850  0550  00F5               	movwf	?___aldiv+2
  3851  0551  0824               	movf	___aldiv@quotient+1,w
  3852  0552  00F4               	movwf	?___aldiv+1
  3853  0553  0823               	movf	___aldiv@quotient,w
  3854  0554  00F3               	movwf	?___aldiv
  3855  0555                     l362:	
  3856  0555  0008               	return
  3857  0556                     __end_of___aldiv:	
  3858                           
  3859                           	psect	text17
  3860  0FDF                     __ptext17:	
  3861 ;; *************** function _CONFIG_ADC *****************
  3862 ;; Defined at:
  3863 ;;		line 15 in file "ADC.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		None
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3877 ;;      Params:         0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0
  3879 ;;      Temps:          0       0       0       0       0
  3880 ;;      Totals:         0       0       0       0       0
  3881 ;;Total ram usage:        0 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function _CONFIG_ADC
  3893  0FDF                     _CONFIG_ADC:	
  3894  0FDF                     l1539:	
  3895                           ;incstack = 0
  3896                           ; Regs used in _CONFIG_ADC: []
  3897                           
  3898                           
  3899                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  3900  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3901  0FE0  1303               	bcf	3,6	;RP1=0, select bank1
  3902  0FE1  139F               	bcf	31,7	;volatile
  3903                           
  3904                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  3905  0FE2  129F               	bcf	31,5	;volatile
  3906                           
  3907                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  3908  0FE3  121F               	bcf	31,4	;volatile
  3909                           
  3910                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  3911  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0FE6  139F               	bcf	31,7	;volatile
  3914                           
  3915                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  3916  0FE7  171F               	bsf	31,6	;volatile
  3917                           
  3918                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  3919  0FE8  129F               	bcf	31,5	;volatile
  3920                           
  3921                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  3922  0FE9  121F               	bcf	31,4	;volatile
  3923                           
  3924                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  3925  0FEA  119F               	bcf	31,3	;volatile
  3926                           
  3927                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  3928  0FEB  111F               	bcf	31,2	;volatile
  3929                           
  3930                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  3931  0FEC  141F               	bsf	31,0	;volatile
  3932  0FED                     l111:	
  3933                           ;ADC.c: 26:     return;
  3934                           
  3935  0FED  0008               	return
  3936  0FEE                     __end_of_CONFIG_ADC:	
  3937                           
  3938                           	psect	text18
  3939  06D0                     __ptext18:	
  3940 ;; *************** function _isr *****************
  3941 ;; Defined at:
  3942 ;;		line 32 in file "main.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0
  3958 ;;      Temps:          3       0       0       0       0
  3959 ;;      Totals:         3       0       0       0       0
  3960 ;;Total ram usage:        3 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		Interrupt level 1
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           
  3970                           ;psect for function _isr
  3971  06D0                     _isr:	
  3972  06D0                     i1l1699:	
  3973                           
  3974                           ;main.c: 33:     if (INTCONbits.T0IF == 1){
  3975  06D0  1D0B               	btfss	11,2	;volatile
  3976  06D1  2ED3               	goto	u145_21
  3977  06D2  2ED4               	goto	u145_20
  3978  06D3                     u145_21:	
  3979  06D3  2EFC               	goto	i1l72
  3980  06D4                     u145_20:	
  3981  06D4                     i1l1701:	
  3982                           
  3983                           ;main.c: 34:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  3984  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3985  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3986  06D6  084C               	movf	_cambiante,w
  3987  06D7  1D03               	btfss	3,2
  3988  06D8  2EDA               	goto	u146_21
  3989  06D9  2EDB               	goto	u146_20
  3990  06DA                     u146_21:	
  3991  06DA  2EDC               	goto	i1l1705
  3992  06DB                     u146_20:	
  3993  06DB                     i1l1703:	
  3994  06DB  151F               	bsf	31,2	;volatile
  3995  06DC                     i1l1705:	
  3996                           
  3997                           ;main.c: 35:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  3998  06DC  034C               	decf	_cambiante,w
  3999  06DD  1D03               	btfss	3,2
  4000  06DE  2EE0               	goto	u147_21
  4001  06DF  2EE1               	goto	u147_20
  4002  06E0                     u147_21:	
  4003  06E0  2EE2               	goto	i1l1709
  4004  06E1                     u147_20:	
  4005  06E1                     i1l1707:	
  4006  06E1  111F               	bcf	31,2	;volatile
  4007  06E2                     i1l1709:	
  4008                           
  4009                           ;main.c: 36:         cambiante++;
  4010  06E2  3001               	movlw	1
  4011  06E3  00F0               	movwf	??_isr
  4012  06E4  0870               	movf	??_isr,w
  4013  06E5  07CC               	addwf	_cambiante,f
  4014                           
  4015                           ;main.c: 37:         sensor++;
  4016  06E6  3001               	movlw	1
  4017  06E7  00F0               	movwf	??_isr
  4018  06E8  0870               	movf	??_isr,w
  4019  06E9  07C8               	addwf	_sensor,f
  4020  06EA                     i1l1711:	
  4021                           
  4022                           ;main.c: 38:         if (cambiante > 1){cambiante = 0;}
  4023  06EA  3002               	movlw	2
  4024  06EB  024C               	subwf	_cambiante,w
  4025  06EC  1C03               	skipc
  4026  06ED  2EEF               	goto	u148_21
  4027  06EE  2EF0               	goto	u148_20
  4028  06EF                     u148_21:	
  4029  06EF  2EF1               	goto	i1l1715
  4030  06F0                     u148_20:	
  4031  06F0                     i1l1713:	
  4032  06F0  01CC               	clrf	_cambiante
  4033  06F1                     i1l1715:	
  4034                           
  4035                           ;main.c: 39:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  4036  06F1  189F               	btfsc	31,1	;volatile
  4037  06F2  2EF4               	goto	u149_21
  4038  06F3  2EF5               	goto	u149_20
  4039  06F4                     u149_21:	
  4040  06F4  2EF7               	goto	i1l71
  4041  06F5                     u149_20:	
  4042  06F5                     i1l1717:	
  4043  06F5  01CB               	clrf	_eADC
  4044  06F6  0ACB               	incf	_eADC,f
  4045  06F7                     i1l71:	
  4046                           
  4047                           ;main.c: 40:         INTCONbits.T0IF = 0;
  4048  06F7  110B               	bcf	11,2	;volatile
  4049  06F8                     i1l1719:	
  4050                           
  4051                           ;main.c: 41:         TMR0 = 130;
  4052  06F8  3082               	movlw	130
  4053  06F9  0081               	movwf	1	;volatile
  4054  06FA                     i1l1721:	
  4055                           
  4056                           ;main.c: 42:         eADC = 1;
  4057  06FA  01CB               	clrf	_eADC
  4058  06FB  0ACB               	incf	_eADC,f
  4059  06FC                     i1l72:	
  4060  06FC  0872               	movf	??_isr+2,w
  4061  06FD  008A               	movwf	10
  4062  06FE  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  4063  06FF  0083               	movwf	3
  4064  0700  0EFE               	swapf	btemp,f
  4065  0701  0E7E               	swapf	btemp,w
  4066  0702  0009               	retfie
  4067  0703                     __end_of_isr:	
  4068  007E                     btemp	set	126	;btemp
  4069  007E                     wtemp0	set	126
  4070                           
  4071                           	psect	intentry
  4072  0004                     __pintentry:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _isr: [wreg+status,2+status,0]
  4075                           
  4076  0004                     interrupt_function:	
  4077  007E                     saved_w	set	btemp
  4078  0004  00FE               	movwf	btemp
  4079  0005  0E03               	swapf	3,w
  4080  0006  00F1               	movwf	??_isr+1
  4081  0007  080A               	movf	10,w
  4082  0008  00F2               	movwf	??_isr+2
  4083  0009  120A  118A  2ED0   	ljmp	_isr


Data Sizes:
    Strings     118
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     33      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_PRINT_WP
    _VAL->_LCD_PRINT_WP
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_RH->_LCD_CONTROL
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us
    _CONFIG_USART->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VAL
    _VAL->___awdiv
    _CONFIG_USART->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17773
                                             32 BANK0      1     1      0
                         _CONFIG_ADC
                       _CONFIG_USART
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                                _VAL
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VAL                                                 24    23      1    9947
                                              8 BANK0     24    23      1
                       _LCD_PRINT_WP
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT_WP                                         7     2      5    6437
                                             10 COMMON     1     1      0
                                              0 BANK0      6     1      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (3) _LCD_PRINT                                            2     2      0     192
                                              8 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (4) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     252
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_CONTROL                                          1     1      0     160
                                              9 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0      92
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_USART                                         8     4      4     725
                                              7 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _CONFIG_USART
     ___aldiv
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _VAL
     _LCD_PRINT_WP
       _LCD_CONTROL
         _LCD_PULSE
           _delay_us
         _delay_ms
       _LCD_PRINT
         _LCD_DATO
           _LCD_PULSE
             _delay_us
           _delay_us
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 16:59:20 2020

                       pc 0002               __CFG_CP$OFF 0000                        l90 077C  
                      l84 04B4                        l93 0722                        l98 072F  
            ___awdiv@sign 0025                        fsr 0004                       l101 07C9  
                     l102 07C2                       l111 0FED                       l104 07D6  
                     l201 06CF                       l130 0758                       l133 0FFF  
                     l142 0FD7                       l151 0FDE                       l136 07E9  
                     l139 07FB                       l148 07BD                       l158 079E  
                     l352 04CD                       l440 063A                       l362 0555  
                     l196 03AA                       l453 0693              __CFG_CPD$OFF 0000  
                     u800 071C                       u801 071B                       u810 072F  
                     u811 072E                       u900 051F                       u820 07BD  
                     u901 051E                       u805 0718                       u821 07BC  
                     u830 0785                       _VAL 0021                       u815 072B  
                     u831 0784                       u920 053D                       u840 04C0  
                     u921 053C                       u905 051B                       u841 04BF  
                     u930 0542                       u850 04D1                       u931 0541  
                     u915 052F                       u851 04D0                       u860 04F0  
                     u940 05D9                       u861 04EF                       u941 05D8  
                     u790 07D6                       u950 05E4                       u791 07D5  
                     u951 05E3                       u880 0504                       u960 05F5  
                     u881 0503                       u961 05F4                       u875 04F5  
                     u795 07D2                       u980 0607                       u981 0606  
                     u895 0506                       u975 05F9                       u995 0608  
                     _isr 06D0                       _sen 0047                       fsr0 0004  
                     indf 0000              ___awmod@sign 0079              __CFG_LVP$OFF 0000  
                    ?_VAL 0028                      VAL@i 0039                      l1301 07E0  
                    l1311 0709                      l1303 0704                      l1313 070F  
                    l1305 0707                      l1321 07F0                      l1401 05DE  
                    l1315 071C                      l1331 0FF9                      l1323 07F5  
                    l1411 05EF                      l1403 05E0                      l1325 0FEF  
                    l1317 07EB                      l1333 07A0                      l1341 077D  
                    l1421 0607                      l1413 05F5                      l1405 05E4  
                    l1501 0772                      l1327 0FF2                      l1319 07EE  
                    l1335 07A1                      l1351 0790                      l1343 0785  
                    l1423 0618                      l1415 05F8                      l1431 062C  
                    l1407 05E9                      l1511 0777                      l1503 0773  
                    l1361 04D1                      l1329 0FF4                      l1521 0738  
                    l1337 07AD                      l1353 0796                      l1345 078B  
                    l1433 0631                      l1425 061E                      l1417 05FF  
                    l1409 05ED                      l1441 063C                      l1601 0174  
                    l1513 0778                      l1505 0774                      l1371 04F3  
                    l1363 04DC                      l1355 04B9                      l1531 0752  
                    l1523 073A                      l1515 0730                      l1339 07B1  
                    l1347 078B                      l1435 0636                      l1427 061F  
                    l1419 0603                      l1451 0650                      l1443 0640  
                    l1611 01B4                      l1603 017C                      l1507 0775  
                    l1381 052D                      l1373 0500                      l1365 04E0  
                    l1357 04BC                      l1293 07BF                      l1525 0740  
                    l1517 0734                      l1533 0FD1                      l1429 0626  
                    l1461 0668                      l1453 0656                      l1445 0645  
                    l1621 0200                      l1613 01C8                      l1605 0190  
                    l1541 0024                      l1509 0776                      l1391 054D  
                    l1383 052E                      l1375 0504                      l1367 04E8  
                    l1359 04C0                      l1295 07C3                      l1527 0746  
                    l1519 0735                      l1535 0FD8                      l1471 068A  
                    l1463 0672                      l1455 0659                      l1447 0647  
                    l1439 063B                      l1631 0240                      l1623 0208  
                    l1615 01D0                      l1607 0198                      l1551 0059  
                    l1543 002A                      l1385 0537                      l1377 050D  
                    l1369 04F0                      l1537 0694                      l1297 07D7  
                    l1529 074C                      l1473 068F                      l1465 0678  
                    l1457 0660                      l1449 064B                      l1641 0256  
                    l1625 021C                      l1617 01E4                      l1609 01AC  
                    l1633 024D                      l1561 00DF                      l1553 006F  
                    l1545 002E                      l1481 0762                      l1539 0FDF  
                    l1379 051F                      l1387 053D                      l1299 07DA  
                    l1395 05D2                      l1467 067F                      l1459 0664  
                    l1651 0276                      l1643 0262                      l1635 0254  
                    l1627 0224                      l1619 01EC                      l1563 00E6  
                    l1555 00AB                      l1547 002E                      l1491 076B  
                    l1483 0765                      l1731 03BF                      l1723 03AB  
                    l1389 0542                      l1397 05D5                      l1469 0685  
                    l1661 02A1                      l1653 027D                      l1645 0268  
                    l1629 0238                      l1581 010F                      l1565 00ED  
                    l1557 00C1                      l1549 002F                      l1493 076C  
                    l1485 0766                      l1477 0759                      l1741 03F4  
                    l1733 03D1                      l1725 03B0                      l1399 05D9  
                    l1671 02ED                      l1663 02B5                      l1655 0281  
                    l1647 026C                      l1591 0129                      l1583 0115  
                    l1575 00FB                      l1567 00F4                      l1559 00D6  
                    l1495 076D                      l1487 0767                      l1479 0761  
                    l1751 0429                      l1743 03F9                      l1735 03D7  
                    l1727 03B5                      l1681 032D                      l1673 02F5  
                    l1665 02BD                      l1657 0286                      l1649 0272  
                    l1593 013D                      l1585 0119                      l1577 0107  
                    l1569 00F9                      l1497 076E                      l1489 0768  
                    l1761 0466                      l1753 042E                      l1745 040B  
                    l1737 03E9                      l1729 03BA                      l1691 0379  
                    l1683 0341                      l1675 0309                      l1667 02D1  
                    l1659 029A                      l1595 0144                      l1587 0120  
                    l1579 010D                      l1499 0771                      l1771 047C  
                    l1763 046B                      l1755 0433                      l1747 0411  
                    l1739 03EF                      l1693 0381                      l1685 0349  
                    l1677 0311                      l1669 02D9                      l1597 0158  
                    l1589 0124                      l1781 0491                      l1773 0481  
                    l1765 0472                      l1757 0445                      l1749 0423  
                    l1695 0395                      l1687 035D                      l1679 0325  
                    l1599 0160                      l1791 04B3                      l1783 0498  
                    l1775 0485                      l1767 0473                      l1759 0457  
                    l1697 039D                      l1689 0365                      l1785 049F  
                    l1769 0478                      l1777 0486                      l1787 04A7  
                    l1779 048C                      l1789 04AD                      ?_isr 0070  
                    STR_1 057E                      STR_2 05A0                      STR_3 058F  
                    STR_4 055C                      STR_5 05B1                      STR_6 056D  
                    STR_7 057C                      STR_8 05C2                      STR_9 05C4  
                    u1000 0618                      u1001 0617                      u1020 062C  
                    u1021 062B                      u1005 0614                      u1030 0631  
                    u1110 0685                      u1031 0630                      u1015 0620  
                    u1111 0684                      u1120 068A                      u1040 0640  
                    u1200 0144                      u1121 0689                      u1105 0679  
                    u1041 063F                      u1201 0143                      u1050 064B  
                    u1210 0160                      u1130 002A                      u1051 064A  
                    u1211 015F                      u1131 0029                      u1060 0656  
                    u1300 0254                      u1220 017C                      u1140 00DA  
                    u1061 0655                      u1301 0253                      u1221 017B  
                    u1310 0268                      u1230 0198                      u1150 00F9  
                    u1311 0267                      u1231 0197                      u1151 00F8  
                    u1080 0668                      u1400 032D                      u1320 0272  
                    u1240 01B4                      u1160 010D                      u1081 0667  
                    u1401 032C                      u1321 0271                      u1241 01B3  
                    u1161 010C                      u1090 0672                      u1410 0349  
                    u1330 027D                      u1250 01D0                      u1170 0115  
                    u1091 0671                      u1075 065A                      u1411 0348  
                    u1331 027C                      u1251 01CF                      u1171 0114  
                    u1420 0365                      u1340 0286                      u1260 01EC  
                    u1180 0120                      u1500 0472                      u1421 0364  
                    u1341 0285                      u1261 01EB                      u1181 011F  
                    u1501 0471                      u1430 0381                      u1350 02A1  
                    u1270 0208                      u1190 0129                      u1510 0478  
                    u1095 066E                      u1431 0380                      u1351 02A0  
                    u1271 0207                      u1191 0128                      u1511 0477  
                    u1440 03AA                      u1360 02BD                      u1280 0224  
                    u1520 0481                      u1441 03A9                      u1361 02BC  
                    u1281 0223                      u1521 0480                      u1370 02D9  
                    u1290 024D                      u1530 048C                      u1371 02D8  
                    u1291 024C                      u1531 048B                      u1380 02F5  
                    u1540 0491                      u1445 03A6                      u1381 02F4  
                    u1541 0490                      u1390 0311                      u1550 049F  
                    u1391 0310                      u1295 0249                      u1551 049E  
                    u1560 04B3                      u1561 04B2                      i1l71 06F7  
                    i1l72 06FC        __size_of_LCD_CLEAR 0007                      _TMR0 0001  
                    _eADC 004B              __CFG_WRT$OFF 0000            ??_LCD_PRINT_WP 007A  
      __size_of_LCD_PRINT 001F        __size_of_LCD_PULSE 0013                      _main 03AB  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
     __size_of_CONFIG_ADC 000F          _CONFIG_USART$978 002B                     ??_VAL 0029  
        __end_of_LCD_DATO 07FC                     ??_isr 0070      __end_of_CONFIG_USART 06D0  
        __end_of_INIT_LCD 0759           __end_of___aldiv 0556                     ?_main 0070  
         __end_of___awdiv 063B                     STR_10 058D                     STR_11 05C6  
                   STR_20 058D                     STR_12 05C8                     STR_21 05C6  
                   STR_13 05CA                     STR_22 05C8                     STR_14 05CC  
                   STR_23 05CA                     STR_15 05CE                     STR_24 05CC  
                   STR_16 05D0                     STR_17 057C                     STR_25 05CE  
           __CFG_WDTE$OFF 0000                     STR_18 05C2                     STR_26 05D0  
                   STR_19 05C4           __end_of___awmod 0694             LCD_PRINT@data 0079  
                   _ANSEL 0188           ___awdiv@divisor 0020           ___awdiv@counter 0024  
           LCD_PRINT_WP@x 0020             LCD_PRINT_WP@y 0022                     _SPBRG 0099  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000                     _setup 0759            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 04B9  
       __end_of_LCD_CLEAR 0FD8         __end_of_LCD_PRINT 07BE                    ??_main 0040  
       __end_of_LCD_PULSE 07EA                    _ADCAN0 004A                    _ADCAN1 0049  
                  _ADRESH 001E          ___awdiv@dividend 0022                    ?_setup 0070  
                  _ANSELH 0189                    _LCD_RH 0FD8                    i1l1701 06D4  
                  i1l1711 06EA                    i1l1703 06DB                    i1l1721 06FA  
                  i1l1713 06F0                    i1l1705 06DC                    i1l1715 06F1  
                  i1l1707 06E1                    i1l1717 06F5                    i1l1709 06E2  
                  i1l1719 06F8                    i1l1699 06D0                    u145_20 06D4  
                  u145_21 06D3                    u146_20 06DB                    u146_21 06DA  
                  u147_20 06E1                    u147_21 06E0                    u148_20 06F0  
                  u148_21 06EF                    u149_20 06F5                    u149_21 06F4  
    __size_of_LCD_CONTROL 0012          __end_of_delay_ms 0730          __end_of_delay_us 07D7  
          __CFG_PWRTE$OFF 0000                 ??___aldiv 0020                 ??___awdiv 007A  
               ??___awmod 0077          ___awdiv@quotient 0026           ___awmod@divisor 0073  
                  _sensor 0048           ___awmod@counter 0078      __end_of_LCD_PRINT_WP 079F  
            ??_CONFIG_ADC 0073                    saved_w 007E                 ?_LCD_DATO 0070  
 __end_of__initialization 001D                 ?_INIT_LCD 0070     __size_of_CONFIG_USART 003C  
          __pcstackCOMMON 0070        __end_of_CONFIG_ADC 0FEE             __end_of_setup 077D  
          _OPTION_REGbits 0081                   ??_setup 0073                __pbssBANK0 0041  
                 ?_LCD_RH 0070          CONFIG_USART@BAUD 0027                ??_LCD_DATO 0077  
            _CONFIG_USART 0694                ??_INIT_LCD 007A                __pmaintext 03AB  
               VAL@column 0028                __pintentry 0004                 VAL@result 003D  
               VAL@numero 0031                   _VAL$977 0037                 ?_delay_ms 0070  
               ?_delay_us 0070                __stringtab 0556           __size_of_LCD_RH 0007  
             VAL@unidades 002E                   ___aldiv 04B9     __size_of_LCD_PRINT_WP 0022  
                 ___awdiv 05D2                   ___awmod 063B                   __ptext1 0759  
                 __ptext2 0021                   __ptext3 063B                   __ptext4 05D2  
                 __ptext5 077D                   __ptext6 079F                   __ptext7 07EA  
                 __ptext8 0FD8                   __ptext9 0FD1              __size_of_VAL 038A  
            __size_of_isr 0033                 _LCD_CLEAR 0FD1          ___awmod@dividend 0075  
        ___aldiv@dividend 0077                 _LCD_PRINT 079F                ??_delay_ms 0073  
               _LCD_PULSE 07D7                ??_delay_us 0073             VAL@centesimas 0030  
    end_of_initialization 001D              _LCD_PRINT_WP 077D         LCD_PRINT_WP@frase 0024  
        ___aldiv@quotient 0023             VAL@coordenada 003F                 _PORTEbits 0009  
              ?_LCD_CLEAR 0070                ?_LCD_PRINT 0070                ?_LCD_PULSE 0070  
               _TRISEbits 0089             ??_LCD_CONTROL 0079            __end_of_LCD_RH 0FDF  
       __size_of_LCD_DATO 0012         __size_of_INIT_LCD 0029       start_initialization 000F  
             __end_of_VAL 03AB               __end_of_isr 0703                  ??_LCD_RH 007A  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_LCD_CONTROL 1000               ??_LCD_CLEAR 007A  
               ___latbits 0002               ??_LCD_PRINT 0078               ??_LCD_PULSE 0077  
           __pcstackBANK0 0020         __size_of_delay_ms 002D         __size_of_delay_us 0019  
                VAL@F1517 0041                 _cambiante 004C                  VAL@i_376 003B  
                ?___aldiv 0073                  ?___awdiv 0020                  ?___awmod 0073  
                VAL@valor 003E                VAL@decimas 002F                 __pstrings 0556  
          __size_of_setup 0024                  _LCD_DATO 07EA               _LCD_CONTROL 0FEE  
         ___aldiv@divisor 0073         interrupt_function 0004           ___aldiv@counter 0021  
               delay_ms@i 0075                 delay_ms@j 0077                  _INIT_LCD 0730  
               delay_us@j 0075                _ADCON0bits 001F               __stringbase 055B  
              _ADCON1bits 009F           LCD_DATO@comando 0077      LCD_PRINT_WP@location 0025  
        __size_of___aldiv 009D          __size_of___awdiv 0069          __size_of___awmod 0059  
      __end_of__stringtab 055C                _CONFIG_ADC 0FDF                  _delay_ms 0703  
                _delay_us 07BE                  __ptext10 0730                  __ptext11 0FEE  
                __ptext12 0703                  __ptext13 07D7                  __ptext14 07BE  
                __ptext15 0694                  __ptext16 04B9                  __ptext17 0FDF  
                __ptext18 06D0         __CFG_BOR4V$BOR40V 0000             ?_CONFIG_USART 0027  
           __size_of_main 010E               delay_ms@dms 0074               delay_us@ams 0074  
              _INTCONbits 000B                  intlevel1 0000            ??_CONFIG_USART 007B  
         LCD_CONTROL@dato 0079                 stringcode 0556               ?_CONFIG_ADC 0070  
                stringdir 0556                  stringtab 0556              ___aldiv@sign 0022  
            ?_LCD_CONTROL 0070             ?_LCD_PRINT_WP 0020  
