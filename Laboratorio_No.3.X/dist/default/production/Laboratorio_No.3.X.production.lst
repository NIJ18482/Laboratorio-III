

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 22:21:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0000                     	;# 
   456  0001                     	;# 
   457  0002                     	;# 
   458  0003                     	;# 
   459  0004                     	;# 
   460  0005                     	;# 
   461  0006                     	;# 
   462  0007                     	;# 
   463  0008                     	;# 
   464  0009                     	;# 
   465  000A                     	;# 
   466  000B                     	;# 
   467  000C                     	;# 
   468  000D                     	;# 
   469  000E                     	;# 
   470  000E                     	;# 
   471  000F                     	;# 
   472  0010                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0014                     	;# 
   477  0015                     	;# 
   478  0015                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  0081                     	;# 
   491  0085                     	;# 
   492  0086                     	;# 
   493  0087                     	;# 
   494  0088                     	;# 
   495  0089                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  008F                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0094                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0097                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009A                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009E                     	;# 
   517  009F                     	;# 
   518  0105                     	;# 
   519  0107                     	;# 
   520  0108                     	;# 
   521  0109                     	;# 
   522  010C                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  010F                     	;# 
   527  0185                     	;# 
   528  0187                     	;# 
   529  0188                     	;# 
   530  0189                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  001A                     _RCREG	set	26
   534  0019                     _TXREG	set	25
   535  0018                     _RCSTAbits	set	24
   536  0009                     _PORTEbits	set	9
   537  0009                     _PORTE	set	9
   538  0008                     _PORTD	set	8
   539  0007                     _PORTC	set	7
   540  0006                     _PORTB	set	6
   541  001E                     _ADRESH	set	30
   542  0001                     _TMR0	set	1
   543  001F                     _ADCON0bits	set	31
   544  000B                     _INTCONbits	set	11
   545  0099                     _SPBRG	set	153
   546  0098                     _TXSTAbits	set	152
   547  0087                     _TRISCbits	set	135
   548  0089                     _TRISEbits	set	137
   549  009F                     _ADCON1bits	set	159
   550  0081                     _OPTION_REGbits	set	129
   551  0089                     _TRISE	set	137
   552  0088                     _TRISD	set	136
   553  0087                     _TRISC	set	135
   554  0086                     _TRISB	set	134
   555  0085                     _TRISA	set	133
   556  0189                     _ANSELH	set	393
   557  0188                     _ANSEL	set	392
   558                           
   559                           	psect	strings
   560  0556                     __pstrings:	
   561  0556                     stringtab:	
   562  0556                     __stringtab:	
   563  0556                     stringcode:	
   564                           ;	String table - string pointers are 1 byte each
   565                           
   566  0556                     stringdir:	
   567  0556  3005               	movlw	high stringdir
   568  0557  008A               	movwf	10
   569  0558  0804               	movf	4,w
   570  0559  0A84               	incf	4,f
   571  055A  0782               	addwf	2,f
   572  055B                     __stringbase:	
   573  055B  3400               	retlw	0
   574  055C                     __end_of__stringtab:	
   575  055C                     STR_4:	
   576  055C  342D               	retlw	45	;'-'
   577  055D  344D               	retlw	77	;'M'
   578  055E  3450               	retlw	80	;'P'
   579  055F  344C               	retlw	76	;'L'
   580  0560  3441               	retlw	65	;'A'
   581  0561  3442               	retlw	66	;'B'
   582  0562  3458               	retlw	88	;'X'
   583  0563  342D               	retlw	45	;'-'
   584  0564  3458               	retlw	88	;'X'
   585  0565  3443               	retlw	67	;'C'
   586  0566  3438               	retlw	56	;'8'
   587  0567  342D               	retlw	45	;'-'
   588  0568  3450               	retlw	80	;'P'
   589  0569  3449               	retlw	73	;'I'
   590  056A  3443               	retlw	67	;'C'
   591  056B  342D               	retlw	45	;'-'
   592  056C  3400               	retlw	0
   593  056D                     STR_6:	
   594  056D  347C               	retlw	124	;'|'
   595  056E  3430               	retlw	48	;'0'
   596  056F  342E               	retlw	46	;'.'
   597  0570  3430               	retlw	48	;'0'
   598  0571  3430               	retlw	48	;'0'
   599  0572  3456               	retlw	86	;'V'
   600  0573  347C               	retlw	124	;'|'
   601  0574  3430               	retlw	48	;'0'
   602  0575  342E               	retlw	46	;'.'
   603  0576  3430               	retlw	48	;'0'
   604  0577  3430               	retlw	48	;'0'
   605  0578  3456               	retlw	86	;'V'
   606  0579  347C               	retlw	124	;'|'
   607  057A  3430               	retlw	48	;'0'
   608  057B  3430               	retlw	48	;'0'
   609  057C  3430               	retlw	48	;'0'
   610  057D  3400               	retlw	0
   611  057E                     STR_1:	
   612  057E  344C               	retlw	76	;'L'
   613  057F  3441               	retlw	65	;'A'
   614  0580  3442               	retlw	66	;'B'
   615  0581  344F               	retlw	79	;'O'
   616  0582  3452               	retlw	82	;'R'
   617  0583  3441               	retlw	65	;'A'
   618  0584  3454               	retlw	84	;'T'
   619  0585  344F               	retlw	79	;'O'
   620  0586  3452               	retlw	82	;'R'
   621  0587  3449               	retlw	73	;'I'
   622  0588  344F               	retlw	79	;'O'
   623  0589  3420               	retlw	32	;' '
   624  058A  344E               	retlw	78	;'N'
   625  058B  346F               	retlw	111	;'o'
   626  058C  342E               	retlw	46	;'.'
   627  058D  3433               	retlw	51	;'3'
   628  058E  3400               	retlw	0
   629  058F                     STR_3:	
   630  058F  344D               	retlw	77	;'M'
   631  0590  3441               	retlw	65	;'A'
   632  0591  344E               	retlw	78	;'N'
   633  0592  3445               	retlw	69	;'E'
   634  0593  344A               	retlw	74	;'J'
   635  0594  344F               	retlw	79	;'O'
   636  0595  3420               	retlw	32	;' '
   637  0596  3450               	retlw	80	;'P'
   638  0597  3441               	retlw	65	;'A'
   639  0598  344E               	retlw	78	;'N'
   640  0599  3445               	retlw	69	;'E'
   641  059A  344C               	retlw	76	;'L'
   642  059B  3420               	retlw	32	;' '
   643  059C  344C               	retlw	76	;'L'
   644  059D  3443               	retlw	67	;'C'
   645  059E  3444               	retlw	68	;'D'
   646  059F  3400               	retlw	0
   647  05A0                     STR_2:	
   648  05A0  344C               	retlw	76	;'L'
   649  05A1  3475               	retlw	117	;'u'
   650  05A2  3469               	retlw	105	;'i'
   651  05A3  3473               	retlw	115	;'s'
   652  05A4  3420               	retlw	32	;' '
   653  05A5  344E               	retlw	78	;'N'
   654  05A6  342E               	retlw	46	;'.'
   655  05A7  3420               	retlw	32	;' '
   656  05A8  3431               	retlw	49	;'1'
   657  05A9  3438               	retlw	56	;'8'
   658  05AA  3434               	retlw	52	;'4'
   659  05AB  3438               	retlw	56	;'8'
   660  05AC  3432               	retlw	50	;'2'
   661  05AD  3455               	retlw	85	;'U'
   662  05AE  3456               	retlw	86	;'V'
   663  05AF  3447               	retlw	71	;'G'
   664  05B0  3400               	retlw	0
   665  05B1                     STR_5:	
   666  05B1  347C               	retlw	124	;'|'
   667  05B2  3453               	retlw	83	;'S'
   668  05B3  3445               	retlw	69	;'E'
   669  05B4  344E               	retlw	78	;'N'
   670  05B5  342E               	retlw	46	;'.'
   671  05B6  3432               	retlw	50	;'2'
   672  05B7  347C               	retlw	124	;'|'
   673  05B8  3453               	retlw	83	;'S'
   674  05B9  3445               	retlw	69	;'E'
   675  05BA  344E               	retlw	78	;'N'
   676  05BB  342E               	retlw	46	;'.'
   677  05BC  3431               	retlw	49	;'1'
   678  05BD  347C               	retlw	124	;'|'
   679  05BE  3420               	retlw	32	;' '
   680  05BF  3443               	retlw	67	;'C'
   681  05C0  3454               	retlw	84	;'T'
   682  05C1  3400               	retlw	0
   683  05C2                     STR_8:	
   684  05C2  3431               	retlw	49	;'1'
   685  05C3  3400               	retlw	0
   686  05C4                     STR_9:	
   687  05C4  3432               	retlw	50	;'2'
   688  05C5  3400               	retlw	0
   689  05C6                     STR_11:	
   690  05C6  3434               	retlw	52	;'4'
   691  05C7  3400               	retlw	0
   692  05C8                     STR_12:	
   693  05C8  3435               	retlw	53	;'5'
   694  05C9  3400               	retlw	0
   695  05CA                     STR_13:	
   696  05CA  3436               	retlw	54	;'6'
   697  05CB  3400               	retlw	0
   698  05CC                     STR_14:	
   699  05CC  3437               	retlw	55	;'7'
   700  05CD  3400               	retlw	0
   701  05CE                     STR_15:	
   702  05CE  3438               	retlw	56	;'8'
   703  05CF  3400               	retlw	0
   704  05D0                     STR_16:	
   705  05D0  3439               	retlw	57	;'9'
   706  05D1  3400               	retlw	0
   707  057C                     
   708                           ; #config settings
   709  0000                     
   710                           	psect	cinit
   711  000F                     start_initialization:	
   712  000F                     __initialization:	
   713                           
   714                           ; Clear objects allocated to BANK0
   715  000F  1283               	bcf	3,5	;RP0=0, select bank0
   716  0010  1303               	bcf	3,6	;RP1=0, select bank0
   717  0011  01C1               	clrf	__pbssBANK0& (0+127)
   718  0012  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   719  0013  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   720  0014  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   721  0015  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   722  0016  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   723  0017  01C7               	clrf	(__pbssBANK0+6)& (0+127)
   724  0018  01C8               	clrf	(__pbssBANK0+7)& (0+127)
   725  0019  01C9               	clrf	(__pbssBANK0+8)& (0+127)
   726  001A  01CA               	clrf	(__pbssBANK0+9)& (0+127)
   727  001B  01CB               	clrf	(__pbssBANK0+10)& (0+127)
   728  001C  01CC               	clrf	(__pbssBANK0+11)& (0+127)
   729  001D                     end_of_initialization:	
   730                           ;End of C runtime variable initialization code
   731                           
   732  001D                     __end_of__initialization:	
   733  001D  0183               	clrf	3
   734  001E  120A  118A  2BAB   	ljmp	_main	;jump to C main() function
   735                           
   736                           	psect	bssBANK0
   737  0041                     __pbssBANK0:	
   738  0041                     VAL@F1517:	
   739  0041                     	ds	6
   740  0047                     _sen:	
   741  0047                     	ds	1
   742  0048                     _sensor:	
   743  0048                     	ds	1
   744  0049                     _ADCAN1:	
   745  0049                     	ds	1
   746  004A                     _ADCAN0:	
   747  004A                     	ds	1
   748  004B                     _eADC:	
   749  004B                     	ds	1
   750  004C                     _cambiante:	
   751  004C                     	ds	1
   752                           
   753                           	psect	cstackCOMMON
   754  0070                     __pcstackCOMMON:	
   755  0070                     ?_setup:	
   756  0070                     ?_INIT_LCD:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_LCD_CLEAR:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_LCD_RH:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_delay_ms:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_CONFIG_ADC:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_LCD_CONTROL:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_LCD_PULSE:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_isr:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ??_isr:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_main:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_delay_us:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_LCD_DATO:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_LCD_PRINT:	
   793                           ; 1 bytes @ 0x0
   794                           
   795                           
   796                           ; 1 bytes @ 0x0
   797  0070                     	ds	3
   798  0073                     ??_setup:	
   799  0073                     ??_delay_ms:	
   800                           ; 1 bytes @ 0x3
   801                           
   802  0073                     ??_CONFIG_ADC:	
   803                           ; 1 bytes @ 0x3
   804                           
   805  0073                     ??_delay_us:	
   806                           ; 1 bytes @ 0x3
   807                           
   808  0073                     ?___awmod:	
   809                           ; 1 bytes @ 0x3
   810                           
   811  0073                     ?___aldiv:	
   812                           ; 2 bytes @ 0x3
   813                           
   814  0073                     ___awmod@divisor:	
   815                           ; 4 bytes @ 0x3
   816                           
   817  0073                     ___aldiv@divisor:	
   818                           ; 2 bytes @ 0x3
   819                           
   820                           
   821                           ; 4 bytes @ 0x3
   822  0073                     	ds	1
   823  0074                     delay_ms@dms:	
   824  0074                     delay_us@ams:	
   825                           ; 1 bytes @ 0x4
   826                           
   827                           
   828                           ; 1 bytes @ 0x4
   829  0074                     	ds	1
   830  0075                     delay_ms@i:	
   831  0075                     delay_us@j:	
   832                           ; 2 bytes @ 0x5
   833                           
   834  0075                     ___awmod@dividend:	
   835                           ; 2 bytes @ 0x5
   836                           
   837                           
   838                           ; 2 bytes @ 0x5
   839  0075                     	ds	2
   840  0077                     ??_LCD_PULSE:	
   841  0077                     ??_LCD_DATO:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     ??___awmod:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     LCD_DATO@comando:	
   848                           ; 1 bytes @ 0x7
   849                           
   850  0077                     delay_ms@j:	
   851                           ; 1 bytes @ 0x7
   852                           
   853  0077                     ___aldiv@dividend:	
   854                           ; 2 bytes @ 0x7
   855                           
   856                           
   857                           ; 4 bytes @ 0x7
   858  0077                     	ds	1
   859  0078                     ??_LCD_PRINT:	
   860  0078                     ___awmod@counter:	
   861                           ; 1 bytes @ 0x8
   862                           
   863                           
   864                           ; 1 bytes @ 0x8
   865  0078                     	ds	1
   866  0079                     ??_LCD_CONTROL:	
   867  0079                     LCD_CONTROL@dato:	
   868                           ; 1 bytes @ 0x9
   869                           
   870  0079                     LCD_PRINT@data:	
   871                           ; 1 bytes @ 0x9
   872                           
   873  0079                     ___awmod@sign:	
   874                           ; 1 bytes @ 0x9
   875                           
   876                           
   877                           ; 1 bytes @ 0x9
   878  0079                     	ds	1
   879  007A                     ??_INIT_LCD:	
   880  007A                     ??_LCD_CLEAR:	
   881                           ; 1 bytes @ 0xA
   882                           
   883  007A                     ??_LCD_RH:	
   884                           ; 1 bytes @ 0xA
   885                           
   886  007A                     ??_LCD_PRINT_WP:	
   887                           ; 1 bytes @ 0xA
   888                           
   889  007A                     ??___awdiv:	
   890                           ; 1 bytes @ 0xA
   891                           
   892                           
   893                           ; 1 bytes @ 0xA
   894  007A                     	ds	1
   895  007B                     ??_CONFIG_USART:	
   896                           
   897                           	psect	cstackBANK0
   898  0020                     __pcstackBANK0:	
   899                           ; 1 bytes @ 0xB
   900                           
   901  0020                     ?_LCD_PRINT_WP:	
   902  0020                     ??___aldiv:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0020                     ?___awdiv:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0020                     LCD_PRINT_WP@x:	
   909                           ; 2 bytes @ 0x0
   910                           
   911  0020                     ___awdiv@divisor:	
   912                           ; 2 bytes @ 0x0
   913                           
   914                           
   915                           ; 2 bytes @ 0x0
   916  0020                     	ds	1
   917  0021                     ___aldiv@counter:	
   918                           
   919                           ; 1 bytes @ 0x1
   920  0021                     	ds	1
   921  0022                     ___aldiv@sign:	
   922  0022                     LCD_PRINT_WP@y:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0022                     ___awdiv@dividend:	
   926                           ; 2 bytes @ 0x2
   927                           
   928                           
   929                           ; 2 bytes @ 0x2
   930  0022                     	ds	1
   931  0023                     ___aldiv@quotient:	
   932                           
   933                           ; 4 bytes @ 0x3
   934  0023                     	ds	1
   935  0024                     LCD_PRINT_WP@frase:	
   936  0024                     ___awdiv@counter:	
   937                           ; 1 bytes @ 0x4
   938                           
   939                           
   940                           ; 1 bytes @ 0x4
   941  0024                     	ds	1
   942  0025                     LCD_PRINT_WP@location:	
   943  0025                     ___awdiv@sign:	
   944                           ; 1 bytes @ 0x5
   945                           
   946                           
   947                           ; 1 bytes @ 0x5
   948  0025                     	ds	1
   949  0026                     ___awdiv@quotient:	
   950                           
   951                           ; 2 bytes @ 0x6
   952  0026                     	ds	1
   953  0027                     ?_CONFIG_USART:	
   954  0027                     CONFIG_USART@BAUD:	
   955                           ; 1 bytes @ 0x7
   956                           
   957                           
   958                           ; 4 bytes @ 0x7
   959  0027                     	ds	1
   960  0028                     ?_VAL:	
   961  0028                     VAL@column:	
   962                           ; 1 bytes @ 0x8
   963                           
   964                           
   965                           ; 1 bytes @ 0x8
   966  0028                     	ds	1
   967  0029                     ??_VAL:	
   968                           
   969                           ; 1 bytes @ 0x9
   970  0029                     	ds	2
   971  002B                     _CONFIG_USART$1118:	
   972                           
   973                           ; 4 bytes @ 0xB
   974  002B                     	ds	3
   975  002E                     VAL@unidades:	
   976                           
   977                           ; 1 bytes @ 0xE
   978  002E                     	ds	1
   979  002F                     VAL@decimas:	
   980                           
   981                           ; 1 bytes @ 0xF
   982  002F                     	ds	1
   983  0030                     VAL@centesimas:	
   984                           
   985                           ; 1 bytes @ 0x10
   986  0030                     	ds	1
   987  0031                     VAL@numero:	
   988                           
   989                           ; 6 bytes @ 0x11
   990  0031                     	ds	6
   991  0037                     _VAL$1117:	
   992                           
   993                           ; 2 bytes @ 0x17
   994  0037                     	ds	2
   995  0039                     VAL@i:	
   996                           
   997                           ; 2 bytes @ 0x19
   998  0039                     	ds	2
   999  003B                     VAL@i_376:	
  1000                           
  1001                           ; 2 bytes @ 0x1B
  1002  003B                     	ds	2
  1003  003D                     VAL@result:	
  1004                           
  1005                           ; 1 bytes @ 0x1D
  1006  003D                     	ds	1
  1007  003E                     VAL@valor:	
  1008                           
  1009                           ; 1 bytes @ 0x1E
  1010  003E                     	ds	1
  1011  003F                     VAL@coordenada:	
  1012                           
  1013                           ; 1 bytes @ 0x1F
  1014  003F                     	ds	1
  1015  0040                     ??_main:	
  1016                           
  1017                           ; 1 bytes @ 0x20
  1018  0040                     	ds	1
  1019                           
  1020                           	psect	maintext
  1021  03AB                     __pmaintext:	
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 45 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : B00/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0
  1043 ;;      Temps:          0       1       0       0       0
  1044 ;;      Totals:         0       1       0       0       0
  1045 ;;Total ram usage:        1 bytes
  1046 ;; Hardware stack levels required when called:    7
  1047 ;; This function calls:
  1048 ;;		_CONFIG_ADC
  1049 ;;		_CONFIG_USART
  1050 ;;		_INIT_LCD
  1051 ;;		_LCD_CLEAR
  1052 ;;		_LCD_PRINT_WP
  1053 ;;		_LCD_RH
  1054 ;;		_VAL
  1055 ;;		_delay_ms
  1056 ;;		_setup
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _main
  1064  03AB                     _main:	
  1065  03AB                     l1749:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1068                           
  1069                           
  1070                           ;main.c: 46:     setup();
  1071  03AB  120A  118A  2768  120A  118A  	fcall	_setup
  1072  03B0                     l1751:	
  1073                           
  1074                           ;main.c: 47:     INIT_LCD();
  1075  03B0  120A  118A  273F  120A  118A  	fcall	_INIT_LCD
  1076  03B5                     l1753:	
  1077                           
  1078                           ;main.c: 48:     LCD_CLEAR();
  1079  03B5  120A  158A  27C6  120A  118A  	fcall	_LCD_CLEAR
  1080  03BA                     l1755:	
  1081                           
  1082                           ;main.c: 49:     LCD_RH();
  1083  03BA  120A  118A  27F9  120A  118A  	fcall	_LCD_RH
  1084  03BF                     l1757:	
  1085                           
  1086                           ;main.c: 50:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
  1087  03BF  3000               	movlw	0
  1088  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1089  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1090  03C2  00A0               	movwf	LCD_PRINT_WP@x
  1091  03C3  00A1               	movwf	LCD_PRINT_WP@x+1
  1092  03C4  3001               	movlw	1
  1093  03C5  00A2               	movwf	LCD_PRINT_WP@y
  1094  03C6  3000               	movlw	0
  1095  03C7  00A3               	movwf	LCD_PRINT_WP@y+1
  1096  03C8  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1097  03C9  00C0               	movwf	??_main
  1098  03CA  0840               	movf	??_main,w
  1099  03CB  00A4               	movwf	LCD_PRINT_WP@frase
  1100  03CC  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1101  03D1                     l1759:	
  1102                           
  1103                           ;main.c: 51:     delay_ms(150);
  1104  03D1  3096               	movlw	150
  1105  03D2  120A  118A  2712  120A  118A  	fcall	_delay_ms
  1106  03D7                     l1761:	
  1107                           
  1108                           ;main.c: 52:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
  1109  03D7  3000               	movlw	0
  1110  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1111  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1112  03DA  00A0               	movwf	LCD_PRINT_WP@x
  1113  03DB  00A1               	movwf	LCD_PRINT_WP@x+1
  1114  03DC  3002               	movlw	2
  1115  03DD  00A2               	movwf	LCD_PRINT_WP@y
  1116  03DE  3000               	movlw	0
  1117  03DF  00A3               	movwf	LCD_PRINT_WP@y+1
  1118  03E0  3045               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1119  03E1  00C0               	movwf	??_main
  1120  03E2  0840               	movf	??_main,w
  1121  03E3  00A4               	movwf	LCD_PRINT_WP@frase
  1122  03E4  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1123  03E9                     l1763:	
  1124                           
  1125                           ;main.c: 53:     delay_ms(150);
  1126  03E9  3096               	movlw	150
  1127  03EA  120A  118A  2712  120A  118A  	fcall	_delay_ms
  1128  03EF                     l1765:	
  1129                           
  1130                           ;main.c: 54:     LCD_CLEAR();
  1131  03EF  120A  158A  27C6  120A  118A  	fcall	_LCD_CLEAR
  1132  03F4                     l1767:	
  1133                           
  1134                           ;main.c: 55:     LCD_RH();
  1135  03F4  120A  118A  27F9  120A  118A  	fcall	_LCD_RH
  1136  03F9                     l1769:	
  1137                           
  1138                           ;main.c: 56:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
  1139  03F9  3000               	movlw	0
  1140  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1141  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1142  03FC  00A0               	movwf	LCD_PRINT_WP@x
  1143  03FD  00A1               	movwf	LCD_PRINT_WP@x+1
  1144  03FE  3001               	movlw	1
  1145  03FF  00A2               	movwf	LCD_PRINT_WP@y
  1146  0400  3000               	movlw	0
  1147  0401  00A3               	movwf	LCD_PRINT_WP@y+1
  1148  0402  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1149  0403  00C0               	movwf	??_main
  1150  0404  0840               	movf	??_main,w
  1151  0405  00A4               	movwf	LCD_PRINT_WP@frase
  1152  0406  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1153  040B                     l1771:	
  1154                           
  1155                           ;main.c: 57:     delay_ms(150);
  1156  040B  3096               	movlw	150
  1157  040C  120A  118A  2712  120A  118A  	fcall	_delay_ms
  1158  0411                     l1773:	
  1159                           
  1160                           ;main.c: 58:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
  1161  0411  3000               	movlw	0
  1162  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0414  00A0               	movwf	LCD_PRINT_WP@x
  1165  0415  00A1               	movwf	LCD_PRINT_WP@x+1
  1166  0416  3002               	movlw	2
  1167  0417  00A2               	movwf	LCD_PRINT_WP@y
  1168  0418  3000               	movlw	0
  1169  0419  00A3               	movwf	LCD_PRINT_WP@y+1
  1170  041A  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1171  041B  00C0               	movwf	??_main
  1172  041C  0840               	movf	??_main,w
  1173  041D  00A4               	movwf	LCD_PRINT_WP@frase
  1174  041E  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1175  0423                     l1775:	
  1176                           
  1177                           ;main.c: 59:     delay_ms(150);
  1178  0423  3096               	movlw	150
  1179  0424  120A  118A  2712  120A  118A  	fcall	_delay_ms
  1180  0429                     l1777:	
  1181                           
  1182                           ;main.c: 60:     LCD_CLEAR();
  1183  0429  120A  158A  27C6  120A  118A  	fcall	_LCD_CLEAR
  1184  042E                     l1779:	
  1185                           
  1186                           ;main.c: 61:     LCD_RH();
  1187  042E  120A  118A  27F9  120A  118A  	fcall	_LCD_RH
  1188  0433                     l1781:	
  1189                           
  1190                           ;main.c: 62:     LCD_PRINT_WP(0,1,"|SEN.2|SEN.1| CT");
  1191  0433  3000               	movlw	0
  1192  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0436  00A0               	movwf	LCD_PRINT_WP@x
  1195  0437  00A1               	movwf	LCD_PRINT_WP@x+1
  1196  0438  3001               	movlw	1
  1197  0439  00A2               	movwf	LCD_PRINT_WP@y
  1198  043A  3000               	movlw	0
  1199  043B  00A3               	movwf	LCD_PRINT_WP@y+1
  1200  043C  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1201  043D  00C0               	movwf	??_main
  1202  043E  0840               	movf	??_main,w
  1203  043F  00A4               	movwf	LCD_PRINT_WP@frase
  1204  0440  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1205  0445                     l1783:	
  1206                           
  1207                           ;main.c: 63:     LCD_PRINT_WP(0,2,"|0.00V|0.00V|000");
  1208  0445  3000               	movlw	0
  1209  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0448  00A0               	movwf	LCD_PRINT_WP@x
  1212  0449  00A1               	movwf	LCD_PRINT_WP@x+1
  1213  044A  3002               	movlw	2
  1214  044B  00A2               	movwf	LCD_PRINT_WP@y
  1215  044C  3000               	movlw	0
  1216  044D  00A3               	movwf	LCD_PRINT_WP@y+1
  1217  044E  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1218  044F  00C0               	movwf	??_main
  1219  0450  0840               	movf	??_main,w
  1220  0451  00A4               	movwf	LCD_PRINT_WP@frase
  1221  0452  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1222  0457                     l1785:	
  1223                           
  1224                           ;main.c: 64:     CONFIG_USART(9600);
  1225  0457  3000               	movlw	0
  1226  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1228  045A  00AA               	movwf	CONFIG_USART@BAUD+3
  1229  045B  3000               	movlw	0
  1230  045C  00A9               	movwf	CONFIG_USART@BAUD+2
  1231  045D  3025               	movlw	37
  1232  045E  00A8               	movwf	CONFIG_USART@BAUD+1
  1233  045F  3080               	movlw	128
  1234  0460  00A7               	movwf	CONFIG_USART@BAUD
  1235  0461  120A  118A  2694  120A  118A  	fcall	_CONFIG_USART
  1236  0466                     l1787:	
  1237                           
  1238                           ;main.c: 65:     CONFIG_ADC();
  1239  0466  120A  158A  27CD  120A  118A  	fcall	_CONFIG_ADC
  1240  046B                     l1789:	
  1241                           
  1242                           ;main.c: 68:         if (eADC == 1){
  1243  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1244  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1245  046D  034B               	decf	_eADC,w
  1246  046E  1D03               	btfss	3,2
  1247  046F  2C71               	goto	u1501
  1248  0470  2C72               	goto	u1500
  1249  0471                     u1501:	
  1250  0471  2C86               	goto	l1803
  1251  0472                     u1500:	
  1252  0472                     l1791:	
  1253                           
  1254                           ;main.c: 69:             eADC = 0;
  1255  0472  01CB               	clrf	_eADC
  1256  0473                     l1793:	
  1257                           
  1258                           ;main.c: 70:             if (cambiante == 0){ADCAN0 = ADRESH;}
  1259  0473  084C               	movf	_cambiante,w
  1260  0474  1D03               	btfss	3,2
  1261  0475  2C77               	goto	u1511
  1262  0476  2C78               	goto	u1510
  1263  0477                     u1511:	
  1264  0477  2C7C               	goto	l1797
  1265  0478                     u1510:	
  1266  0478                     l1795:	
  1267  0478  081E               	movf	30,w	;volatile
  1268  0479  00C0               	movwf	??_main
  1269  047A  0840               	movf	??_main,w
  1270  047B  00CA               	movwf	_ADCAN0
  1271  047C                     l1797:	
  1272                           
  1273                           ;main.c: 71:             if (cambiante == 1){ADCAN1 = ADRESH;}
  1274  047C  034C               	decf	_cambiante,w
  1275  047D  1D03               	btfss	3,2
  1276  047E  2C80               	goto	u1521
  1277  047F  2C81               	goto	u1520
  1278  0480                     u1521:	
  1279  0480  2C85               	goto	l1801
  1280  0481                     u1520:	
  1281  0481                     l1799:	
  1282  0481  081E               	movf	30,w	;volatile
  1283  0482  00C0               	movwf	??_main
  1284  0483  0840               	movf	??_main,w
  1285  0484  00C9               	movwf	_ADCAN1
  1286  0485                     l1801:	
  1287                           
  1288                           ;main.c: 72:             ADCON0bits.GO_DONE = 1;}
  1289  0485  149F               	bsf	31,1	;volatile
  1290  0486                     l1803:	
  1291                           
  1292                           ;main.c: 73:         if (sensor == 20){
  1293  0486  3014               	movlw	20
  1294  0487  0648               	xorwf	_sensor,w
  1295  0488  1D03               	btfss	3,2
  1296  0489  2C8B               	goto	u1531
  1297  048A  2C8C               	goto	u1530
  1298  048B                     u1531:	
  1299  048B  2C6B               	goto	l1789
  1300  048C                     u1530:	
  1301  048C                     l1805:	
  1302                           
  1303                           ;main.c: 74:             if (sen == 0){VAL(ADCAN0,0);}
  1304  048C  0847               	movf	_sen,w
  1305  048D  1D03               	btfss	3,2
  1306  048E  2C90               	goto	u1541
  1307  048F  2C91               	goto	u1540
  1308  0490                     u1541:	
  1309  0490  2C98               	goto	l1809
  1310  0491                     u1540:	
  1311  0491                     l1807:	
  1312  0491  01A8               	clrf	VAL@column
  1313  0492  084A               	movf	_ADCAN0,w
  1314  0493  120A  118A  2021  120A  118A  	fcall	_VAL
  1315  0498                     l1809:	
  1316                           
  1317                           ;main.c: 75:             if (sen == 1){VAL(ADCAN1,1);}
  1318  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1320  049A  0347               	decf	_sen,w
  1321  049B  1D03               	btfss	3,2
  1322  049C  2C9E               	goto	u1551
  1323  049D  2C9F               	goto	u1550
  1324  049E                     u1551:	
  1325  049E  2CA7               	goto	l1813
  1326  049F                     u1550:	
  1327  049F                     l1811:	
  1328  049F  01A8               	clrf	VAL@column
  1329  04A0  0AA8               	incf	VAL@column,f
  1330  04A1  0849               	movf	_ADCAN1,w
  1331  04A2  120A  118A  2021  120A  118A  	fcall	_VAL
  1332  04A7                     l1813:	
  1333                           
  1334                           ;main.c: 76:             sen++;
  1335  04A7  3001               	movlw	1
  1336  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1337  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1338  04AA  00C0               	movwf	??_main
  1339  04AB  0840               	movf	??_main,w
  1340  04AC  07C7               	addwf	_sen,f
  1341  04AD                     l1815:	
  1342                           
  1343                           ;main.c: 77:             if (sen > 1){sen = 0;}
  1344  04AD  3002               	movlw	2
  1345  04AE  0247               	subwf	_sen,w
  1346  04AF  1C03               	skipc
  1347  04B0  2CB2               	goto	u1561
  1348  04B1  2CB3               	goto	u1560
  1349  04B2                     u1561:	
  1350  04B2  2CB4               	goto	l84
  1351  04B3                     u1560:	
  1352  04B3                     l1817:	
  1353  04B3  01C7               	clrf	_sen
  1354  04B4                     l84:	
  1355                           
  1356                           ;main.c: 78:             sensor = 0;}
  1357  04B4  01C8               	clrf	_sensor
  1358  04B5  2C6B               	goto	l1789
  1359  04B6  120A  118A  280C   	ljmp	start
  1360  04B9                     __end_of_main:	
  1361                           
  1362                           	psect	text1
  1363  0768                     __ptext1:	
  1364 ;; *************** function _setup *****************
  1365 ;; Defined at:
  1366 ;;		line 83 in file "main.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _setup
  1396  0768                     _setup:	
  1397  0768                     l1501:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _setup: [wreg+status,2]
  1400                           
  1401                           
  1402                           ;main.c: 85:     TRISA = 0b00000011;
  1403  0768  3003               	movlw	3
  1404  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1405  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1406  076B  0085               	movwf	5	;volatile
  1407                           
  1408                           ;main.c: 86:     ANSEL = 0b00000011;
  1409  076C  3003               	movlw	3
  1410  076D  1683               	bsf	3,5	;RP0=1, select bank3
  1411  076E  1703               	bsf	3,6	;RP1=1, select bank3
  1412  076F  0088               	movwf	8	;volatile
  1413  0770                     l1503:	
  1414                           
  1415                           ;main.c: 87:     ANSELH = 0b00000000;
  1416  0770  0189               	clrf	9	;volatile
  1417  0771                     l1505:	
  1418                           
  1419                           ;main.c: 88:     TRISB = 0b00000000;
  1420  0771  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0772  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0773  0186               	clrf	6	;volatile
  1423  0774                     l1507:	
  1424                           
  1425                           ;main.c: 89:     TRISC = 0b00000000;
  1426  0774  0187               	clrf	7	;volatile
  1427  0775                     l1509:	
  1428                           
  1429                           ;main.c: 90:     TRISD = 0b00000000;
  1430  0775  0188               	clrf	8	;volatile
  1431  0776                     l1511:	
  1432                           
  1433                           ;main.c: 91:     TRISE = 0b0000;
  1434  0776  0189               	clrf	9	;volatile
  1435  0777                     l1513:	
  1436                           
  1437                           ;main.c: 92:     PORTB = 0b00000000;
  1438  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0779  0186               	clrf	6	;volatile
  1441  077A                     l1515:	
  1442                           
  1443                           ;main.c: 93:     PORTC = 0b00000000;
  1444  077A  0187               	clrf	7	;volatile
  1445  077B                     l1517:	
  1446                           
  1447                           ;main.c: 94:     PORTD = 0b00000000;
  1448  077B  0188               	clrf	8	;volatile
  1449  077C                     l1519:	
  1450                           
  1451                           ;main.c: 95:     PORTE = 0b0000;
  1452  077C  0189               	clrf	9	;volatile
  1453  077D                     l1521:	
  1454                           
  1455                           ;main.c: 98:     OPTION_REGbits.T0CS = 0;
  1456  077D  1683               	bsf	3,5	;RP0=1, select bank1
  1457  077E  1303               	bcf	3,6	;RP1=0, select bank1
  1458  077F  1281               	bcf	1,5	;volatile
  1459  0780                     l1523:	
  1460                           
  1461                           ;main.c: 99:     OPTION_REGbits.PSA = 0;
  1462  0780  1181               	bcf	1,3	;volatile
  1463  0781                     l1525:	
  1464                           
  1465                           ;main.c: 100:     OPTION_REGbits.PS0 = 0;
  1466  0781  1001               	bcf	1,0	;volatile
  1467  0782                     l1527:	
  1468                           
  1469                           ;main.c: 101:     OPTION_REGbits.PS1 = 1;
  1470  0782  1481               	bsf	1,1	;volatile
  1471  0783                     l1529:	
  1472                           
  1473                           ;main.c: 102:     OPTION_REGbits.PS2 = 0;
  1474  0783  1101               	bcf	1,2	;volatile
  1475  0784                     l1531:	
  1476                           
  1477                           ;main.c: 103:     INTCONbits.T0IE = 1;
  1478  0784  168B               	bsf	11,5	;volatile
  1479  0785                     l1533:	
  1480                           
  1481                           ;main.c: 104:     INTCONbits.T0IF = 0;
  1482  0785  110B               	bcf	11,2	;volatile
  1483  0786                     l1535:	
  1484                           
  1485                           ;main.c: 105:     INTCONbits.GIE = 1;
  1486  0786  178B               	bsf	11,7	;volatile
  1487  0787                     l1537:	
  1488                           
  1489                           ;main.c: 106:     TMR0 = 130;
  1490  0787  3082               	movlw	130
  1491  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1493  078A  0081               	movwf	1	;volatile
  1494  078B                     l90:	
  1495  078B  0008               	return
  1496  078C                     __end_of_setup:	
  1497                           
  1498                           	psect	text2
  1499  0021                     __ptext2:	
  1500 ;; *************** function _VAL *****************
  1501 ;; Defined at:
  1502 ;;		line 72 in file "LCD.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  result          1    wreg     unsigned char 
  1505 ;;  column          1    8[BANK0 ] unsigned char 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  result          1   29[BANK0 ] unsigned char 
  1508 ;;  i               2   27[BANK0 ] int 
  1509 ;;  i               2   25[BANK0 ] int 
  1510 ;;  numero          6   17[BANK0 ] int [3]
  1511 ;;  coordenada      1   31[BANK0 ] unsigned char 
  1512 ;;  valor           1   30[BANK0 ] unsigned char 
  1513 ;;  centesimas      1   16[BANK0 ] unsigned char 
  1514 ;;  decimas         1   15[BANK0 ] unsigned char 
  1515 ;;  unidades        1   14[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       1       0       0       0
  1526 ;;      Locals:         0      18       0       0       0
  1527 ;;      Temps:          0       5       0       0       0
  1528 ;;      Totals:         0      24       0       0       0
  1529 ;;Total ram usage:       24 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    6
  1532 ;; This function calls:
  1533 ;;		_LCD_PRINT_WP
  1534 ;;		___awdiv
  1535 ;;		___awmod
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _VAL
  1543  0021                     _VAL:	
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in _VAL: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1547                           ;VAL@result stored from wreg
  1548  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0023  00BD               	movwf	VAL@result
  1551  0024                     l1567:	
  1552  0024  30FA               	movlw	250
  1553  0025  023D               	subwf	VAL@result,w
  1554  0026  1C03               	skipc
  1555  0027  2829               	goto	u1131
  1556  0028  282A               	goto	u1130
  1557  0029                     u1131:	
  1558  0029  282E               	goto	l1571
  1559  002A                     u1130:	
  1560  002A                     l1569:	
  1561  002A  30FA               	movlw	250
  1562  002B  00A9               	movwf	??_VAL
  1563  002C  0829               	movf	??_VAL,w
  1564  002D  00BD               	movwf	VAL@result
  1565  002E                     l1571:	
  1566  002E                     l1573:	
  1567  002E  01BF               	clrf	VAL@coordenada
  1568  002F                     l1575:	
  1569  002F  3032               	movlw	50
  1570  0030  00A0               	movwf	___awdiv@divisor
  1571  0031  3000               	movlw	0
  1572  0032  00A1               	movwf	___awdiv@divisor+1
  1573  0033  3032               	movlw	50
  1574  0034  00F3               	movwf	___awmod@divisor
  1575  0035  3000               	movlw	0
  1576  0036  00F4               	movwf	___awmod@divisor+1
  1577  0037  083D               	movf	VAL@result,w
  1578  0038  00A9               	movwf	??_VAL
  1579  0039  01AA               	clrf	??_VAL+1
  1580  003A  0829               	movf	??_VAL,w
  1581  003B  00F5               	movwf	___awmod@dividend
  1582  003C  082A               	movf	??_VAL+1,w
  1583  003D  00F6               	movwf	___awmod@dividend+1
  1584  003E  120A  118A  263B  120A  118A  	fcall	___awmod
  1585  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0045  083D               	movf	VAL@result,w
  1588  0046  00AB               	movwf	??_VAL+2
  1589  0047  0873               	movf	?___awmod,w
  1590  0048  022B               	subwf	??_VAL+2,w
  1591  0049  00A2               	movwf	___awdiv@dividend
  1592  004A  0974               	comf	?___awmod+1,w
  1593  004B  1803               	skipnc
  1594  004C  3E01               	addlw	1
  1595  004D  00A3               	movwf	___awdiv@dividend+1
  1596  004E  120A  118A  25D2  120A  118A  	fcall	___awdiv
  1597  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0055  0820               	movf	?___awdiv,w
  1600  0056  00AC               	movwf	??_VAL+3
  1601  0057  082C               	movf	??_VAL+3,w
  1602  0058  00AE               	movwf	VAL@unidades
  1603  0059                     l1577:	
  1604  0059  083D               	movf	VAL@result,w
  1605  005A  00A9               	movwf	??_VAL
  1606  005B  01AA               	clrf	??_VAL+1
  1607  005C  0829               	movf	??_VAL,w
  1608  005D  00F5               	movwf	___awmod@dividend
  1609  005E  082A               	movf	??_VAL+1,w
  1610  005F  00F6               	movwf	___awmod@dividend+1
  1611  0060  3032               	movlw	50
  1612  0061  00F3               	movwf	___awmod@divisor
  1613  0062  3000               	movlw	0
  1614  0063  00F4               	movwf	___awmod@divisor+1
  1615  0064  120A  118A  263B  120A  118A  	fcall	___awmod
  1616  0069  0874               	movf	?___awmod+1,w
  1617  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1618  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1619  006C  00B8               	movwf	_VAL$1117+1
  1620  006D  0873               	movf	?___awmod,w
  1621  006E  00B7               	movwf	_VAL$1117
  1622  006F                     l1579:	
  1623  006F  3005               	movlw	5
  1624  0070  00A0               	movwf	___awdiv@divisor
  1625  0071  3000               	movlw	0
  1626  0072  00A1               	movwf	___awdiv@divisor+1
  1627  0073  3032               	movlw	50
  1628  0074  00F3               	movwf	___awmod@divisor
  1629  0075  3000               	movlw	0
  1630  0076  00F4               	movwf	___awmod@divisor+1
  1631  0077  083D               	movf	VAL@result,w
  1632  0078  00A9               	movwf	??_VAL
  1633  0079  01AA               	clrf	??_VAL+1
  1634  007A  0829               	movf	??_VAL,w
  1635  007B  00F5               	movwf	___awmod@dividend
  1636  007C  082A               	movf	??_VAL+1,w
  1637  007D  00F6               	movwf	___awmod@dividend+1
  1638  007E  120A  118A  263B  120A  118A  	fcall	___awmod
  1639  0083  0873               	movf	?___awmod,w
  1640  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0086  00AB               	movwf	??_VAL+2
  1643  0087  0874               	movf	?___awmod+1,w
  1644  0088  00AC               	movwf	??_VAL+3
  1645  0089  3005               	movlw	5
  1646  008A  00F3               	movwf	___awmod@divisor
  1647  008B  3000               	movlw	0
  1648  008C  00F4               	movwf	___awmod@divisor+1
  1649  008D  0838               	movf	_VAL$1117+1,w
  1650  008E  00F6               	movwf	___awmod@dividend+1
  1651  008F  0837               	movf	_VAL$1117,w
  1652  0090  00F5               	movwf	___awmod@dividend
  1653  0091  120A  118A  263B  120A  118A  	fcall	___awmod
  1654  0096  0873               	movf	?___awmod,w
  1655  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0099  022B               	subwf	??_VAL+2,w
  1658  009A  00A2               	movwf	___awdiv@dividend
  1659  009B  0874               	movf	?___awmod+1,w
  1660  009C  1C03               	skipc
  1661  009D  0A74               	incf	?___awmod+1,w
  1662  009E  022C               	subwf	??_VAL+3,w
  1663  009F  00A3               	movwf	___awdiv@dividend+1
  1664  00A0  120A  118A  25D2  120A  118A  	fcall	___awdiv
  1665  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1666  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1667  00A7  0820               	movf	?___awdiv,w
  1668  00A8  00AD               	movwf	??_VAL+4
  1669  00A9  082D               	movf	??_VAL+4,w
  1670  00AA  00AF               	movwf	VAL@decimas
  1671  00AB                     l1581:	
  1672  00AB  083D               	movf	VAL@result,w
  1673  00AC  00A9               	movwf	??_VAL
  1674  00AD  01AA               	clrf	??_VAL+1
  1675  00AE  0829               	movf	??_VAL,w
  1676  00AF  00F5               	movwf	___awmod@dividend
  1677  00B0  082A               	movf	??_VAL+1,w
  1678  00B1  00F6               	movwf	___awmod@dividend+1
  1679  00B2  3032               	movlw	50
  1680  00B3  00F3               	movwf	___awmod@divisor
  1681  00B4  3000               	movlw	0
  1682  00B5  00F4               	movwf	___awmod@divisor+1
  1683  00B6  120A  118A  263B  120A  118A  	fcall	___awmod
  1684  00BB  0874               	movf	?___awmod+1,w
  1685  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1686  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1687  00BE  00B8               	movwf	_VAL$1117+1
  1688  00BF  0873               	movf	?___awmod,w
  1689  00C0  00B7               	movwf	_VAL$1117
  1690  00C1                     l1583:	
  1691  00C1  3005               	movlw	5
  1692  00C2  00F3               	movwf	___awmod@divisor
  1693  00C3  3000               	movlw	0
  1694  00C4  00F4               	movwf	___awmod@divisor+1
  1695  00C5  0838               	movf	_VAL$1117+1,w
  1696  00C6  00F6               	movwf	___awmod@dividend+1
  1697  00C7  0837               	movf	_VAL$1117,w
  1698  00C8  00F5               	movwf	___awmod@dividend
  1699  00C9  120A  118A  263B  120A  118A  	fcall	___awmod
  1700  00CE  0873               	movf	?___awmod,w
  1701  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1702  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1703  00D1  00A9               	movwf	??_VAL
  1704  00D2  0729               	addwf	??_VAL,w
  1705  00D3  00AA               	movwf	??_VAL+1
  1706  00D4  082A               	movf	??_VAL+1,w
  1707  00D5  00B0               	movwf	VAL@centesimas
  1708  00D6                     l1585:	
  1709  00D6  3031               	movlw	VAL@numero& (0+255)
  1710  00D7  0084               	movwf	4
  1711  00D8  3006               	movlw	6
  1712  00D9  00FF               	movwf	btemp+1
  1713  00DA                     u1140:	
  1714  00DA  1383               	bcf	3,7	;select IRP bank0
  1715  00DB  0180               	clrf	0
  1716  00DC  0A84               	incf	4,f
  1717  00DD  0BFF               	decfsz	btemp+1,f
  1718  00DE  28DA               	goto	u1140
  1719  00DF                     l1587:	
  1720  00DF  082E               	movf	VAL@unidades,w
  1721  00E0  00A9               	movwf	??_VAL
  1722  00E1  01AA               	clrf	??_VAL+1
  1723  00E2  0829               	movf	??_VAL,w
  1724  00E3  00B1               	movwf	VAL@numero
  1725  00E4  082A               	movf	??_VAL+1,w
  1726  00E5  00B2               	movwf	VAL@numero+1
  1727  00E6                     l1589:	
  1728  00E6  082F               	movf	VAL@decimas,w
  1729  00E7  00A9               	movwf	??_VAL
  1730  00E8  01AA               	clrf	??_VAL+1
  1731  00E9  0829               	movf	??_VAL,w
  1732  00EA  00B3               	movwf	VAL@numero+2
  1733  00EB  082A               	movf	??_VAL+1,w
  1734  00EC  00B4               	movwf	VAL@numero+3
  1735  00ED                     l1591:	
  1736  00ED  0830               	movf	VAL@centesimas,w
  1737  00EE  00A9               	movwf	??_VAL
  1738  00EF  01AA               	clrf	??_VAL+1
  1739  00F0  0829               	movf	??_VAL,w
  1740  00F1  00B5               	movwf	VAL@numero+4
  1741  00F2  082A               	movf	??_VAL+1,w
  1742  00F3  00B6               	movwf	VAL@numero+5
  1743  00F4                     l1593:	
  1744  00F4  0828               	movf	VAL@column,w
  1745  00F5  1D03               	btfss	3,2
  1746  00F6  28F8               	goto	u1151
  1747  00F7  28F9               	goto	u1150
  1748  00F8                     u1151:	
  1749  00F8  2A4D               	goto	l1659
  1750  00F9                     u1150:	
  1751  00F9                     l1595:	
  1752  00F9  01B9               	clrf	VAL@i
  1753  00FA  01BA               	clrf	VAL@i+1
  1754  00FB                     l1601:	
  1755  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1756  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1757  00FD  0839               	movf	VAL@i,w
  1758  00FE  00A9               	movwf	??_VAL
  1759  00FF  0729               	addwf	??_VAL,w
  1760  0100  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  1761  0101  0084               	movwf	4
  1762  0102  1383               	bcf	3,7	;select IRP bank0
  1763  0103  0800               	movf	0,w
  1764  0104  00AA               	movwf	??_VAL+1
  1765  0105  082A               	movf	??_VAL+1,w
  1766  0106  00BE               	movwf	VAL@valor
  1767  0107                     l1603:	
  1768  0107  0839               	movf	VAL@i,w
  1769  0108  043A               	iorwf	VAL@i+1,w
  1770  0109  1D03               	btfss	3,2
  1771  010A  290C               	goto	u1161
  1772  010B  290D               	goto	u1160
  1773  010C                     u1161:	
  1774  010C  290F               	goto	l1607
  1775  010D                     u1160:	
  1776  010D                     l1605:	
  1777  010D  01BF               	clrf	VAL@coordenada
  1778  010E  0ABF               	incf	VAL@coordenada,f
  1779  010F                     l1607:	
  1780  010F  0339               	decf	VAL@i,w
  1781  0110  043A               	iorwf	VAL@i+1,w
  1782  0111  1D03               	btfss	3,2
  1783  0112  2914               	goto	u1171
  1784  0113  2915               	goto	u1170
  1785  0114                     u1171:	
  1786  0114  2919               	goto	l1611
  1787  0115                     u1170:	
  1788  0115                     l1609:	
  1789  0115  3003               	movlw	3
  1790  0116  00A9               	movwf	??_VAL
  1791  0117  0829               	movf	??_VAL,w
  1792  0118  00BF               	movwf	VAL@coordenada
  1793  0119                     l1611:	
  1794  0119  3002               	movlw	2
  1795  011A  0639               	xorwf	VAL@i,w
  1796  011B  043A               	iorwf	VAL@i+1,w
  1797  011C  1D03               	btfss	3,2
  1798  011D  291F               	goto	u1181
  1799  011E  2920               	goto	u1180
  1800  011F                     u1181:	
  1801  011F  2924               	goto	l1615
  1802  0120                     u1180:	
  1803  0120                     l1613:	
  1804  0120  3004               	movlw	4
  1805  0121  00A9               	movwf	??_VAL
  1806  0122  0829               	movf	??_VAL,w
  1807  0123  00BF               	movwf	VAL@coordenada
  1808  0124                     l1615:	
  1809  0124  083E               	movf	VAL@valor,w
  1810  0125  1D03               	btfss	3,2
  1811  0126  2928               	goto	u1191
  1812  0127  2929               	goto	u1190
  1813  0128                     u1191:	
  1814  0128  293D               	goto	l1619
  1815  0129                     u1190:	
  1816  0129                     l1617:	
  1817  0129  083F               	movf	VAL@coordenada,w
  1818  012A  00A9               	movwf	??_VAL
  1819  012B  01AA               	clrf	??_VAL+1
  1820  012C  0829               	movf	??_VAL,w
  1821  012D  00A0               	movwf	LCD_PRINT_WP@x
  1822  012E  082A               	movf	??_VAL+1,w
  1823  012F  00A1               	movwf	LCD_PRINT_WP@x+1
  1824  0130  3002               	movlw	2
  1825  0131  00A2               	movwf	LCD_PRINT_WP@y
  1826  0132  3000               	movlw	0
  1827  0133  00A3               	movwf	LCD_PRINT_WP@y+1
  1828  0134  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  1829  0135  00AB               	movwf	??_VAL+2
  1830  0136  082B               	movf	??_VAL+2,w
  1831  0137  00A4               	movwf	LCD_PRINT_WP@frase
  1832  0138  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1833  013D                     l1619:	
  1834  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1835  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1836  013F  033E               	decf	VAL@valor,w
  1837  0140  1D03               	btfss	3,2
  1838  0141  2943               	goto	u1201
  1839  0142  2944               	goto	u1200
  1840  0143                     u1201:	
  1841  0143  2958               	goto	l1623
  1842  0144                     u1200:	
  1843  0144                     l1621:	
  1844  0144  083F               	movf	VAL@coordenada,w
  1845  0145  00A9               	movwf	??_VAL
  1846  0146  01AA               	clrf	??_VAL+1
  1847  0147  0829               	movf	??_VAL,w
  1848  0148  00A0               	movwf	LCD_PRINT_WP@x
  1849  0149  082A               	movf	??_VAL+1,w
  1850  014A  00A1               	movwf	LCD_PRINT_WP@x+1
  1851  014B  3002               	movlw	2
  1852  014C  00A2               	movwf	LCD_PRINT_WP@y
  1853  014D  3000               	movlw	0
  1854  014E  00A3               	movwf	LCD_PRINT_WP@y+1
  1855  014F  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1856  0150  00AB               	movwf	??_VAL+2
  1857  0151  082B               	movf	??_VAL+2,w
  1858  0152  00A4               	movwf	LCD_PRINT_WP@frase
  1859  0153  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1860  0158                     l1623:	
  1861  0158  3002               	movlw	2
  1862  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1863  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1864  015B  063E               	xorwf	VAL@valor,w
  1865  015C  1D03               	btfss	3,2
  1866  015D  295F               	goto	u1211
  1867  015E  2960               	goto	u1210
  1868  015F                     u1211:	
  1869  015F  2974               	goto	l1627
  1870  0160                     u1210:	
  1871  0160                     l1625:	
  1872  0160  083F               	movf	VAL@coordenada,w
  1873  0161  00A9               	movwf	??_VAL
  1874  0162  01AA               	clrf	??_VAL+1
  1875  0163  0829               	movf	??_VAL,w
  1876  0164  00A0               	movwf	LCD_PRINT_WP@x
  1877  0165  082A               	movf	??_VAL+1,w
  1878  0166  00A1               	movwf	LCD_PRINT_WP@x+1
  1879  0167  3002               	movlw	2
  1880  0168  00A2               	movwf	LCD_PRINT_WP@y
  1881  0169  3000               	movlw	0
  1882  016A  00A3               	movwf	LCD_PRINT_WP@y+1
  1883  016B  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1884  016C  00AB               	movwf	??_VAL+2
  1885  016D  082B               	movf	??_VAL+2,w
  1886  016E  00A4               	movwf	LCD_PRINT_WP@frase
  1887  016F  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1888  0174                     l1627:	
  1889  0174  3003               	movlw	3
  1890  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0177  063E               	xorwf	VAL@valor,w
  1893  0178  1D03               	btfss	3,2
  1894  0179  297B               	goto	u1221
  1895  017A  297C               	goto	u1220
  1896  017B                     u1221:	
  1897  017B  2990               	goto	l1631
  1898  017C                     u1220:	
  1899  017C                     l1629:	
  1900  017C  083F               	movf	VAL@coordenada,w
  1901  017D  00A9               	movwf	??_VAL
  1902  017E  01AA               	clrf	??_VAL+1
  1903  017F  0829               	movf	??_VAL,w
  1904  0180  00A0               	movwf	LCD_PRINT_WP@x
  1905  0181  082A               	movf	??_VAL+1,w
  1906  0182  00A1               	movwf	LCD_PRINT_WP@x+1
  1907  0183  3002               	movlw	2
  1908  0184  00A2               	movwf	LCD_PRINT_WP@y
  1909  0185  3000               	movlw	0
  1910  0186  00A3               	movwf	LCD_PRINT_WP@y+1
  1911  0187  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1912  0188  00AB               	movwf	??_VAL+2
  1913  0189  082B               	movf	??_VAL+2,w
  1914  018A  00A4               	movwf	LCD_PRINT_WP@frase
  1915  018B  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1916  0190                     l1631:	
  1917  0190  3004               	movlw	4
  1918  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0193  063E               	xorwf	VAL@valor,w
  1921  0194  1D03               	btfss	3,2
  1922  0195  2997               	goto	u1231
  1923  0196  2998               	goto	u1230
  1924  0197                     u1231:	
  1925  0197  29AC               	goto	l1635
  1926  0198                     u1230:	
  1927  0198                     l1633:	
  1928  0198  083F               	movf	VAL@coordenada,w
  1929  0199  00A9               	movwf	??_VAL
  1930  019A  01AA               	clrf	??_VAL+1
  1931  019B  0829               	movf	??_VAL,w
  1932  019C  00A0               	movwf	LCD_PRINT_WP@x
  1933  019D  082A               	movf	??_VAL+1,w
  1934  019E  00A1               	movwf	LCD_PRINT_WP@x+1
  1935  019F  3002               	movlw	2
  1936  01A0  00A2               	movwf	LCD_PRINT_WP@y
  1937  01A1  3000               	movlw	0
  1938  01A2  00A3               	movwf	LCD_PRINT_WP@y+1
  1939  01A3  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1940  01A4  00AB               	movwf	??_VAL+2
  1941  01A5  082B               	movf	??_VAL+2,w
  1942  01A6  00A4               	movwf	LCD_PRINT_WP@frase
  1943  01A7  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1944  01AC                     l1635:	
  1945  01AC  3005               	movlw	5
  1946  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1947  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1948  01AF  063E               	xorwf	VAL@valor,w
  1949  01B0  1D03               	btfss	3,2
  1950  01B1  29B3               	goto	u1241
  1951  01B2  29B4               	goto	u1240
  1952  01B3                     u1241:	
  1953  01B3  29C8               	goto	l1639
  1954  01B4                     u1240:	
  1955  01B4                     l1637:	
  1956  01B4  083F               	movf	VAL@coordenada,w
  1957  01B5  00A9               	movwf	??_VAL
  1958  01B6  01AA               	clrf	??_VAL+1
  1959  01B7  0829               	movf	??_VAL,w
  1960  01B8  00A0               	movwf	LCD_PRINT_WP@x
  1961  01B9  082A               	movf	??_VAL+1,w
  1962  01BA  00A1               	movwf	LCD_PRINT_WP@x+1
  1963  01BB  3002               	movlw	2
  1964  01BC  00A2               	movwf	LCD_PRINT_WP@y
  1965  01BD  3000               	movlw	0
  1966  01BE  00A3               	movwf	LCD_PRINT_WP@y+1
  1967  01BF  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1968  01C0  00AB               	movwf	??_VAL+2
  1969  01C1  082B               	movf	??_VAL+2,w
  1970  01C2  00A4               	movwf	LCD_PRINT_WP@frase
  1971  01C3  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  1972  01C8                     l1639:	
  1973  01C8  3006               	movlw	6
  1974  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1975  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1976  01CB  063E               	xorwf	VAL@valor,w
  1977  01CC  1D03               	btfss	3,2
  1978  01CD  29CF               	goto	u1251
  1979  01CE  29D0               	goto	u1250
  1980  01CF                     u1251:	
  1981  01CF  29E4               	goto	l1643
  1982  01D0                     u1250:	
  1983  01D0                     l1641:	
  1984  01D0  083F               	movf	VAL@coordenada,w
  1985  01D1  00A9               	movwf	??_VAL
  1986  01D2  01AA               	clrf	??_VAL+1
  1987  01D3  0829               	movf	??_VAL,w
  1988  01D4  00A0               	movwf	LCD_PRINT_WP@x
  1989  01D5  082A               	movf	??_VAL+1,w
  1990  01D6  00A1               	movwf	LCD_PRINT_WP@x+1
  1991  01D7  3002               	movlw	2
  1992  01D8  00A2               	movwf	LCD_PRINT_WP@y
  1993  01D9  3000               	movlw	0
  1994  01DA  00A3               	movwf	LCD_PRINT_WP@y+1
  1995  01DB  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1996  01DC  00AB               	movwf	??_VAL+2
  1997  01DD  082B               	movf	??_VAL+2,w
  1998  01DE  00A4               	movwf	LCD_PRINT_WP@frase
  1999  01DF  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2000  01E4                     l1643:	
  2001  01E4  3007               	movlw	7
  2002  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2003  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2004  01E7  063E               	xorwf	VAL@valor,w
  2005  01E8  1D03               	btfss	3,2
  2006  01E9  29EB               	goto	u1261
  2007  01EA  29EC               	goto	u1260
  2008  01EB                     u1261:	
  2009  01EB  2A00               	goto	l1647
  2010  01EC                     u1260:	
  2011  01EC                     l1645:	
  2012  01EC  083F               	movf	VAL@coordenada,w
  2013  01ED  00A9               	movwf	??_VAL
  2014  01EE  01AA               	clrf	??_VAL+1
  2015  01EF  0829               	movf	??_VAL,w
  2016  01F0  00A0               	movwf	LCD_PRINT_WP@x
  2017  01F1  082A               	movf	??_VAL+1,w
  2018  01F2  00A1               	movwf	LCD_PRINT_WP@x+1
  2019  01F3  3002               	movlw	2
  2020  01F4  00A2               	movwf	LCD_PRINT_WP@y
  2021  01F5  3000               	movlw	0
  2022  01F6  00A3               	movwf	LCD_PRINT_WP@y+1
  2023  01F7  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2024  01F8  00AB               	movwf	??_VAL+2
  2025  01F9  082B               	movf	??_VAL+2,w
  2026  01FA  00A4               	movwf	LCD_PRINT_WP@frase
  2027  01FB  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2028  0200                     l1647:	
  2029  0200  3008               	movlw	8
  2030  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0203  063E               	xorwf	VAL@valor,w
  2033  0204  1D03               	btfss	3,2
  2034  0205  2A07               	goto	u1271
  2035  0206  2A08               	goto	u1270
  2036  0207                     u1271:	
  2037  0207  2A1C               	goto	l1651
  2038  0208                     u1270:	
  2039  0208                     l1649:	
  2040  0208  083F               	movf	VAL@coordenada,w
  2041  0209  00A9               	movwf	??_VAL
  2042  020A  01AA               	clrf	??_VAL+1
  2043  020B  0829               	movf	??_VAL,w
  2044  020C  00A0               	movwf	LCD_PRINT_WP@x
  2045  020D  082A               	movf	??_VAL+1,w
  2046  020E  00A1               	movwf	LCD_PRINT_WP@x+1
  2047  020F  3002               	movlw	2
  2048  0210  00A2               	movwf	LCD_PRINT_WP@y
  2049  0211  3000               	movlw	0
  2050  0212  00A3               	movwf	LCD_PRINT_WP@y+1
  2051  0213  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2052  0214  00AB               	movwf	??_VAL+2
  2053  0215  082B               	movf	??_VAL+2,w
  2054  0216  00A4               	movwf	LCD_PRINT_WP@frase
  2055  0217  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2056  021C                     l1651:	
  2057  021C  3009               	movlw	9
  2058  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2059  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2060  021F  063E               	xorwf	VAL@valor,w
  2061  0220  1D03               	btfss	3,2
  2062  0221  2A23               	goto	u1281
  2063  0222  2A24               	goto	u1280
  2064  0223                     u1281:	
  2065  0223  2A38               	goto	l1655
  2066  0224                     u1280:	
  2067  0224                     l1653:	
  2068  0224  083F               	movf	VAL@coordenada,w
  2069  0225  00A9               	movwf	??_VAL
  2070  0226  01AA               	clrf	??_VAL+1
  2071  0227  0829               	movf	??_VAL,w
  2072  0228  00A0               	movwf	LCD_PRINT_WP@x
  2073  0229  082A               	movf	??_VAL+1,w
  2074  022A  00A1               	movwf	LCD_PRINT_WP@x+1
  2075  022B  3002               	movlw	2
  2076  022C  00A2               	movwf	LCD_PRINT_WP@y
  2077  022D  3000               	movlw	0
  2078  022E  00A3               	movwf	LCD_PRINT_WP@y+1
  2079  022F  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2080  0230  00AB               	movwf	??_VAL+2
  2081  0231  082B               	movf	??_VAL+2,w
  2082  0232  00A4               	movwf	LCD_PRINT_WP@frase
  2083  0233  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2084  0238                     l1655:	
  2085  0238  3001               	movlw	1
  2086  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2087  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2088  023B  07B9               	addwf	VAL@i,f
  2089  023C  1803               	skipnc
  2090  023D  0ABA               	incf	VAL@i+1,f
  2091  023E  3000               	movlw	0
  2092  023F  07BA               	addwf	VAL@i+1,f
  2093  0240                     l1657:	
  2094  0240  083A               	movf	VAL@i+1,w
  2095  0241  3A80               	xorlw	128
  2096  0242  00FF               	movwf	btemp+1
  2097  0243  3080               	movlw	128
  2098  0244  027F               	subwf	btemp+1,w
  2099  0245  1D03               	skipz
  2100  0246  2A49               	goto	u1295
  2101  0247  3003               	movlw	3
  2102  0248  0239               	subwf	VAL@i,w
  2103  0249                     u1295:	
  2104  0249  1C03               	skipc
  2105  024A  2A4C               	goto	u1291
  2106  024B  2A4D               	goto	u1290
  2107  024C                     u1291:	
  2108  024C  28FB               	goto	l1601
  2109  024D                     u1290:	
  2110  024D                     l1659:	
  2111  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2112  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2113  024F  0328               	decf	VAL@column,w
  2114  0250  1D03               	btfss	3,2
  2115  0251  2A53               	goto	u1301
  2116  0252  2A54               	goto	u1300
  2117  0253                     u1301:	
  2118  0253  2BAA               	goto	l196
  2119  0254                     u1300:	
  2120  0254                     l1661:	
  2121  0254  01BB               	clrf	VAL@i_376
  2122  0255  01BC               	clrf	VAL@i_376+1
  2123  0256                     l1667:	
  2124  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0258  083B               	movf	VAL@i_376,w
  2127  0259  00A9               	movwf	??_VAL
  2128  025A  0729               	addwf	??_VAL,w
  2129  025B  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  2130  025C  0084               	movwf	4
  2131  025D  1383               	bcf	3,7	;select IRP bank0
  2132  025E  0800               	movf	0,w
  2133  025F  00AA               	movwf	??_VAL+1
  2134  0260  082A               	movf	??_VAL+1,w
  2135  0261  00BE               	movwf	VAL@valor
  2136  0262                     l1669:	
  2137  0262  083B               	movf	VAL@i_376,w
  2138  0263  043C               	iorwf	VAL@i_376+1,w
  2139  0264  1D03               	btfss	3,2
  2140  0265  2A67               	goto	u1311
  2141  0266  2A68               	goto	u1310
  2142  0267                     u1311:	
  2143  0267  2A6C               	goto	l1673
  2144  0268                     u1310:	
  2145  0268                     l1671:	
  2146  0268  3007               	movlw	7
  2147  0269  00A9               	movwf	??_VAL
  2148  026A  0829               	movf	??_VAL,w
  2149  026B  00BF               	movwf	VAL@coordenada
  2150  026C                     l1673:	
  2151  026C  033B               	decf	VAL@i_376,w
  2152  026D  043C               	iorwf	VAL@i_376+1,w
  2153  026E  1D03               	btfss	3,2
  2154  026F  2A71               	goto	u1321
  2155  0270  2A72               	goto	u1320
  2156  0271                     u1321:	
  2157  0271  2A76               	goto	l1677
  2158  0272                     u1320:	
  2159  0272                     l1675:	
  2160  0272  3009               	movlw	9
  2161  0273  00A9               	movwf	??_VAL
  2162  0274  0829               	movf	??_VAL,w
  2163  0275  00BF               	movwf	VAL@coordenada
  2164  0276                     l1677:	
  2165  0276  3002               	movlw	2
  2166  0277  063B               	xorwf	VAL@i_376,w
  2167  0278  043C               	iorwf	VAL@i_376+1,w
  2168  0279  1D03               	btfss	3,2
  2169  027A  2A7C               	goto	u1331
  2170  027B  2A7D               	goto	u1330
  2171  027C                     u1331:	
  2172  027C  2A81               	goto	l1681
  2173  027D                     u1330:	
  2174  027D                     l1679:	
  2175  027D  300A               	movlw	10
  2176  027E  00A9               	movwf	??_VAL
  2177  027F  0829               	movf	??_VAL,w
  2178  0280  00BF               	movwf	VAL@coordenada
  2179  0281                     l1681:	
  2180  0281  083E               	movf	VAL@valor,w
  2181  0282  1D03               	btfss	3,2
  2182  0283  2A85               	goto	u1341
  2183  0284  2A86               	goto	u1340
  2184  0285                     u1341:	
  2185  0285  2A9A               	goto	l1685
  2186  0286                     u1340:	
  2187  0286                     l1683:	
  2188  0286  083F               	movf	VAL@coordenada,w
  2189  0287  00A9               	movwf	??_VAL
  2190  0288  01AA               	clrf	??_VAL+1
  2191  0289  0829               	movf	??_VAL,w
  2192  028A  00A0               	movwf	LCD_PRINT_WP@x
  2193  028B  082A               	movf	??_VAL+1,w
  2194  028C  00A1               	movwf	LCD_PRINT_WP@x+1
  2195  028D  3002               	movlw	2
  2196  028E  00A2               	movwf	LCD_PRINT_WP@y
  2197  028F  3000               	movlw	0
  2198  0290  00A3               	movwf	LCD_PRINT_WP@y+1
  2199  0291  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  2200  0292  00AB               	movwf	??_VAL+2
  2201  0293  082B               	movf	??_VAL+2,w
  2202  0294  00A4               	movwf	LCD_PRINT_WP@frase
  2203  0295  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2204  029A                     l1685:	
  2205  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2206  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2207  029C  033E               	decf	VAL@valor,w
  2208  029D  1D03               	btfss	3,2
  2209  029E  2AA0               	goto	u1351
  2210  029F  2AA1               	goto	u1350
  2211  02A0                     u1351:	
  2212  02A0  2AB5               	goto	l1689
  2213  02A1                     u1350:	
  2214  02A1                     l1687:	
  2215  02A1  083F               	movf	VAL@coordenada,w
  2216  02A2  00A9               	movwf	??_VAL
  2217  02A3  01AA               	clrf	??_VAL+1
  2218  02A4  0829               	movf	??_VAL,w
  2219  02A5  00A0               	movwf	LCD_PRINT_WP@x
  2220  02A6  082A               	movf	??_VAL+1,w
  2221  02A7  00A1               	movwf	LCD_PRINT_WP@x+1
  2222  02A8  3002               	movlw	2
  2223  02A9  00A2               	movwf	LCD_PRINT_WP@y
  2224  02AA  3000               	movlw	0
  2225  02AB  00A3               	movwf	LCD_PRINT_WP@y+1
  2226  02AC  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2227  02AD  00AB               	movwf	??_VAL+2
  2228  02AE  082B               	movf	??_VAL+2,w
  2229  02AF  00A4               	movwf	LCD_PRINT_WP@frase
  2230  02B0  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2231  02B5                     l1689:	
  2232  02B5  3002               	movlw	2
  2233  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2234  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2235  02B8  063E               	xorwf	VAL@valor,w
  2236  02B9  1D03               	btfss	3,2
  2237  02BA  2ABC               	goto	u1361
  2238  02BB  2ABD               	goto	u1360
  2239  02BC                     u1361:	
  2240  02BC  2AD1               	goto	l1693
  2241  02BD                     u1360:	
  2242  02BD                     l1691:	
  2243  02BD  083F               	movf	VAL@coordenada,w
  2244  02BE  00A9               	movwf	??_VAL
  2245  02BF  01AA               	clrf	??_VAL+1
  2246  02C0  0829               	movf	??_VAL,w
  2247  02C1  00A0               	movwf	LCD_PRINT_WP@x
  2248  02C2  082A               	movf	??_VAL+1,w
  2249  02C3  00A1               	movwf	LCD_PRINT_WP@x+1
  2250  02C4  3002               	movlw	2
  2251  02C5  00A2               	movwf	LCD_PRINT_WP@y
  2252  02C6  3000               	movlw	0
  2253  02C7  00A3               	movwf	LCD_PRINT_WP@y+1
  2254  02C8  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2255  02C9  00AB               	movwf	??_VAL+2
  2256  02CA  082B               	movf	??_VAL+2,w
  2257  02CB  00A4               	movwf	LCD_PRINT_WP@frase
  2258  02CC  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2259  02D1                     l1693:	
  2260  02D1  3003               	movlw	3
  2261  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2262  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2263  02D4  063E               	xorwf	VAL@valor,w
  2264  02D5  1D03               	btfss	3,2
  2265  02D6  2AD8               	goto	u1371
  2266  02D7  2AD9               	goto	u1370
  2267  02D8                     u1371:	
  2268  02D8  2AED               	goto	l1697
  2269  02D9                     u1370:	
  2270  02D9                     l1695:	
  2271  02D9  083F               	movf	VAL@coordenada,w
  2272  02DA  00A9               	movwf	??_VAL
  2273  02DB  01AA               	clrf	??_VAL+1
  2274  02DC  0829               	movf	??_VAL,w
  2275  02DD  00A0               	movwf	LCD_PRINT_WP@x
  2276  02DE  082A               	movf	??_VAL+1,w
  2277  02DF  00A1               	movwf	LCD_PRINT_WP@x+1
  2278  02E0  3002               	movlw	2
  2279  02E1  00A2               	movwf	LCD_PRINT_WP@y
  2280  02E2  3000               	movlw	0
  2281  02E3  00A3               	movwf	LCD_PRINT_WP@y+1
  2282  02E4  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  2283  02E5  00AB               	movwf	??_VAL+2
  2284  02E6  082B               	movf	??_VAL+2,w
  2285  02E7  00A4               	movwf	LCD_PRINT_WP@frase
  2286  02E8  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2287  02ED                     l1697:	
  2288  02ED  3004               	movlw	4
  2289  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2290  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2291  02F0  063E               	xorwf	VAL@valor,w
  2292  02F1  1D03               	btfss	3,2
  2293  02F2  2AF4               	goto	u1381
  2294  02F3  2AF5               	goto	u1380
  2295  02F4                     u1381:	
  2296  02F4  2B09               	goto	l1701
  2297  02F5                     u1380:	
  2298  02F5                     l1699:	
  2299  02F5  083F               	movf	VAL@coordenada,w
  2300  02F6  00A9               	movwf	??_VAL
  2301  02F7  01AA               	clrf	??_VAL+1
  2302  02F8  0829               	movf	??_VAL,w
  2303  02F9  00A0               	movwf	LCD_PRINT_WP@x
  2304  02FA  082A               	movf	??_VAL+1,w
  2305  02FB  00A1               	movwf	LCD_PRINT_WP@x+1
  2306  02FC  3002               	movlw	2
  2307  02FD  00A2               	movwf	LCD_PRINT_WP@y
  2308  02FE  3000               	movlw	0
  2309  02FF  00A3               	movwf	LCD_PRINT_WP@y+1
  2310  0300  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2311  0301  00AB               	movwf	??_VAL+2
  2312  0302  082B               	movf	??_VAL+2,w
  2313  0303  00A4               	movwf	LCD_PRINT_WP@frase
  2314  0304  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2315  0309                     l1701:	
  2316  0309  3005               	movlw	5
  2317  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2318  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2319  030C  063E               	xorwf	VAL@valor,w
  2320  030D  1D03               	btfss	3,2
  2321  030E  2B10               	goto	u1391
  2322  030F  2B11               	goto	u1390
  2323  0310                     u1391:	
  2324  0310  2B25               	goto	l1705
  2325  0311                     u1390:	
  2326  0311                     l1703:	
  2327  0311  083F               	movf	VAL@coordenada,w
  2328  0312  00A9               	movwf	??_VAL
  2329  0313  01AA               	clrf	??_VAL+1
  2330  0314  0829               	movf	??_VAL,w
  2331  0315  00A0               	movwf	LCD_PRINT_WP@x
  2332  0316  082A               	movf	??_VAL+1,w
  2333  0317  00A1               	movwf	LCD_PRINT_WP@x+1
  2334  0318  3002               	movlw	2
  2335  0319  00A2               	movwf	LCD_PRINT_WP@y
  2336  031A  3000               	movlw	0
  2337  031B  00A3               	movwf	LCD_PRINT_WP@y+1
  2338  031C  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2339  031D  00AB               	movwf	??_VAL+2
  2340  031E  082B               	movf	??_VAL+2,w
  2341  031F  00A4               	movwf	LCD_PRINT_WP@frase
  2342  0320  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2343  0325                     l1705:	
  2344  0325  3006               	movlw	6
  2345  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0328  063E               	xorwf	VAL@valor,w
  2348  0329  1D03               	btfss	3,2
  2349  032A  2B2C               	goto	u1401
  2350  032B  2B2D               	goto	u1400
  2351  032C                     u1401:	
  2352  032C  2B41               	goto	l1709
  2353  032D                     u1400:	
  2354  032D                     l1707:	
  2355  032D  083F               	movf	VAL@coordenada,w
  2356  032E  00A9               	movwf	??_VAL
  2357  032F  01AA               	clrf	??_VAL+1
  2358  0330  0829               	movf	??_VAL,w
  2359  0331  00A0               	movwf	LCD_PRINT_WP@x
  2360  0332  082A               	movf	??_VAL+1,w
  2361  0333  00A1               	movwf	LCD_PRINT_WP@x+1
  2362  0334  3002               	movlw	2
  2363  0335  00A2               	movwf	LCD_PRINT_WP@y
  2364  0336  3000               	movlw	0
  2365  0337  00A3               	movwf	LCD_PRINT_WP@y+1
  2366  0338  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2367  0339  00AB               	movwf	??_VAL+2
  2368  033A  082B               	movf	??_VAL+2,w
  2369  033B  00A4               	movwf	LCD_PRINT_WP@frase
  2370  033C  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2371  0341                     l1709:	
  2372  0341  3007               	movlw	7
  2373  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0344  063E               	xorwf	VAL@valor,w
  2376  0345  1D03               	btfss	3,2
  2377  0346  2B48               	goto	u1411
  2378  0347  2B49               	goto	u1410
  2379  0348                     u1411:	
  2380  0348  2B5D               	goto	l1713
  2381  0349                     u1410:	
  2382  0349                     l1711:	
  2383  0349  083F               	movf	VAL@coordenada,w
  2384  034A  00A9               	movwf	??_VAL
  2385  034B  01AA               	clrf	??_VAL+1
  2386  034C  0829               	movf	??_VAL,w
  2387  034D  00A0               	movwf	LCD_PRINT_WP@x
  2388  034E  082A               	movf	??_VAL+1,w
  2389  034F  00A1               	movwf	LCD_PRINT_WP@x+1
  2390  0350  3002               	movlw	2
  2391  0351  00A2               	movwf	LCD_PRINT_WP@y
  2392  0352  3000               	movlw	0
  2393  0353  00A3               	movwf	LCD_PRINT_WP@y+1
  2394  0354  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2395  0355  00AB               	movwf	??_VAL+2
  2396  0356  082B               	movf	??_VAL+2,w
  2397  0357  00A4               	movwf	LCD_PRINT_WP@frase
  2398  0358  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2399  035D                     l1713:	
  2400  035D  3008               	movlw	8
  2401  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2402  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0360  063E               	xorwf	VAL@valor,w
  2404  0361  1D03               	btfss	3,2
  2405  0362  2B64               	goto	u1421
  2406  0363  2B65               	goto	u1420
  2407  0364                     u1421:	
  2408  0364  2B79               	goto	l1717
  2409  0365                     u1420:	
  2410  0365                     l1715:	
  2411  0365  083F               	movf	VAL@coordenada,w
  2412  0366  00A9               	movwf	??_VAL
  2413  0367  01AA               	clrf	??_VAL+1
  2414  0368  0829               	movf	??_VAL,w
  2415  0369  00A0               	movwf	LCD_PRINT_WP@x
  2416  036A  082A               	movf	??_VAL+1,w
  2417  036B  00A1               	movwf	LCD_PRINT_WP@x+1
  2418  036C  3002               	movlw	2
  2419  036D  00A2               	movwf	LCD_PRINT_WP@y
  2420  036E  3000               	movlw	0
  2421  036F  00A3               	movwf	LCD_PRINT_WP@y+1
  2422  0370  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2423  0371  00AB               	movwf	??_VAL+2
  2424  0372  082B               	movf	??_VAL+2,w
  2425  0373  00A4               	movwf	LCD_PRINT_WP@frase
  2426  0374  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2427  0379                     l1717:	
  2428  0379  3009               	movlw	9
  2429  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2430  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2431  037C  063E               	xorwf	VAL@valor,w
  2432  037D  1D03               	btfss	3,2
  2433  037E  2B80               	goto	u1431
  2434  037F  2B81               	goto	u1430
  2435  0380                     u1431:	
  2436  0380  2B95               	goto	l1721
  2437  0381                     u1430:	
  2438  0381                     l1719:	
  2439  0381  083F               	movf	VAL@coordenada,w
  2440  0382  00A9               	movwf	??_VAL
  2441  0383  01AA               	clrf	??_VAL+1
  2442  0384  0829               	movf	??_VAL,w
  2443  0385  00A0               	movwf	LCD_PRINT_WP@x
  2444  0386  082A               	movf	??_VAL+1,w
  2445  0387  00A1               	movwf	LCD_PRINT_WP@x+1
  2446  0388  3002               	movlw	2
  2447  0389  00A2               	movwf	LCD_PRINT_WP@y
  2448  038A  3000               	movlw	0
  2449  038B  00A3               	movwf	LCD_PRINT_WP@y+1
  2450  038C  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2451  038D  00AB               	movwf	??_VAL+2
  2452  038E  082B               	movf	??_VAL+2,w
  2453  038F  00A4               	movwf	LCD_PRINT_WP@frase
  2454  0390  120A  118A  278C  120A  118A  	fcall	_LCD_PRINT_WP
  2455  0395                     l1721:	
  2456  0395  3001               	movlw	1
  2457  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0398  07BB               	addwf	VAL@i_376,f
  2460  0399  1803               	skipnc
  2461  039A  0ABC               	incf	VAL@i_376+1,f
  2462  039B  3000               	movlw	0
  2463  039C  07BC               	addwf	VAL@i_376+1,f
  2464  039D                     l1723:	
  2465  039D  083C               	movf	VAL@i_376+1,w
  2466  039E  3A80               	xorlw	128
  2467  039F  00FF               	movwf	btemp+1
  2468  03A0  3080               	movlw	128
  2469  03A1  027F               	subwf	btemp+1,w
  2470  03A2  1D03               	skipz
  2471  03A3  2BA6               	goto	u1445
  2472  03A4  3003               	movlw	3
  2473  03A5  023B               	subwf	VAL@i_376,w
  2474  03A6                     u1445:	
  2475  03A6  1C03               	skipc
  2476  03A7  2BA9               	goto	u1441
  2477  03A8  2BAA               	goto	u1440
  2478  03A9                     u1441:	
  2479  03A9  2A56               	goto	l1667
  2480  03AA                     u1440:	
  2481  03AA                     l196:	
  2482  03AA  0008               	return
  2483  03AB                     __end_of_VAL:	
  2484                           
  2485                           	psect	text3
  2486  063B                     __ptext3:	
  2487 ;; *************** function ___awmod *****************
  2488 ;; Defined at:
  2489 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  divisor         2    3[COMMON] int 
  2492 ;;  dividend        2    5[COMMON] int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  sign            1    9[COMMON] unsigned char 
  2495 ;;  counter         1    8[COMMON] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2    3[COMMON] int 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         4       0       0       0       0
  2506 ;;      Locals:         2       0       0       0       0
  2507 ;;      Temps:          1       0       0       0       0
  2508 ;;      Totals:         7       0       0       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_VAL
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function ___awmod
  2521  063B                     ___awmod:	
  2522  063B                     l1463:	
  2523                           ;incstack = 0
  2524                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2525                           
  2526  063B  01F9               	clrf	___awmod@sign
  2527  063C                     l1465:	
  2528  063C  1FF6               	btfss	___awmod@dividend+1,7
  2529  063D  2E3F               	goto	u1041
  2530  063E  2E40               	goto	u1040
  2531  063F                     u1041:	
  2532  063F  2E47               	goto	l1471
  2533  0640                     u1040:	
  2534  0640                     l1467:	
  2535  0640  09F5               	comf	___awmod@dividend,f
  2536  0641  09F6               	comf	___awmod@dividend+1,f
  2537  0642  0AF5               	incf	___awmod@dividend,f
  2538  0643  1903               	skipnz
  2539  0644  0AF6               	incf	___awmod@dividend+1,f
  2540  0645                     l1469:	
  2541  0645  01F9               	clrf	___awmod@sign
  2542  0646  0AF9               	incf	___awmod@sign,f
  2543  0647                     l1471:	
  2544  0647  1FF4               	btfss	___awmod@divisor+1,7
  2545  0648  2E4A               	goto	u1051
  2546  0649  2E4B               	goto	u1050
  2547  064A                     u1051:	
  2548  064A  2E50               	goto	l1475
  2549  064B                     u1050:	
  2550  064B                     l1473:	
  2551  064B  09F3               	comf	___awmod@divisor,f
  2552  064C  09F4               	comf	___awmod@divisor+1,f
  2553  064D  0AF3               	incf	___awmod@divisor,f
  2554  064E  1903               	skipnz
  2555  064F  0AF4               	incf	___awmod@divisor+1,f
  2556  0650                     l1475:	
  2557  0650  0873               	movf	___awmod@divisor,w
  2558  0651  0474               	iorwf	___awmod@divisor+1,w
  2559  0652  1903               	btfsc	3,2
  2560  0653  2E55               	goto	u1061
  2561  0654  2E56               	goto	u1060
  2562  0655                     u1061:	
  2563  0655  2E85               	goto	l1493
  2564  0656                     u1060:	
  2565  0656                     l1477:	
  2566  0656  01F8               	clrf	___awmod@counter
  2567  0657  0AF8               	incf	___awmod@counter,f
  2568  0658  2E64               	goto	l1483
  2569  0659                     l1479:	
  2570  0659  3001               	movlw	1
  2571  065A                     u1075:	
  2572  065A  1003               	clrc
  2573  065B  0DF3               	rlf	___awmod@divisor,f
  2574  065C  0DF4               	rlf	___awmod@divisor+1,f
  2575  065D  3EFF               	addlw	-1
  2576  065E  1D03               	skipz
  2577  065F  2E5A               	goto	u1075
  2578  0660                     l1481:	
  2579  0660  3001               	movlw	1
  2580  0661  00F7               	movwf	??___awmod
  2581  0662  0877               	movf	??___awmod,w
  2582  0663  07F8               	addwf	___awmod@counter,f
  2583  0664                     l1483:	
  2584  0664  1FF4               	btfss	___awmod@divisor+1,7
  2585  0665  2E67               	goto	u1081
  2586  0666  2E68               	goto	u1080
  2587  0667                     u1081:	
  2588  0667  2E59               	goto	l1479
  2589  0668                     u1080:	
  2590  0668                     l1485:	
  2591  0668  0874               	movf	___awmod@divisor+1,w
  2592  0669  0276               	subwf	___awmod@dividend+1,w
  2593  066A  1D03               	skipz
  2594  066B  2E6E               	goto	u1095
  2595  066C  0873               	movf	___awmod@divisor,w
  2596  066D  0275               	subwf	___awmod@dividend,w
  2597  066E                     u1095:	
  2598  066E  1C03               	skipc
  2599  066F  2E71               	goto	u1091
  2600  0670  2E72               	goto	u1090
  2601  0671                     u1091:	
  2602  0671  2E78               	goto	l1489
  2603  0672                     u1090:	
  2604  0672                     l1487:	
  2605  0672  0873               	movf	___awmod@divisor,w
  2606  0673  02F5               	subwf	___awmod@dividend,f
  2607  0674  0874               	movf	___awmod@divisor+1,w
  2608  0675  1C03               	skipc
  2609  0676  03F6               	decf	___awmod@dividend+1,f
  2610  0677  02F6               	subwf	___awmod@dividend+1,f
  2611  0678                     l1489:	
  2612  0678  3001               	movlw	1
  2613  0679                     u1105:	
  2614  0679  1003               	clrc
  2615  067A  0CF4               	rrf	___awmod@divisor+1,f
  2616  067B  0CF3               	rrf	___awmod@divisor,f
  2617  067C  3EFF               	addlw	-1
  2618  067D  1D03               	skipz
  2619  067E  2E79               	goto	u1105
  2620  067F                     l1491:	
  2621  067F  3001               	movlw	1
  2622  0680  02F8               	subwf	___awmod@counter,f
  2623  0681  1D03               	btfss	3,2
  2624  0682  2E84               	goto	u1111
  2625  0683  2E85               	goto	u1110
  2626  0684                     u1111:	
  2627  0684  2E68               	goto	l1485
  2628  0685                     u1110:	
  2629  0685                     l1493:	
  2630  0685  0879               	movf	___awmod@sign,w
  2631  0686  1903               	btfsc	3,2
  2632  0687  2E89               	goto	u1121
  2633  0688  2E8A               	goto	u1120
  2634  0689                     u1121:	
  2635  0689  2E8F               	goto	l1497
  2636  068A                     u1120:	
  2637  068A                     l1495:	
  2638  068A  09F5               	comf	___awmod@dividend,f
  2639  068B  09F6               	comf	___awmod@dividend+1,f
  2640  068C  0AF5               	incf	___awmod@dividend,f
  2641  068D  1903               	skipnz
  2642  068E  0AF6               	incf	___awmod@dividend+1,f
  2643  068F                     l1497:	
  2644  068F  0876               	movf	___awmod@dividend+1,w
  2645  0690  00F4               	movwf	?___awmod+1
  2646  0691  0875               	movf	___awmod@dividend,w
  2647  0692  00F3               	movwf	?___awmod
  2648  0693                     l469:	
  2649  0693  0008               	return
  2650  0694                     __end_of___awmod:	
  2651                           
  2652                           	psect	text4
  2653  05D2                     __ptext4:	
  2654 ;; *************** function ___awdiv *****************
  2655 ;; Defined at:
  2656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  divisor         2    0[BANK0 ] int 
  2659 ;;  dividend        2    2[BANK0 ] int 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  quotient        2    6[BANK0 ] int 
  2662 ;;  sign            1    5[BANK0 ] unsigned char 
  2663 ;;  counter         1    4[BANK0 ] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  2    0[BANK0 ] int 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       4       0       0       0
  2674 ;;      Locals:         0       4       0       0       0
  2675 ;;      Temps:          1       0       0       0       0
  2676 ;;      Totals:         1       8       0       0       0
  2677 ;;Total ram usage:        9 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_VAL
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function ___awdiv
  2689  05D2                     ___awdiv:	
  2690  05D2                     l1419:	
  2691                           ;incstack = 0
  2692                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2693                           
  2694  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2695  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2696  05D4  01A5               	clrf	___awdiv@sign
  2697  05D5                     l1421:	
  2698  05D5  1FA1               	btfss	___awdiv@divisor+1,7
  2699  05D6  2DD8               	goto	u941
  2700  05D7  2DD9               	goto	u940
  2701  05D8                     u941:	
  2702  05D8  2DE0               	goto	l1427
  2703  05D9                     u940:	
  2704  05D9                     l1423:	
  2705  05D9  09A0               	comf	___awdiv@divisor,f
  2706  05DA  09A1               	comf	___awdiv@divisor+1,f
  2707  05DB  0AA0               	incf	___awdiv@divisor,f
  2708  05DC  1903               	skipnz
  2709  05DD  0AA1               	incf	___awdiv@divisor+1,f
  2710  05DE                     l1425:	
  2711  05DE  01A5               	clrf	___awdiv@sign
  2712  05DF  0AA5               	incf	___awdiv@sign,f
  2713  05E0                     l1427:	
  2714  05E0  1FA3               	btfss	___awdiv@dividend+1,7
  2715  05E1  2DE3               	goto	u951
  2716  05E2  2DE4               	goto	u950
  2717  05E3                     u951:	
  2718  05E3  2DED               	goto	l1433
  2719  05E4                     u950:	
  2720  05E4                     l1429:	
  2721  05E4  09A2               	comf	___awdiv@dividend,f
  2722  05E5  09A3               	comf	___awdiv@dividend+1,f
  2723  05E6  0AA2               	incf	___awdiv@dividend,f
  2724  05E7  1903               	skipnz
  2725  05E8  0AA3               	incf	___awdiv@dividend+1,f
  2726  05E9                     l1431:	
  2727  05E9  3001               	movlw	1
  2728  05EA  00FA               	movwf	??___awdiv
  2729  05EB  087A               	movf	??___awdiv,w
  2730  05EC  06A5               	xorwf	___awdiv@sign,f
  2731  05ED                     l1433:	
  2732  05ED  01A6               	clrf	___awdiv@quotient
  2733  05EE  01A7               	clrf	___awdiv@quotient+1
  2734  05EF                     l1435:	
  2735  05EF  0820               	movf	___awdiv@divisor,w
  2736  05F0  0421               	iorwf	___awdiv@divisor+1,w
  2737  05F1  1903               	btfsc	3,2
  2738  05F2  2DF4               	goto	u961
  2739  05F3  2DF5               	goto	u960
  2740  05F4                     u961:	
  2741  05F4  2E2C               	goto	l1455
  2742  05F5                     u960:	
  2743  05F5                     l1437:	
  2744  05F5  01A4               	clrf	___awdiv@counter
  2745  05F6  0AA4               	incf	___awdiv@counter,f
  2746  05F7  2E03               	goto	l1443
  2747  05F8                     l1439:	
  2748  05F8  3001               	movlw	1
  2749  05F9                     u975:	
  2750  05F9  1003               	clrc
  2751  05FA  0DA0               	rlf	___awdiv@divisor,f
  2752  05FB  0DA1               	rlf	___awdiv@divisor+1,f
  2753  05FC  3EFF               	addlw	-1
  2754  05FD  1D03               	skipz
  2755  05FE  2DF9               	goto	u975
  2756  05FF                     l1441:	
  2757  05FF  3001               	movlw	1
  2758  0600  00FA               	movwf	??___awdiv
  2759  0601  087A               	movf	??___awdiv,w
  2760  0602  07A4               	addwf	___awdiv@counter,f
  2761  0603                     l1443:	
  2762  0603  1FA1               	btfss	___awdiv@divisor+1,7
  2763  0604  2E06               	goto	u981
  2764  0605  2E07               	goto	u980
  2765  0606                     u981:	
  2766  0606  2DF8               	goto	l1439
  2767  0607                     u980:	
  2768  0607                     l1445:	
  2769  0607  3001               	movlw	1
  2770  0608                     u995:	
  2771  0608  1003               	clrc
  2772  0609  0DA6               	rlf	___awdiv@quotient,f
  2773  060A  0DA7               	rlf	___awdiv@quotient+1,f
  2774  060B  3EFF               	addlw	-1
  2775  060C  1D03               	skipz
  2776  060D  2E08               	goto	u995
  2777  060E  0821               	movf	___awdiv@divisor+1,w
  2778  060F  0223               	subwf	___awdiv@dividend+1,w
  2779  0610  1D03               	skipz
  2780  0611  2E14               	goto	u1005
  2781  0612  0820               	movf	___awdiv@divisor,w
  2782  0613  0222               	subwf	___awdiv@dividend,w
  2783  0614                     u1005:	
  2784  0614  1C03               	skipc
  2785  0615  2E17               	goto	u1001
  2786  0616  2E18               	goto	u1000
  2787  0617                     u1001:	
  2788  0617  2E1F               	goto	l1451
  2789  0618                     u1000:	
  2790  0618                     l1447:	
  2791  0618  0820               	movf	___awdiv@divisor,w
  2792  0619  02A2               	subwf	___awdiv@dividend,f
  2793  061A  0821               	movf	___awdiv@divisor+1,w
  2794  061B  1C03               	skipc
  2795  061C  03A3               	decf	___awdiv@dividend+1,f
  2796  061D  02A3               	subwf	___awdiv@dividend+1,f
  2797  061E                     l1449:	
  2798  061E  1426               	bsf	___awdiv@quotient,0
  2799  061F                     l1451:	
  2800  061F  3001               	movlw	1
  2801  0620                     u1015:	
  2802  0620  1003               	clrc
  2803  0621  0CA1               	rrf	___awdiv@divisor+1,f
  2804  0622  0CA0               	rrf	___awdiv@divisor,f
  2805  0623  3EFF               	addlw	-1
  2806  0624  1D03               	skipz
  2807  0625  2E20               	goto	u1015
  2808  0626                     l1453:	
  2809  0626  3001               	movlw	1
  2810  0627  02A4               	subwf	___awdiv@counter,f
  2811  0628  1D03               	btfss	3,2
  2812  0629  2E2B               	goto	u1021
  2813  062A  2E2C               	goto	u1020
  2814  062B                     u1021:	
  2815  062B  2E07               	goto	l1445
  2816  062C                     u1020:	
  2817  062C                     l1455:	
  2818  062C  0825               	movf	___awdiv@sign,w
  2819  062D  1903               	btfsc	3,2
  2820  062E  2E30               	goto	u1031
  2821  062F  2E31               	goto	u1030
  2822  0630                     u1031:	
  2823  0630  2E36               	goto	l1459
  2824  0631                     u1030:	
  2825  0631                     l1457:	
  2826  0631  09A6               	comf	___awdiv@quotient,f
  2827  0632  09A7               	comf	___awdiv@quotient+1,f
  2828  0633  0AA6               	incf	___awdiv@quotient,f
  2829  0634  1903               	skipnz
  2830  0635  0AA7               	incf	___awdiv@quotient+1,f
  2831  0636                     l1459:	
  2832  0636  0827               	movf	___awdiv@quotient+1,w
  2833  0637  00A1               	movwf	?___awdiv+1
  2834  0638  0826               	movf	___awdiv@quotient,w
  2835  0639  00A0               	movwf	?___awdiv
  2836  063A                     l456:	
  2837  063A  0008               	return
  2838  063B                     __end_of___awdiv:	
  2839                           
  2840                           	psect	text5
  2841  078C                     __ptext5:	
  2842 ;; *************** function _LCD_PRINT_WP *****************
  2843 ;; Defined at:
  2844 ;;		line 63 in file "LCD.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  x               2    0[BANK0 ] int 
  2847 ;;  y               2    2[BANK0 ] int 
  2848 ;;  frase           1    4[BANK0 ] PTR unsigned char 
  2849 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2850 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2851 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2852 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2853 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2854 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2855 ;;		 -> STR_2(17), STR_1(17), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  location        1    5[BANK0 ] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       5       0       0       0
  2868 ;;      Locals:         0       1       0       0       0
  2869 ;;      Temps:          1       0       0       0       0
  2870 ;;      Totals:         1       6       0       0       0
  2871 ;;Total ram usage:        7 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    5
  2874 ;; This function calls:
  2875 ;;		_LCD_CONTROL
  2876 ;;		_LCD_PRINT
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;;		_VAL
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _LCD_PRINT_WP
  2885  078C                     _LCD_PRINT_WP:	
  2886  078C                     l1365:	
  2887                           ;incstack = 0
  2888                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2889                           
  2890  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2891  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2892  078E  0322               	decf	LCD_PRINT_WP@y,w
  2893  078F  0423               	iorwf	LCD_PRINT_WP@y+1,w
  2894  0790  1D03               	btfss	3,2
  2895  0791  2F93               	goto	u831
  2896  0792  2F94               	goto	u830
  2897  0793                     u831:	
  2898  0793  2F9A               	goto	l1369
  2899  0794                     u830:	
  2900  0794                     l1367:	
  2901  0794  0820               	movf	LCD_PRINT_WP@x,w
  2902  0795  3E80               	addlw	128
  2903  0796  00FA               	movwf	??_LCD_PRINT_WP
  2904  0797  087A               	movf	??_LCD_PRINT_WP,w
  2905  0798  00A5               	movwf	LCD_PRINT_WP@location
  2906  0799  2F9F               	goto	l1375
  2907  079A                     l1369:	
  2908  079A                     l1371:	
  2909  079A  0820               	movf	LCD_PRINT_WP@x,w
  2910  079B  3EC0               	addlw	192
  2911  079C  00FA               	movwf	??_LCD_PRINT_WP
  2912  079D  087A               	movf	??_LCD_PRINT_WP,w
  2913  079E  00A5               	movwf	LCD_PRINT_WP@location
  2914  079F                     l1375:	
  2915  079F  0825               	movf	LCD_PRINT_WP@location,w
  2916  07A0  120A  158A  27DC  120A  118A  	fcall	_LCD_CONTROL
  2917  07A5                     l1377:	
  2918  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  2919  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  2920  07A7  0824               	movf	LCD_PRINT_WP@frase,w
  2921  07A8  120A  118A  27AE  120A  118A  	fcall	_LCD_PRINT
  2922  07AD                     l158:	
  2923  07AD  0008               	return
  2924  07AE                     __end_of_LCD_PRINT_WP:	
  2925                           
  2926                           	psect	text6
  2927  07AE                     __ptext6:	
  2928 ;; *************** function _LCD_PRINT *****************
  2929 ;; Defined at:
  2930 ;;		line 56 in file "LCD.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  data            1    wreg     PTR unsigned char 
  2933 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2934 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2935 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2936 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2937 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2938 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2939 ;;		 -> STR_2(17), STR_1(17), 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  data            1    9[COMMON] PTR unsigned char 
  2942 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2943 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2944 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2945 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2946 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2947 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2948 ;;		 -> STR_2(17), STR_1(17), 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         1       0       0       0       0
  2960 ;;      Temps:          1       0       0       0       0
  2961 ;;      Totals:         2       0       0       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    4
  2965 ;; This function calls:
  2966 ;;		_LCD_DATO
  2967 ;; This function is called by:
  2968 ;;		_LCD_PRINT_WP
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _LCD_PRINT
  2974  07AE                     _LCD_PRINT:	
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2978                           ;LCD_PRINT@data stored from wreg
  2979  07AE  00F9               	movwf	LCD_PRINT@data
  2980  07AF                     l1357:	
  2981  07AF  2FC0               	goto	l1363
  2982  07B0                     l1359:	
  2983  07B0  0879               	movf	LCD_PRINT@data,w
  2984  07B1  0084               	movwf	4
  2985  07B2  120A  118A  2556  120A  118A  	fcall	stringdir
  2986  07B7  120A  158A  27EE  120A  118A  	fcall	_LCD_DATO
  2987  07BC                     l1361:	
  2988  07BC  3001               	movlw	1
  2989  07BD  00F8               	movwf	??_LCD_PRINT
  2990  07BE  0878               	movf	??_LCD_PRINT,w
  2991  07BF  07F9               	addwf	LCD_PRINT@data,f
  2992  07C0                     l1363:	
  2993  07C0  0879               	movf	LCD_PRINT@data,w
  2994  07C1  0084               	movwf	4
  2995  07C2  120A  118A  2556  120A  118A  	fcall	stringdir
  2996  07C7  3A00               	xorlw	0
  2997  07C8  1D03               	skipz
  2998  07C9  2FCB               	goto	u821
  2999  07CA  2FCC               	goto	u820
  3000  07CB                     u821:	
  3001  07CB  2FB0               	goto	l1359
  3002  07CC                     u820:	
  3003  07CC                     l148:	
  3004  07CC  0008               	return
  3005  07CD                     __end_of_LCD_PRINT:	
  3006                           
  3007                           	psect	text7
  3008  0FEE                     __ptext7:	
  3009 ;; *************** function _LCD_DATO *****************
  3010 ;; Defined at:
  3011 ;;		line 45 in file "LCD.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  comando         1    wreg     unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  comando         1    7[COMMON] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         1       0       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    3
  3032 ;; This function calls:
  3033 ;;		_LCD_PULSE
  3034 ;;		_delay_us
  3035 ;; This function is called by:
  3036 ;;		_LCD_PRINT
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _LCD_DATO
  3042  0FEE                     _LCD_DATO:	
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  3046                           ;LCD_DATO@comando stored from wreg
  3047  0FEE  00F7               	movwf	LCD_DATO@comando
  3048  0FEF                     l1341:	
  3049  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0FF1  1409               	bsf	9,0	;volatile
  3052  0FF2                     l1343:	
  3053  0FF2  0877               	movf	LCD_DATO@comando,w
  3054  0FF3  0088               	movwf	8	;volatile
  3055  0FF4                     l1345:	
  3056  0FF4  120A  118A  27E6  120A  158A  	fcall	_LCD_PULSE
  3057  0FF9                     l1347:	
  3058  0FF9  3032               	movlw	50
  3059  0FFA  120A  118A  27CD  120A  158A  	fcall	_delay_us
  3060  0FFF                     l139:	
  3061  0FFF  0008               	return
  3062  1000                     __end_of_LCD_DATO:	
  3063                           
  3064                           	psect	text8
  3065  07F9                     __ptext8:	
  3066 ;; *************** function _LCD_RH *****************
  3067 ;; Defined at:
  3068 ;;		line 61 in file "LCD.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    4
  3089 ;; This function calls:
  3090 ;;		_LCD_CONTROL
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _LCD_RH
  3098  07F9                     _LCD_RH:	
  3099  07F9                     l1559:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3102                           
  3103  07F9  3002               	movlw	2
  3104  07FA  120A  158A  27DC  120A  118A  	fcall	_LCD_CONTROL
  3105  07FF                     l151:	
  3106  07FF  0008               	return
  3107  0800                     __end_of_LCD_RH:	
  3108                           
  3109                           	psect	text9
  3110  0FC6                     __ptext9:	
  3111 ;; *************** function _LCD_CLEAR *****************
  3112 ;; Defined at:
  3113 ;;		line 52 in file "LCD.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    4
  3134 ;; This function calls:
  3135 ;;		_LCD_CONTROL
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _LCD_CLEAR
  3143  0FC6                     _LCD_CLEAR:	
  3144  0FC6                     l1557:	
  3145                           ;incstack = 0
  3146                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3147                           
  3148  0FC6  3001               	movlw	1
  3149  0FC7  120A  158A  27DC  120A  158A  	fcall	_LCD_CONTROL
  3150  0FCC                     l142:	
  3151  0FCC  0008               	return
  3152  0FCD                     __end_of_LCD_CLEAR:	
  3153                           
  3154                           	psect	text10
  3155  073F                     __ptext10:	
  3156 ;; *************** function _INIT_LCD *****************
  3157 ;; Defined at:
  3158 ;;		line 20 in file "LCD.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    4
  3179 ;; This function calls:
  3180 ;;		_LCD_CONTROL
  3181 ;;		_delay_ms
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _INIT_LCD
  3189  073F                     _INIT_LCD:	
  3190  073F                     l1539:	
  3191                           ;incstack = 0
  3192                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3193                           
  3194  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3196  0741  1009               	bcf	9,0	;volatile
  3197  0742  1089               	bcf	9,1	;volatile
  3198  0743                     l1541:	
  3199  0743  0188               	clrf	8	;volatile
  3200  0744                     l1543:	
  3201  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0746  1009               	bcf	9,0	;volatile
  3204  0747                     l1545:	
  3205  0747  1089               	bcf	9,1	;volatile
  3206  0748  0188               	clrf	8	;volatile
  3207  0749                     l1547:	
  3208  0749  3032               	movlw	50
  3209  074A  120A  118A  2712  120A  118A  	fcall	_delay_ms
  3210  074F                     l1549:	
  3211  074F  3002               	movlw	2
  3212  0750  120A  158A  27DC  120A  118A  	fcall	_LCD_CONTROL
  3213  0755                     l1551:	
  3214  0755  3038               	movlw	56
  3215  0756  120A  158A  27DC  120A  118A  	fcall	_LCD_CONTROL
  3216  075B                     l1553:	
  3217  075B  300C               	movlw	12
  3218  075C  120A  158A  27DC  120A  118A  	fcall	_LCD_CONTROL
  3219  0761                     l1555:	
  3220  0761  3006               	movlw	6
  3221  0762  120A  158A  27DC  120A  118A  	fcall	_LCD_CONTROL
  3222  0767                     l130:	
  3223  0767  0008               	return
  3224  0768                     __end_of_INIT_LCD:	
  3225                           
  3226                           	psect	text11
  3227  0FDC                     __ptext11:	
  3228 ;; *************** function _LCD_CONTROL *****************
  3229 ;; Defined at:
  3230 ;;		line 33 in file "LCD.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  dato            1    wreg     unsigned char 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  dato            1    9[COMMON] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         1       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         1       0       0       0       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    3
  3251 ;; This function calls:
  3252 ;;		_LCD_PULSE
  3253 ;;		_delay_ms
  3254 ;; This function is called by:
  3255 ;;		_INIT_LCD
  3256 ;;		_LCD_CLEAR
  3257 ;;		_LCD_RH
  3258 ;;		_LCD_PRINT_WP
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _LCD_CONTROL
  3264  0FDC                     _LCD_CONTROL:	
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3268                           ;LCD_CONTROL@dato stored from wreg
  3269  0FDC  00F9               	movwf	LCD_CONTROL@dato
  3270  0FDD                     l1349:	
  3271  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0FDF  1009               	bcf	9,0	;volatile
  3274  0FE0                     l1351:	
  3275  0FE0  0879               	movf	LCD_CONTROL@dato,w
  3276  0FE1  0088               	movwf	8	;volatile
  3277  0FE2                     l1353:	
  3278  0FE2  120A  118A  27E6  120A  158A  	fcall	_LCD_PULSE
  3279  0FE7                     l1355:	
  3280  0FE7  3002               	movlw	2
  3281  0FE8  120A  118A  2712  120A  158A  	fcall	_delay_ms
  3282  0FED                     l133:	
  3283  0FED  0008               	return
  3284  0FEE                     __end_of_LCD_CONTROL:	
  3285                           
  3286                           	psect	text12
  3287  0712                     __ptext12:	
  3288 ;; *************** function _delay_ms *****************
  3289 ;; Defined at:
  3290 ;;		line 17 in file "DELAYS.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  dms             1    wreg     unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  dms             1    4[COMMON] unsigned char 
  3295 ;;  j               2    7[COMMON] int 
  3296 ;;  i               2    5[COMMON] int 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, btemp+1
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       0       0       0       0
  3307 ;;      Locals:         5       0       0       0       0
  3308 ;;      Temps:          1       0       0       0       0
  3309 ;;      Totals:         6       0       0       0       0
  3310 ;;Total ram usage:        6 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;;		_INIT_LCD
  3318 ;;		_LCD_CONTROL
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _delay_ms
  3324  0712                     _delay_ms:	
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  3328                           ;delay_ms@dms stored from wreg
  3329  0712  00F4               	movwf	delay_ms@dms
  3330  0713                     l1327:	
  3331                           
  3332                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++);DELAYS.c: 18:     for (int i = 0; i<dms;i+
      +                          +)
  3333  0713  01F5               	clrf	delay_ms@i
  3334  0714  01F6               	clrf	delay_ms@i+1
  3335  0715  2F31               	goto	l93
  3336  0716                     l1329:	
  3337                           
  3338                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}};DELAYS.c: 19:     {for (int j = 0; j
      +                          <255 ;j++){}}}
  3339  0716  01F7               	clrf	delay_ms@j
  3340  0717  01F8               	clrf	delay_ms@j+1
  3341  0718                     l1335:	
  3342  0718  3001               	movlw	1
  3343  0719  07F7               	addwf	delay_ms@j,f
  3344  071A  1803               	skipnc
  3345  071B  0AF8               	incf	delay_ms@j+1,f
  3346  071C  3000               	movlw	0
  3347  071D  07F8               	addwf	delay_ms@j+1,f
  3348  071E                     l1337:	
  3349  071E  0878               	movf	delay_ms@j+1,w
  3350  071F  3A80               	xorlw	128
  3351  0720  00FF               	movwf	btemp+1
  3352  0721  3080               	movlw	128
  3353  0722  027F               	subwf	btemp+1,w
  3354  0723  1D03               	skipz
  3355  0724  2F27               	goto	u805
  3356  0725  30FF               	movlw	255
  3357  0726  0277               	subwf	delay_ms@j,w
  3358  0727                     u805:	
  3359  0727  1C03               	skipc
  3360  0728  2F2A               	goto	u801
  3361  0729  2F2B               	goto	u800
  3362  072A                     u801:	
  3363  072A  2F18               	goto	l1335
  3364  072B                     u800:	
  3365  072B                     l1339:	
  3366  072B  3001               	movlw	1
  3367  072C  07F5               	addwf	delay_ms@i,f
  3368  072D  1803               	skipnc
  3369  072E  0AF6               	incf	delay_ms@i+1,f
  3370  072F  3000               	movlw	0
  3371  0730  07F6               	addwf	delay_ms@i+1,f
  3372  0731                     l93:	
  3373  0731  0876               	movf	delay_ms@i+1,w
  3374  0732  3A80               	xorlw	128
  3375  0733  00F3               	movwf	??_delay_ms
  3376  0734  3080               	movlw	128
  3377  0735  0273               	subwf	??_delay_ms,w
  3378  0736  1D03               	skipz
  3379  0737  2F3A               	goto	u815
  3380  0738  0874               	movf	delay_ms@dms,w
  3381  0739  0275               	subwf	delay_ms@i,w
  3382  073A                     u815:	
  3383  073A  1C03               	skipc
  3384  073B  2F3D               	goto	u811
  3385  073C  2F3E               	goto	u810
  3386  073D                     u811:	
  3387  073D  2F16               	goto	l1329
  3388  073E                     u810:	
  3389  073E                     l98:	
  3390  073E  0008               	return
  3391  073F                     __end_of_delay_ms:	
  3392                           
  3393                           	psect	text13
  3394  07E6                     __ptext13:	
  3395 ;; *************** function _LCD_PULSE *****************
  3396 ;; Defined at:
  3397 ;;		line 39 in file "LCD.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		_delay_us
  3420 ;; This function is called by:
  3421 ;;		_LCD_CONTROL
  3422 ;;		_LCD_DATO
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function _LCD_PULSE
  3428  07E6                     _LCD_PULSE:	
  3429  07E6                     l1321:	
  3430                           ;incstack = 0
  3431                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  3432                           
  3433  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  3434  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  3435  07E8  1489               	bsf	9,1	;volatile
  3436  07E9                     l1323:	
  3437  07E9  3005               	movlw	5
  3438  07EA  120A  118A  27CD  120A  118A  	fcall	_delay_us
  3439  07EF                     l1325:	
  3440  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  3441  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  3442  07F1  1089               	bcf	9,1	;volatile
  3443  07F2  3005               	movlw	5
  3444  07F3  120A  118A  27CD  120A  118A  	fcall	_delay_us
  3445  07F8                     l136:	
  3446  07F8  0008               	return
  3447  07F9                     __end_of_LCD_PULSE:	
  3448                           
  3449                           	psect	text14
  3450  07CD                     __ptext14:	
  3451 ;; *************** function _delay_us *****************
  3452 ;; Defined at:
  3453 ;;		line 22 in file "DELAYS.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  ams             1    wreg     unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  ams             1    4[COMMON] unsigned char 
  3458 ;;  j               2    5[COMMON] int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         0       0       0       0       0
  3469 ;;      Locals:         3       0       0       0       0
  3470 ;;      Temps:          1       0       0       0       0
  3471 ;;      Totals:         4       0       0       0       0
  3472 ;;Total ram usage:        4 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_LCD_PULSE
  3479 ;;		_LCD_DATO
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _delay_us
  3485  07CD                     _delay_us:	
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in _delay_us: [wreg+status,2]
  3489                           ;delay_us@ams stored from wreg
  3490  07CD  00F4               	movwf	delay_us@ams
  3491  07CE                     l1317:	
  3492                           
  3493                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){;DELAYS.c: 23:     for (int j = 0; j<ams;j
      +                          ++){
  3494  07CE  01F5               	clrf	delay_us@j
  3495  07CF  01F6               	clrf	delay_us@j+1
  3496  07D0  2FD8               	goto	l101
  3497  07D1                     l102:	
  3498  07D1  0000               	nop	;# 
  3499  07D2                     l1319:	
  3500  07D2  3001               	movlw	1
  3501  07D3  07F5               	addwf	delay_us@j,f
  3502  07D4  1803               	skipnc
  3503  07D5  0AF6               	incf	delay_us@j+1,f
  3504  07D6  3000               	movlw	0
  3505  07D7  07F6               	addwf	delay_us@j+1,f
  3506  07D8                     l101:	
  3507  07D8  0876               	movf	delay_us@j+1,w
  3508  07D9  3A80               	xorlw	128
  3509  07DA  00F3               	movwf	??_delay_us
  3510  07DB  3080               	movlw	128
  3511  07DC  0273               	subwf	??_delay_us,w
  3512  07DD  1D03               	skipz
  3513  07DE  2FE1               	goto	u795
  3514  07DF  0874               	movf	delay_us@ams,w
  3515  07E0  0275               	subwf	delay_us@j,w
  3516  07E1                     u795:	
  3517  07E1  1C03               	skipc
  3518  07E2  2FE4               	goto	u791
  3519  07E3  2FE5               	goto	u790
  3520  07E4                     u791:	
  3521  07E4  2FD1               	goto	l102
  3522  07E5                     u790:	
  3523  07E5                     l104:	
  3524  07E5  0008               	return
  3525  07E6                     __end_of_delay_us:	
  3526                           
  3527                           	psect	text15
  3528  0694                     __ptext15:	
  3529 ;; *************** function _CONFIG_USART *****************
  3530 ;; Defined at:
  3531 ;;		line 4 in file "USART.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  BAUD            4    7[BANK0 ] long 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         0       4       0       0       0
  3546 ;;      Locals:         0       4       0       0       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         0       8       0       0       0
  3549 ;;Total ram usage:        8 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    2
  3552 ;; This function calls:
  3553 ;;		___aldiv
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _CONFIG_USART
  3561  0694                     _CONFIG_USART:	
  3562  0694                     l1561:	
  3563                           ;incstack = 0
  3564                           ; Regs used in _CONFIG_USART: [wreg+status,2+status,0+pclath+cstack]
  3565                           
  3566                           
  3567                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  3568  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3569  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3570  0696  1307               	bcf	7,6	;volatile
  3571                           
  3572                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  3573  0697  1787               	bsf	7,7	;volatile
  3574                           
  3575                           ;USART.c: 7:     TXSTAbits.SYNC = 0;
  3576  0698  1218               	bcf	24,4	;volatile
  3577                           
  3578                           ;USART.c: 8:     RCSTAbits.SPEN = 1;
  3579  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3580  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3581  069B  1798               	bsf	24,7	;volatile
  3582                           
  3583                           ;USART.c: 9:     TXSTAbits.BRGH = 0;
  3584  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3585  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3586  069E  1118               	bcf	24,2	;volatile
  3587                           
  3588                           ;USART.c: 10:     TXSTAbits.TX9 = 0;
  3589  069F  1318               	bcf	24,6	;volatile
  3590                           
  3591                           ;USART.c: 11:     TXSTAbits.TXEN = 1;
  3592  06A0  1698               	bsf	24,5	;volatile
  3593                           
  3594                           ;USART.c: 12:     RCSTAbits.RC9 = 0;
  3595  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3596  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3597  06A3  1318               	bcf	24,6	;volatile
  3598                           
  3599                           ;USART.c: 13:     RCSTAbits.CREN = 1;
  3600  06A4  1618               	bsf	24,4	;volatile
  3601  06A5                     l1563:	
  3602                           
  3603                           ;USART.c: 14:     SPBRG = (unsigned char)(((4000000/BAUD)/(64))-1);}
  3604  06A5  082A               	movf	CONFIG_USART@BAUD+3,w
  3605  06A6  00F6               	movwf	___aldiv@divisor+3
  3606  06A7  0829               	movf	CONFIG_USART@BAUD+2,w
  3607  06A8  00F5               	movwf	___aldiv@divisor+2
  3608  06A9  0828               	movf	CONFIG_USART@BAUD+1,w
  3609  06AA  00F4               	movwf	___aldiv@divisor+1
  3610  06AB  0827               	movf	CONFIG_USART@BAUD,w
  3611  06AC  00F3               	movwf	___aldiv@divisor
  3612  06AD  3000               	movlw	0
  3613  06AE  00FA               	movwf	___aldiv@dividend+3
  3614  06AF  303D               	movlw	61
  3615  06B0  00F9               	movwf	___aldiv@dividend+2
  3616  06B1  3009               	movlw	9
  3617  06B2  00F8               	movwf	___aldiv@dividend+1
  3618  06B3  3000               	movlw	0
  3619  06B4  00F7               	movwf	___aldiv@dividend
  3620  06B5  120A  118A  24B9  120A  118A  	fcall	___aldiv
  3621  06BA  0876               	movf	?___aldiv+3,w
  3622  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3623  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3624  06BD  00AE               	movwf	_CONFIG_USART$1118+3
  3625  06BE  0875               	movf	?___aldiv+2,w
  3626  06BF  00AD               	movwf	_CONFIG_USART$1118+2
  3627  06C0  0874               	movf	?___aldiv+1,w
  3628  06C1  00AC               	movwf	_CONFIG_USART$1118+1
  3629  06C2  0873               	movf	?___aldiv,w
  3630  06C3  00AB               	movwf	_CONFIG_USART$1118
  3631                           
  3632                           ;USART.c: 14:     SPBRG = (unsigned char)(((4000000/BAUD)/(64))-1);}
  3633  06C4  3000               	movlw	0
  3634  06C5  00F6               	movwf	___aldiv@divisor+3
  3635  06C6  3000               	movlw	0
  3636  06C7  00F5               	movwf	___aldiv@divisor+2
  3637  06C8  3000               	movlw	0
  3638  06C9  00F4               	movwf	___aldiv@divisor+1
  3639  06CA  3040               	movlw	64
  3640  06CB  00F3               	movwf	___aldiv@divisor
  3641  06CC  082E               	movf	_CONFIG_USART$1118+3,w
  3642  06CD  00FA               	movwf	___aldiv@dividend+3
  3643  06CE  082D               	movf	_CONFIG_USART$1118+2,w
  3644  06CF  00F9               	movwf	___aldiv@dividend+2
  3645  06D0  082C               	movf	_CONFIG_USART$1118+1,w
  3646  06D1  00F8               	movwf	___aldiv@dividend+1
  3647  06D2  082B               	movf	_CONFIG_USART$1118,w
  3648  06D3  00F7               	movwf	___aldiv@dividend
  3649  06D4  120A  118A  24B9  120A  118A  	fcall	___aldiv
  3650  06D9  0873               	movf	?___aldiv,w
  3651  06DA  3EFF               	addlw	255
  3652  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3653  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3654  06DD  0099               	movwf	25	;volatile
  3655  06DE                     l211:	
  3656  06DE  0008               	return
  3657  06DF                     __end_of_CONFIG_USART:	
  3658                           
  3659                           	psect	text16
  3660  04B9                     __ptext16:	
  3661 ;; *************** function ___aldiv *****************
  3662 ;; Defined at:
  3663 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  divisor         4    3[COMMON] long 
  3666 ;;  dividend        4    7[COMMON] long 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  quotient        4    3[BANK0 ] long 
  3669 ;;  sign            1    2[BANK0 ] unsigned char 
  3670 ;;  counter         1    1[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  4    3[COMMON] long 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         8       0       0       0       0
  3681 ;;      Locals:         0       6       0       0       0
  3682 ;;      Temps:          0       1       0       0       0
  3683 ;;      Totals:         8       7       0       0       0
  3684 ;;Total ram usage:       15 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_CONFIG_USART
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function ___aldiv
  3696  04B9                     ___aldiv:	
  3697  04B9                     l1379:	
  3698                           ;incstack = 0
  3699                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3700                           
  3701  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3702  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3703  04BB  01A2               	clrf	___aldiv@sign
  3704  04BC                     l1381:	
  3705  04BC  1FF6               	btfss	___aldiv@divisor+3,7
  3706  04BD  2CBF               	goto	u841
  3707  04BE  2CC0               	goto	u840
  3708  04BF                     u841:	
  3709  04BF  2CCD               	goto	l368
  3710  04C0                     u840:	
  3711  04C0                     l1383:	
  3712  04C0  09F3               	comf	___aldiv@divisor,f
  3713  04C1  09F4               	comf	___aldiv@divisor+1,f
  3714  04C2  09F5               	comf	___aldiv@divisor+2,f
  3715  04C3  09F6               	comf	___aldiv@divisor+3,f
  3716  04C4  0AF3               	incf	___aldiv@divisor,f
  3717  04C5  1903               	skipnz
  3718  04C6  0AF4               	incf	___aldiv@divisor+1,f
  3719  04C7  1903               	skipnz
  3720  04C8  0AF5               	incf	___aldiv@divisor+2,f
  3721  04C9  1903               	skipnz
  3722  04CA  0AF6               	incf	___aldiv@divisor+3,f
  3723  04CB  01A2               	clrf	___aldiv@sign
  3724  04CC  0AA2               	incf	___aldiv@sign,f
  3725  04CD                     l368:	
  3726  04CD  1FFA               	btfss	___aldiv@dividend+3,7
  3727  04CE  2CD0               	goto	u851
  3728  04CF  2CD1               	goto	u850
  3729  04D0                     u851:	
  3730  04D0  2CE0               	goto	l1389
  3731  04D1                     u850:	
  3732  04D1                     l1385:	
  3733  04D1  09F7               	comf	___aldiv@dividend,f
  3734  04D2  09F8               	comf	___aldiv@dividend+1,f
  3735  04D3  09F9               	comf	___aldiv@dividend+2,f
  3736  04D4  09FA               	comf	___aldiv@dividend+3,f
  3737  04D5  0AF7               	incf	___aldiv@dividend,f
  3738  04D6  1903               	skipnz
  3739  04D7  0AF8               	incf	___aldiv@dividend+1,f
  3740  04D8  1903               	skipnz
  3741  04D9  0AF9               	incf	___aldiv@dividend+2,f
  3742  04DA  1903               	skipnz
  3743  04DB  0AFA               	incf	___aldiv@dividend+3,f
  3744  04DC                     l1387:	
  3745  04DC  3001               	movlw	1
  3746  04DD  00A0               	movwf	??___aldiv
  3747  04DE  0820               	movf	??___aldiv,w
  3748  04DF  06A2               	xorwf	___aldiv@sign,f
  3749  04E0                     l1389:	
  3750  04E0  3000               	movlw	0
  3751  04E1  00A6               	movwf	___aldiv@quotient+3
  3752  04E2  3000               	movlw	0
  3753  04E3  00A5               	movwf	___aldiv@quotient+2
  3754  04E4  3000               	movlw	0
  3755  04E5  00A4               	movwf	___aldiv@quotient+1
  3756  04E6  3000               	movlw	0
  3757  04E7  00A3               	movwf	___aldiv@quotient
  3758  04E8                     l1391:	
  3759  04E8  0876               	movf	___aldiv@divisor+3,w
  3760  04E9  0475               	iorwf	___aldiv@divisor+2,w
  3761  04EA  0474               	iorwf	___aldiv@divisor+1,w
  3762  04EB  0473               	iorwf	___aldiv@divisor,w
  3763  04EC  1903               	skipnz
  3764  04ED  2CEF               	goto	u861
  3765  04EE  2CF0               	goto	u860
  3766  04EF                     u861:	
  3767  04EF  2D3D               	goto	l1411
  3768  04F0                     u860:	
  3769  04F0                     l1393:	
  3770  04F0  01A1               	clrf	___aldiv@counter
  3771  04F1  0AA1               	incf	___aldiv@counter,f
  3772  04F2  2D00               	goto	l1397
  3773  04F3                     l1395:	
  3774  04F3  3001               	movlw	1
  3775  04F4  00A0               	movwf	??___aldiv
  3776  04F5                     u875:	
  3777  04F5  1003               	clrc
  3778  04F6  0DF3               	rlf	___aldiv@divisor,f
  3779  04F7  0DF4               	rlf	___aldiv@divisor+1,f
  3780  04F8  0DF5               	rlf	___aldiv@divisor+2,f
  3781  04F9  0DF6               	rlf	___aldiv@divisor+3,f
  3782  04FA  0BA0               	decfsz	??___aldiv,f
  3783  04FB  2CF5               	goto	u875
  3784  04FC  3001               	movlw	1
  3785  04FD  00A0               	movwf	??___aldiv
  3786  04FE  0820               	movf	??___aldiv,w
  3787  04FF  07A1               	addwf	___aldiv@counter,f
  3788  0500                     l1397:	
  3789  0500  1FF6               	btfss	___aldiv@divisor+3,7
  3790  0501  2D03               	goto	u881
  3791  0502  2D04               	goto	u880
  3792  0503                     u881:	
  3793  0503  2CF3               	goto	l1395
  3794  0504                     u880:	
  3795  0504                     l1399:	
  3796  0504  3001               	movlw	1
  3797  0505  00A0               	movwf	??___aldiv
  3798  0506                     u895:	
  3799  0506  1003               	clrc
  3800  0507  0DA3               	rlf	___aldiv@quotient,f
  3801  0508  0DA4               	rlf	___aldiv@quotient+1,f
  3802  0509  0DA5               	rlf	___aldiv@quotient+2,f
  3803  050A  0DA6               	rlf	___aldiv@quotient+3,f
  3804  050B  0BA0               	decfsz	??___aldiv,f
  3805  050C  2D06               	goto	u895
  3806  050D                     l1401:	
  3807  050D  0876               	movf	___aldiv@divisor+3,w
  3808  050E  027A               	subwf	___aldiv@dividend+3,w
  3809  050F  1D03               	skipz
  3810  0510  2D1B               	goto	u905
  3811  0511  0875               	movf	___aldiv@divisor+2,w
  3812  0512  0279               	subwf	___aldiv@dividend+2,w
  3813  0513  1D03               	skipz
  3814  0514  2D1B               	goto	u905
  3815  0515  0874               	movf	___aldiv@divisor+1,w
  3816  0516  0278               	subwf	___aldiv@dividend+1,w
  3817  0517  1D03               	skipz
  3818  0518  2D1B               	goto	u905
  3819  0519  0873               	movf	___aldiv@divisor,w
  3820  051A  0277               	subwf	___aldiv@dividend,w
  3821  051B                     u905:	
  3822  051B  1C03               	skipc
  3823  051C  2D1E               	goto	u901
  3824  051D  2D1F               	goto	u900
  3825  051E                     u901:	
  3826  051E  2D2E               	goto	l1407
  3827  051F                     u900:	
  3828  051F                     l1403:	
  3829  051F  0873               	movf	___aldiv@divisor,w
  3830  0520  02F7               	subwf	___aldiv@dividend,f
  3831  0521  0874               	movf	___aldiv@divisor+1,w
  3832  0522  1C03               	skipc
  3833  0523  0F74               	incfsz	___aldiv@divisor+1,w
  3834  0524  02F8               	subwf	___aldiv@dividend+1,f
  3835  0525  0875               	movf	___aldiv@divisor+2,w
  3836  0526  1C03               	skipc
  3837  0527  0F75               	incfsz	___aldiv@divisor+2,w
  3838  0528  02F9               	subwf	___aldiv@dividend+2,f
  3839  0529  0876               	movf	___aldiv@divisor+3,w
  3840  052A  1C03               	skipc
  3841  052B  0F76               	incfsz	___aldiv@divisor+3,w
  3842  052C  02FA               	subwf	___aldiv@dividend+3,f
  3843  052D                     l1405:	
  3844  052D  1423               	bsf	___aldiv@quotient,0
  3845  052E                     l1407:	
  3846  052E  3001               	movlw	1
  3847  052F                     u915:	
  3848  052F  1003               	clrc
  3849  0530  0CF6               	rrf	___aldiv@divisor+3,f
  3850  0531  0CF5               	rrf	___aldiv@divisor+2,f
  3851  0532  0CF4               	rrf	___aldiv@divisor+1,f
  3852  0533  0CF3               	rrf	___aldiv@divisor,f
  3853  0534  3EFF               	addlw	-1
  3854  0535  1D03               	skipz
  3855  0536  2D2F               	goto	u915
  3856  0537                     l1409:	
  3857  0537  3001               	movlw	1
  3858  0538  02A1               	subwf	___aldiv@counter,f
  3859  0539  1D03               	btfss	3,2
  3860  053A  2D3C               	goto	u921
  3861  053B  2D3D               	goto	u920
  3862  053C                     u921:	
  3863  053C  2D04               	goto	l1399
  3864  053D                     u920:	
  3865  053D                     l1411:	
  3866  053D  0822               	movf	___aldiv@sign,w
  3867  053E  1903               	btfsc	3,2
  3868  053F  2D41               	goto	u931
  3869  0540  2D42               	goto	u930
  3870  0541                     u931:	
  3871  0541  2D4D               	goto	l1415
  3872  0542                     u930:	
  3873  0542                     l1413:	
  3874  0542  09A3               	comf	___aldiv@quotient,f
  3875  0543  09A4               	comf	___aldiv@quotient+1,f
  3876  0544  09A5               	comf	___aldiv@quotient+2,f
  3877  0545  09A6               	comf	___aldiv@quotient+3,f
  3878  0546  0AA3               	incf	___aldiv@quotient,f
  3879  0547  1903               	skipnz
  3880  0548  0AA4               	incf	___aldiv@quotient+1,f
  3881  0549  1903               	skipnz
  3882  054A  0AA5               	incf	___aldiv@quotient+2,f
  3883  054B  1903               	skipnz
  3884  054C  0AA6               	incf	___aldiv@quotient+3,f
  3885  054D                     l1415:	
  3886  054D  0826               	movf	___aldiv@quotient+3,w
  3887  054E  00F6               	movwf	?___aldiv+3
  3888  054F  0825               	movf	___aldiv@quotient+2,w
  3889  0550  00F5               	movwf	?___aldiv+2
  3890  0551  0824               	movf	___aldiv@quotient+1,w
  3891  0552  00F4               	movwf	?___aldiv+1
  3892  0553  0823               	movf	___aldiv@quotient,w
  3893  0554  00F3               	movwf	?___aldiv
  3894  0555                     l378:	
  3895  0555  0008               	return
  3896  0556                     __end_of___aldiv:	
  3897                           
  3898                           	psect	text17
  3899  0FCD                     __ptext17:	
  3900 ;; *************** function _CONFIG_ADC *****************
  3901 ;; Defined at:
  3902 ;;		line 15 in file "ADC.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		None
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           
  3931                           ;psect for function _CONFIG_ADC
  3932  0FCD                     _CONFIG_ADC:	
  3933  0FCD                     l1565:	
  3934                           ;incstack = 0
  3935                           ; Regs used in _CONFIG_ADC: []
  3936                           
  3937                           
  3938                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  3939  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3940  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3941  0FCF  139F               	bcf	31,7	;volatile
  3942                           
  3943                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  3944  0FD0  129F               	bcf	31,5	;volatile
  3945                           
  3946                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  3947  0FD1  121F               	bcf	31,4	;volatile
  3948                           
  3949                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  3950  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0FD4  139F               	bcf	31,7	;volatile
  3953                           
  3954                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  3955  0FD5  171F               	bsf	31,6	;volatile
  3956                           
  3957                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  3958  0FD6  129F               	bcf	31,5	;volatile
  3959                           
  3960                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  3961  0FD7  121F               	bcf	31,4	;volatile
  3962                           
  3963                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  3964  0FD8  119F               	bcf	31,3	;volatile
  3965                           
  3966                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  3967  0FD9  111F               	bcf	31,2	;volatile
  3968                           
  3969                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  3970  0FDA  141F               	bsf	31,0	;volatile
  3971  0FDB                     l111:	
  3972                           ;ADC.c: 26:     return;
  3973                           
  3974  0FDB  0008               	return
  3975  0FDC                     __end_of_CONFIG_ADC:	
  3976                           
  3977                           	psect	text18
  3978  06DF                     __ptext18:	
  3979 ;; *************** function _isr *****************
  3980 ;; Defined at:
  3981 ;;		line 32 in file "main.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3995 ;;      Params:         0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0
  3997 ;;      Temps:          3       0       0       0       0
  3998 ;;      Totals:         3       0       0       0       0
  3999 ;;Total ram usage:        3 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		Interrupt level 1
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _isr
  4010  06DF                     _isr:	
  4011  06DF                     i1l1725:	
  4012                           
  4013                           ;main.c: 33:     if (INTCONbits.T0IF == 1){
  4014  06DF  1D0B               	btfss	11,2	;volatile
  4015  06E0  2EE2               	goto	u145_21
  4016  06E1  2EE3               	goto	u145_20
  4017  06E2                     u145_21:	
  4018  06E2  2F0B               	goto	i1l72
  4019  06E3                     u145_20:	
  4020  06E3                     i1l1727:	
  4021                           
  4022                           ;main.c: 34:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  4023  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4024  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4025  06E5  084C               	movf	_cambiante,w
  4026  06E6  1D03               	btfss	3,2
  4027  06E7  2EE9               	goto	u146_21
  4028  06E8  2EEA               	goto	u146_20
  4029  06E9                     u146_21:	
  4030  06E9  2EEB               	goto	i1l1731
  4031  06EA                     u146_20:	
  4032  06EA                     i1l1729:	
  4033  06EA  151F               	bsf	31,2	;volatile
  4034  06EB                     i1l1731:	
  4035                           
  4036                           ;main.c: 35:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  4037  06EB  034C               	decf	_cambiante,w
  4038  06EC  1D03               	btfss	3,2
  4039  06ED  2EEF               	goto	u147_21
  4040  06EE  2EF0               	goto	u147_20
  4041  06EF                     u147_21:	
  4042  06EF  2EF1               	goto	i1l1735
  4043  06F0                     u147_20:	
  4044  06F0                     i1l1733:	
  4045  06F0  111F               	bcf	31,2	;volatile
  4046  06F1                     i1l1735:	
  4047                           
  4048                           ;main.c: 36:         cambiante++;
  4049  06F1  3001               	movlw	1
  4050  06F2  00F0               	movwf	??_isr
  4051  06F3  0870               	movf	??_isr,w
  4052  06F4  07CC               	addwf	_cambiante,f
  4053                           
  4054                           ;main.c: 37:         sensor++;
  4055  06F5  3001               	movlw	1
  4056  06F6  00F0               	movwf	??_isr
  4057  06F7  0870               	movf	??_isr,w
  4058  06F8  07C8               	addwf	_sensor,f
  4059  06F9                     i1l1737:	
  4060                           
  4061                           ;main.c: 38:         if (cambiante > 1){cambiante = 0;}
  4062  06F9  3002               	movlw	2
  4063  06FA  024C               	subwf	_cambiante,w
  4064  06FB  1C03               	skipc
  4065  06FC  2EFE               	goto	u148_21
  4066  06FD  2EFF               	goto	u148_20
  4067  06FE                     u148_21:	
  4068  06FE  2F00               	goto	i1l1741
  4069  06FF                     u148_20:	
  4070  06FF                     i1l1739:	
  4071  06FF  01CC               	clrf	_cambiante
  4072  0700                     i1l1741:	
  4073                           
  4074                           ;main.c: 39:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  4075  0700  189F               	btfsc	31,1	;volatile
  4076  0701  2F03               	goto	u149_21
  4077  0702  2F04               	goto	u149_20
  4078  0703                     u149_21:	
  4079  0703  2F06               	goto	i1l71
  4080  0704                     u149_20:	
  4081  0704                     i1l1743:	
  4082  0704  01CB               	clrf	_eADC
  4083  0705  0ACB               	incf	_eADC,f
  4084  0706                     i1l71:	
  4085                           
  4086                           ;main.c: 40:         INTCONbits.T0IF = 0;
  4087  0706  110B               	bcf	11,2	;volatile
  4088  0707                     i1l1745:	
  4089                           
  4090                           ;main.c: 41:         TMR0 = 130;
  4091  0707  3082               	movlw	130
  4092  0708  0081               	movwf	1	;volatile
  4093  0709                     i1l1747:	
  4094                           
  4095                           ;main.c: 42:         eADC = 1;
  4096  0709  01CB               	clrf	_eADC
  4097  070A  0ACB               	incf	_eADC,f
  4098  070B                     i1l72:	
  4099  070B  0872               	movf	??_isr+2,w
  4100  070C  008A               	movwf	10
  4101  070D  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  4102  070E  0083               	movwf	3
  4103  070F  0EFE               	swapf	btemp,f
  4104  0710  0E7E               	swapf	btemp,w
  4105  0711  0009               	retfie
  4106  0712                     __end_of_isr:	
  4107  007E                     btemp	set	126	;btemp
  4108  007E                     wtemp0	set	126
  4109                           
  4110                           	psect	intentry
  4111  0004                     __pintentry:	
  4112                           ;incstack = 0
  4113                           ; Regs used in _isr: [wreg+status,2+status,0]
  4114                           
  4115  0004                     interrupt_function:	
  4116  007E                     saved_w	set	btemp
  4117  0004  00FE               	movwf	btemp
  4118  0005  0E03               	swapf	3,w
  4119  0006  00F1               	movwf	??_isr+1
  4120  0007  080A               	movf	10,w
  4121  0008  00F2               	movwf	??_isr+2
  4122  0009  120A  118A  2EDF   	ljmp	_isr


Data Sizes:
    Strings     118
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     33      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_PRINT_WP
    _VAL->_LCD_PRINT_WP
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_RH->_LCD_CONTROL
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us
    _CONFIG_USART->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VAL
    _VAL->___awdiv
    _CONFIG_USART->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17773
                                             32 BANK0      1     1      0
                         _CONFIG_ADC
                       _CONFIG_USART
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                                _VAL
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VAL                                                 24    23      1    9947
                                              8 BANK0     24    23      1
                       _LCD_PRINT_WP
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT_WP                                         7     2      5    6437
                                             10 COMMON     1     1      0
                                              0 BANK0      6     1      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (3) _LCD_PRINT                                            2     2      0     192
                                              8 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (4) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     252
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_CONTROL                                          1     1      0     160
                                              9 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0      92
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_USART                                         8     4      4     725
                                              7 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _CONFIG_USART
     ___aldiv
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _VAL
     _LCD_PRINT_WP
       _LCD_CONTROL
         _LCD_PULSE
           _delay_us
         _delay_ms
       _LCD_PRINT
         _LCD_DATO
           _LCD_PULSE
             _delay_us
           _delay_us
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 22:21:36 2020

                       pc 0002               __CFG_CP$OFF 0000                        l90 078B  
                      l84 04B4                        l93 0731                        l98 073E  
            ___awdiv@sign 0025                        fsr 0004                       l101 07D8  
                     l102 07D1                       l111 0FDB                       l104 07E5  
                     l130 0767                       l211 06DE                       l133 0FED  
                     l142 0FCC                       l151 07FF                       l136 07F8  
                     l139 0FFF                       l148 07CC                       l158 07AD  
                     l196 03AA                       l368 04CD                       l456 063A  
                     l378 0555                       l469 0693              __CFG_CPD$OFF 0000  
                     u800 072B                       u801 072A                       u810 073E  
                     u811 073D                       u900 051F                       u820 07CC  
                     u901 051E                       u805 0727                       u821 07CB  
                     u830 0794                       _VAL 0021                       u815 073A  
                     u831 0793                       u920 053D                       u840 04C0  
                     u921 053C                       u905 051B                       u841 04BF  
                     u930 0542                       u850 04D1                       u931 0541  
                     u915 052F                       u851 04D0                       u860 04F0  
                     u940 05D9                       u861 04EF                       u941 05D8  
                     u790 07E5                       u950 05E4                       u791 07E4  
                     u951 05E3                       u880 0504                       u960 05F5  
                     u881 0503                       u961 05F4                       u875 04F5  
                     u795 07E1                       u980 0607                       u981 0606  
                     u895 0506                       u975 05F9                       u995 0608  
                     _isr 06DF                       _sen 0047                       fsr0 0004  
                     indf 0000              ___awmod@sign 0079              __CFG_LVP$OFF 0000  
                    ?_VAL 0028                      VAL@i 0039                      l1401 050D  
                    l1321 07E6                      l1403 051F                      l1411 053D  
                    l1323 07E9                      l1413 0542                      l1405 052D  
                    l1317 07CE                      l1325 07EF                      l1341 0FEF  
                    l1421 05D5                      l1501 0768                      l1415 054D  
                    l1407 052E                      l1319 07D2                      l1335 0718  
                    l1327 0713                      l1351 0FE0                      l1343 0FF2  
                    l1431 05E9                      l1423 05D9                      l1511 0776  
                    l1503 0770                      l1409 0537                      l1337 071E  
                    l1329 0716                      l1353 0FE2                      l1345 0FF4  
                    l1361 07BC                      l1441 05FF                      l1433 05ED  
                    l1425 05DE                      l1601 00FB                      l1521 077D  
                    l1513 0777                      l1505 0771                      l1339 072B  
                    l1355 0FE7                      l1347 0FF9                      l1363 07C0  
                    l1371 079A                      l1451 061F                      l1443 0603  
                    l1435 05EF                      l1427 05E0                      l1419 05D2  
                    l1611 0119                      l1603 0107                      l1531 0784  
                    l1523 0780                      l1515 077A                      l1507 0774  
                    l1381 04BC                      l1349 0FDD                      l1541 0743  
                    l1357 07AF                      l1365 078C                      l1453 0626  
                    l1445 0607                      l1437 05F5                      l1429 05E4  
                    l1701 0309                      l1621 0144                      l1613 0120  
                    l1605 010D                      l1533 0785                      l1525 0781  
                    l1517 077B                      l1509 0775                      l1391 04E8  
                    l1383 04C0                      l1551 0755                      l1543 0744  
                    l1359 07B0                      l1375 079F                      l1367 0794  
                    l1447 0618                      l1439 05F8                      l1455 062C  
                    l1471 0647                      l1463 063B                      l1711 0349  
                    l1703 0311                      l1631 0190                      l1623 0158  
                    l1615 0124                      l1607 010F                      l1535 0786  
                    l1527 0782                      l1519 077C                      l1393 04F0  
                    l1385 04D1                      l1561 0694                      l1553 075B  
                    l1545 0747                      l1377 07A5                      l1369 079A  
                    l1457 0631                      l1449 061E                      l1481 0660  
                    l1473 064B                      l1465 063C                      l1721 0395  
                    l1713 035D                      l1705 0325                      l1641 01D0  
                    l1633 0198                      l1625 0160                      l1617 0129  
                    l1609 0115                      l1537 0787                      l1529 0783  
                    l1801 0485                      l1395 04F3                      l1387 04DC  
                    l1379 04B9                      l1563 06A5                      l1555 0761  
                    l1547 0749                      l1539 073F                      l1459 0636  
                    l1491 067F                      l1483 0664                      l1475 0650  
                    l1467 0640                      l1723 039D                      l1715 0365  
                    l1707 032D                      l1651 021C                      l1643 01E4  
                    l1635 01AC                      l1627 0174                      l1619 013D  
                    l1571 002E                      l1811 049F                      l1803 0486  
                    l1565 0FCD                      l1397 0500                      l1389 04E0  
                    l1549 074F                      l1557 0FC6                      l1485 0668  
                    l1477 0656                      l1493 0685                      l1469 0645  
                    l1717 0379                      l1709 0341                      l1661 0254  
                    l1653 0224                      l1645 01EC                      l1637 01B4  
                    l1629 017C                      l1581 00AB                      l1573 002E  
                    l1813 04A7                      l1805 048C                      l1399 0504  
                    l1559 07F9                      l1495 068A                      l1487 0672  
                    l1479 0659                      l1719 0381                      l1671 0268  
                    l1655 0238                      l1647 0200                      l1639 01C8  
                    l1591 00ED                      l1583 00C1                      l1575 002F  
                    l1567 0024                      l1815 04AD                      l1807 0491  
                    l1751 03B0                      l1497 068F                      l1489 0678  
                    l1681 0281                      l1673 026C                      l1657 0240  
                    l1649 0208                      l1593 00F4                      l1585 00D6  
                    l1577 0059                      l1569 002A                      l1817 04B3  
                    l1809 0498                      l1761 03D7                      l1753 03B5  
                    l1691 02BD                      l1683 0286                      l1675 0272  
                    l1667 0256                      l1595 00F9                      l1659 024D  
                    l1587 00DF                      l1579 006F                      l1771 040B  
                    l1763 03E9                      l1755 03BA                      l1693 02D1  
                    l1685 029A                      l1677 0276                      l1669 0262  
                    l1589 00E6                      l1781 0433                      l1773 0411  
                    l1765 03EF                      l1757 03BF                      l1749 03AB  
                    l1695 02D9                      l1687 02A1                      l1679 027D  
                    l1791 0472                      l1783 0445                      l1775 0423  
                    l1767 03F4                      l1759 03D1                      l1697 02ED  
                    l1689 02B5                      l1793 0473                      l1785 0457  
                    l1777 0429                      l1769 03F9                      l1699 02F5  
                    l1795 0478                      l1787 0466                      l1779 042E  
                    l1797 047C                      l1789 046B                      l1799 0481  
                    ?_isr 0070                      STR_1 057E                      STR_2 05A0  
                    STR_3 058F                      STR_4 055C                      STR_5 05B1  
                    STR_6 056D                      STR_7 057C                      STR_8 05C2  
                    STR_9 05C4                      u1000 0618                      u1001 0617  
                    u1020 062C                      u1021 062B                      u1005 0614  
                    u1030 0631                      u1110 0685                      u1031 0630  
                    u1015 0620                      u1111 0684                      u1120 068A  
                    u1040 0640                      u1200 0144                      u1121 0689  
                    u1105 0679                      u1041 063F                      u1201 0143  
                    u1050 064B                      u1210 0160                      u1130 002A  
                    u1051 064A                      u1211 015F                      u1131 0029  
                    u1060 0656                      u1300 0254                      u1220 017C  
                    u1140 00DA                      u1061 0655                      u1301 0253  
                    u1221 017B                      u1310 0268                      u1230 0198  
                    u1150 00F9                      u1311 0267                      u1231 0197  
                    u1151 00F8                      u1080 0668                      u1400 032D  
                    u1320 0272                      u1240 01B4                      u1160 010D  
                    u1081 0667                      u1401 032C                      u1321 0271  
                    u1241 01B3                      u1161 010C                      u1090 0672  
                    u1410 0349                      u1330 027D                      u1250 01D0  
                    u1170 0115                      u1091 0671                      u1075 065A  
                    u1411 0348                      u1331 027C                      u1251 01CF  
                    u1171 0114                      u1420 0365                      u1340 0286  
                    u1260 01EC                      u1180 0120                      u1500 0472  
                    u1421 0364                      u1341 0285                      u1261 01EB  
                    u1181 011F                      u1501 0471                      u1430 0381  
                    u1350 02A1                      u1270 0208                      u1190 0129  
                    u1510 0478                      u1095 066E                      u1431 0380  
                    u1351 02A0                      u1271 0207                      u1191 0128  
                    u1511 0477                      u1440 03AA                      u1360 02BD  
                    u1280 0224                      u1520 0481                      u1441 03A9  
                    u1361 02BC                      u1281 0223                      u1521 0480  
                    u1370 02D9                      u1290 024D                      u1530 048C  
                    u1371 02D8                      u1291 024C                      u1531 048B  
                    u1380 02F5                      u1540 0491                      u1445 03A6  
                    u1381 02F4                      u1541 0490                      u1390 0311  
                    u1550 049F                      u1391 0310                      u1295 0249  
                    u1551 049E                      u1560 04B3                      u1561 04B2  
                    i1l71 0706                      i1l72 070B        __size_of_LCD_CLEAR 0007  
                    _TMR0 0001                      _eADC 004B              __CFG_WRT$OFF 0000  
          ??_LCD_PRINT_WP 007A        __size_of_LCD_PRINT 001F        __size_of_LCD_PULSE 0013  
                    _main 03AB                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F                     ??_VAL 0029  
        __end_of_LCD_DATO 1000                     ??_isr 0070      __end_of_CONFIG_USART 06DF  
        __end_of_INIT_LCD 0768           __end_of___aldiv 0556                     ?_main 0070  
         __end_of___awdiv 063B                     STR_10 058D                     STR_11 05C6  
                   STR_20 058D                     STR_12 05C8                     STR_21 05C6  
                   STR_13 05CA                     STR_22 05C8                     STR_14 05CC  
                   STR_23 05CA                     STR_15 05CE                     STR_24 05CC  
                   STR_16 05D0                     STR_17 057C                     STR_25 05CE  
           __CFG_WDTE$OFF 0000                     STR_18 05C2                     STR_26 05D0  
                   STR_19 05C4           __end_of___awmod 0694             LCD_PRINT@data 0079  
                   _ANSEL 0188           ___awdiv@divisor 0020           ___awdiv@counter 0024  
                   _RCREG 001A             LCD_PRINT_WP@x 0020             LCD_PRINT_WP@y 0022  
                   _SPBRG 0099                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
                   _setup 0768            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 04B9         _CONFIG_USART$1118 002B  
       __end_of_LCD_CLEAR 0FCD         __end_of_LCD_PRINT 07CD                    ??_main 0040  
       __end_of_LCD_PULSE 07F9                    _ADCAN0 004A                    _ADCAN1 0049  
                  _ADRESH 001E          ___awdiv@dividend 0022                    ?_setup 0070  
                  _ANSELH 0189                    _LCD_RH 07F9                    i1l1731 06EB  
                  i1l1741 0700                    i1l1733 06F0                    i1l1725 06DF  
                  i1l1743 0704                    i1l1735 06F1                    i1l1727 06E3  
                  i1l1745 0707                    i1l1737 06F9                    i1l1729 06EA  
                  i1l1747 0709                    i1l1739 06FF                    u145_20 06E3  
                  u145_21 06E2                    u146_20 06EA                    u146_21 06E9  
                  u147_20 06F0                    u147_21 06EF                    u148_20 06FF  
                  u148_21 06FE                    u149_20 0704                    u149_21 0703  
    __size_of_LCD_CONTROL 0012          __end_of_delay_ms 073F          __end_of_delay_us 07E6  
          __CFG_PWRTE$OFF 0000                 ??___aldiv 0020                 ??___awdiv 007A  
               ??___awmod 0077          ___awdiv@quotient 0026           ___awmod@divisor 0073  
                  _sensor 0048           ___awmod@counter 0078      __end_of_LCD_PRINT_WP 07AE  
            ??_CONFIG_ADC 0073                    saved_w 007E                 ?_LCD_DATO 0070  
 __end_of__initialization 001D                 ?_INIT_LCD 0070     __size_of_CONFIG_USART 004B  
          __pcstackCOMMON 0070        __end_of_CONFIG_ADC 0FDC             __end_of_setup 078C  
          _OPTION_REGbits 0081                   ??_setup 0073                __pbssBANK0 0041  
                 ?_LCD_RH 0070          CONFIG_USART@BAUD 0027                ??_LCD_DATO 0077  
            _CONFIG_USART 0694                ??_INIT_LCD 007A                __pmaintext 03AB  
               VAL@column 0028                __pintentry 0004                 VAL@result 003D  
               VAL@numero 0031                 ?_delay_ms 0070                 ?_delay_us 0070  
              __stringtab 0556           __size_of_LCD_RH 0007               VAL@unidades 002E  
                 ___aldiv 04B9     __size_of_LCD_PRINT_WP 0022                   ___awdiv 05D2  
                 ___awmod 063B                   __ptext1 0768                   __ptext2 0021  
                 __ptext3 063B                   __ptext4 05D2                   __ptext5 078C  
                 __ptext6 07AE                   __ptext7 0FEE                   __ptext8 07F9  
                 __ptext9 0FC6              __size_of_VAL 038A              __size_of_isr 0033  
               _LCD_CLEAR 0FC6          ___awmod@dividend 0075          ___aldiv@dividend 0077  
               _LCD_PRINT 07AE                ??_delay_ms 0073                 _LCD_PULSE 07E6  
              ??_delay_us 0073             VAL@centesimas 0030      end_of_initialization 001D  
            _LCD_PRINT_WP 078C                 _RCSTAbits 0018         LCD_PRINT_WP@frase 0024  
        ___aldiv@quotient 0023             VAL@coordenada 003F                 _PORTEbits 0009  
              ?_LCD_CLEAR 0070                ?_LCD_PRINT 0070                ?_LCD_PULSE 0070  
               _TRISCbits 0087                 _TRISEbits 0089             ??_LCD_CONTROL 0079  
          __end_of_LCD_RH 0800                 _TXSTAbits 0098         __size_of_LCD_DATO 0012  
       __size_of_INIT_LCD 0029       start_initialization 000F               __end_of_VAL 03AB  
             __end_of_isr 0712                  ??_LCD_RH 007A  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __end_of_LCD_CONTROL 0FEE               ??_LCD_CLEAR 007A                 ___latbits 0002  
             ??_LCD_PRINT 0078               ??_LCD_PULSE 0077             __pcstackBANK0 0020  
       __size_of_delay_ms 002D         __size_of_delay_us 0019                  VAL@F1517 0041  
               _cambiante 004C                  VAL@i_376 003B                  ?___aldiv 0073  
                ?___awdiv 0020                  ?___awmod 0073                  VAL@valor 003E  
              VAL@decimas 002F                 __pstrings 0556            __size_of_setup 0024  
                _LCD_DATO 0FEE               _LCD_CONTROL 0FDC                  _VAL$1117 0037  
         ___aldiv@divisor 0073         interrupt_function 0004           ___aldiv@counter 0021  
               delay_ms@i 0075                 delay_ms@j 0077                  _INIT_LCD 073F  
               delay_us@j 0075                _ADCON0bits 001F               __stringbase 055B  
              _ADCON1bits 009F           LCD_DATO@comando 0077      LCD_PRINT_WP@location 0025  
        __size_of___aldiv 009D          __size_of___awdiv 0069          __size_of___awmod 0059  
      __end_of__stringtab 055C                _CONFIG_ADC 0FCD                  _delay_ms 0712  
                _delay_us 07CD                  __ptext10 073F                  __ptext11 0FDC  
                __ptext12 0712                  __ptext13 07E6                  __ptext14 07CD  
                __ptext15 0694                  __ptext16 04B9                  __ptext17 0FCD  
                __ptext18 06DF         __CFG_BOR4V$BOR40V 0000             ?_CONFIG_USART 0027  
           __size_of_main 010E               delay_ms@dms 0074               delay_us@ams 0074  
              _INTCONbits 000B                  intlevel1 0000            ??_CONFIG_USART 007B  
         LCD_CONTROL@dato 0079                 stringcode 0556               ?_CONFIG_ADC 0070  
                stringdir 0556                  stringtab 0556              ___aldiv@sign 0022  
            ?_LCD_CONTROL 0070             ?_LCD_PRINT_WP 0020  
