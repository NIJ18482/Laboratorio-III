

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 01:22:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0009                     _PORTE	set	9
   361  0008                     _PORTD	set	8
   362  0007                     _PORTC	set	7
   363  0006                     _PORTB	set	6
   364  001E                     _ADRESH	set	30
   365  0001                     _TMR0	set	1
   366  001F                     _ADCON0bits	set	31
   367  000B                     _INTCONbits	set	11
   368  009F                     _ADCON1bits	set	159
   369  0081                     _OPTION_REGbits	set	129
   370  0089                     _TRISE	set	137
   371  0088                     _TRISD	set	136
   372  0087                     _TRISC	set	135
   373  0086                     _TRISB	set	134
   374  0085                     _TRISA	set	133
   375  0189                     _ANSELH	set	393
   376  0188                     _ANSEL	set	392
   377                           
   378                           ; #config settings
   379  0000                     
   380                           	psect	cinit
   381  000F                     start_initialization:	
   382  000F                     __initialization:	
   383                           
   384                           ; Clear objects allocated to COMMON
   385  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   386  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   387  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   388  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   389  0013                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392  0013                     __end_of__initialization:	
   393  0013  0183               	clrf	3
   394  0014  120A  118A  284A   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMMON
   397  0070                     __pbssCOMMON:	
   398  0070                     _ADCAN1:	
   399  0070                     	ds	1
   400  0071                     _ADCAN0:	
   401  0071                     	ds	1
   402  0072                     _eADC:	
   403  0072                     	ds	1
   404  0073                     _cambiante:	
   405  0073                     	ds	1
   406                           
   407                           	psect	cstackCOMMON
   408  0074                     __pcstackCOMMON:	
   409  0074                     ?_setup:	
   410  0074                     ?_CONFIG_ADC:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0074                     ?_isr:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0074                     ??_isr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0074                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424  0074                     	ds	3
   425  0077                     ??_setup:	
   426  0077                     ??_CONFIG_ADC:	
   427                           ; 1 bytes @ 0x3
   428                           
   429  0077                     ??_main:	
   430                           ; 1 bytes @ 0x3
   431                           
   432                           
   433                           ; 1 bytes @ 0x3
   434  0077                     	ds	1
   435                           
   436                           	psect	maintext
   437  004A                     __pmaintext:	
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 40 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : B00/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          1       0       0       0       0
   460 ;;      Totals:         1       0       0       0       0
   461 ;;Total ram usage:        1 bytes
   462 ;; Hardware stack levels required when called:    3
   463 ;; This function calls:
   464 ;;		_setup
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _main
   472  004A                     _main:	
   473  004A                     l745:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 41:     setup();
   479  004A  120A  118A  2076  120A  118A  	fcall	_setup
   480  004F                     l747:	
   481                           
   482                           ;main.c: 43:         if (eADC == 1){
   483  004F  0372               	decf	_eADC,w
   484  0050  1D03               	btfss	3,2
   485  0051  2853               	goto	u61
   486  0052  2854               	goto	u60
   487  0053                     u61:	
   488  0053  284F               	goto	l747
   489  0054                     u60:	
   490  0054                     l749:	
   491                           
   492                           ;main.c: 44:             eADC = 0;
   493  0054  01F2               	clrf	_eADC
   494  0055                     l751:	
   495                           
   496                           ;main.c: 45:             if (cambiante == 0){ADCAN0 = ADRESH; PORTB = ADCAN0;}
   497  0055  0873               	movf	_cambiante,w
   498  0056  1D03               	btfss	3,2
   499  0057  2859               	goto	u71
   500  0058  285A               	goto	u70
   501  0059                     u71:	
   502  0059  2862               	goto	l755
   503  005A                     u70:	
   504  005A                     l753:	
   505  005A  1283               	bcf	3,5	;RP0=0, select bank0
   506  005B  1303               	bcf	3,6	;RP1=0, select bank0
   507  005C  081E               	movf	30,w	;volatile
   508  005D  00F7               	movwf	??_main
   509  005E  0877               	movf	??_main,w
   510  005F  00F1               	movwf	_ADCAN0
   511  0060  0871               	movf	_ADCAN0,w
   512  0061  0086               	movwf	6	;volatile
   513  0062                     l755:	
   514                           
   515                           ;main.c: 46:             if (cambiante == 1){ADCAN1 = ADRESH; PORTC = ADCAN1;}
   516  0062  0373               	decf	_cambiante,w
   517  0063  1D03               	btfss	3,2
   518  0064  2866               	goto	u81
   519  0065  2867               	goto	u80
   520  0066                     u81:	
   521  0066  286F               	goto	l759
   522  0067                     u80:	
   523  0067                     l757:	
   524  0067  1283               	bcf	3,5	;RP0=0, select bank0
   525  0068  1303               	bcf	3,6	;RP1=0, select bank0
   526  0069  081E               	movf	30,w	;volatile
   527  006A  00F7               	movwf	??_main
   528  006B  0877               	movf	??_main,w
   529  006C  00F0               	movwf	_ADCAN1
   530  006D  0870               	movf	_ADCAN1,w
   531  006E  0087               	movwf	7	;volatile
   532  006F                     l759:	
   533                           
   534                           ;main.c: 47:             ADCON0bits.GO_DONE = 1;}
   535  006F  1283               	bcf	3,5	;RP0=0, select bank0
   536  0070  1303               	bcf	3,6	;RP1=0, select bank0
   537  0071  149F               	bsf	31,1	;volatile
   538  0072  284F               	goto	l747
   539  0073  120A  118A  280C   	ljmp	start
   540  0076                     __end_of_main:	
   541                           
   542                           	psect	text1
   543  0076                     __ptext1:	
   544 ;; *************** function _setup *****************
   545 ;; Defined at:
   546 ;;		line 56 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    2
   567 ;; This function calls:
   568 ;;		_CONFIG_ADC
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _setup
   576  0076                     _setup:	
   577  0076                     l683:	
   578                           ;incstack = 0
   579                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   580                           
   581                           
   582                           ;main.c: 58:     TRISA = 0b00000011;
   583  0076  3003               	movlw	3
   584  0077  1683               	bsf	3,5	;RP0=1, select bank1
   585  0078  1303               	bcf	3,6	;RP1=0, select bank1
   586  0079  0085               	movwf	5	;volatile
   587                           
   588                           ;main.c: 59:     ANSEL = 0b00000011;
   589  007A  3003               	movlw	3
   590  007B  1683               	bsf	3,5	;RP0=1, select bank3
   591  007C  1703               	bsf	3,6	;RP1=1, select bank3
   592  007D  0088               	movwf	8	;volatile
   593  007E                     l685:	
   594                           
   595                           ;main.c: 60:     ANSELH = 0b00000000;
   596  007E  0189               	clrf	9	;volatile
   597  007F                     l687:	
   598                           
   599                           ;main.c: 61:     TRISB = 0b00000000;
   600  007F  1683               	bsf	3,5	;RP0=1, select bank1
   601  0080  1303               	bcf	3,6	;RP1=0, select bank1
   602  0081  0186               	clrf	6	;volatile
   603  0082                     l689:	
   604                           
   605                           ;main.c: 62:     TRISC = 0b00000000;
   606  0082  0187               	clrf	7	;volatile
   607  0083                     l691:	
   608                           
   609                           ;main.c: 63:     TRISD = 0b00000000;
   610  0083  0188               	clrf	8	;volatile
   611  0084                     l693:	
   612                           
   613                           ;main.c: 64:     TRISE = 0b0000;
   614  0084  0189               	clrf	9	;volatile
   615  0085                     l695:	
   616                           
   617                           ;main.c: 65:     PORTB = 0b00000000;
   618  0085  1283               	bcf	3,5	;RP0=0, select bank0
   619  0086  1303               	bcf	3,6	;RP1=0, select bank0
   620  0087  0186               	clrf	6	;volatile
   621  0088                     l697:	
   622                           
   623                           ;main.c: 66:     PORTC = 0b00000000;
   624  0088  0187               	clrf	7	;volatile
   625  0089                     l699:	
   626                           
   627                           ;main.c: 67:     PORTD = 0b00000000;
   628  0089  0188               	clrf	8	;volatile
   629  008A                     l701:	
   630                           
   631                           ;main.c: 68:     PORTE = 0b0000;
   632  008A  0189               	clrf	9	;volatile
   633  008B                     l703:	
   634                           
   635                           ;main.c: 71:     OPTION_REGbits.T0CS = 0;
   636  008B  1683               	bsf	3,5	;RP0=1, select bank1
   637  008C  1303               	bcf	3,6	;RP1=0, select bank1
   638  008D  1281               	bcf	1,5	;volatile
   639  008E                     l705:	
   640                           
   641                           ;main.c: 72:     OPTION_REGbits.PSA = 0;
   642  008E  1181               	bcf	1,3	;volatile
   643  008F                     l707:	
   644                           
   645                           ;main.c: 73:     OPTION_REGbits.PS0 = 0;
   646  008F  1001               	bcf	1,0	;volatile
   647  0090                     l709:	
   648                           
   649                           ;main.c: 74:     OPTION_REGbits.PS1 = 1;
   650  0090  1481               	bsf	1,1	;volatile
   651  0091                     l711:	
   652                           
   653                           ;main.c: 75:     OPTION_REGbits.PS2 = 0;
   654  0091  1101               	bcf	1,2	;volatile
   655  0092                     l713:	
   656                           
   657                           ;main.c: 76:     INTCONbits.T0IE = 1;
   658  0092  168B               	bsf	11,5	;volatile
   659  0093                     l715:	
   660                           
   661                           ;main.c: 77:     INTCONbits.T0IF = 0;
   662  0093  110B               	bcf	11,2	;volatile
   663  0094                     l717:	
   664                           
   665                           ;main.c: 78:     TMR0 = 130;
   666  0094  3082               	movlw	130
   667  0095  1283               	bcf	3,5	;RP0=0, select bank0
   668  0096  1303               	bcf	3,6	;RP1=0, select bank0
   669  0097  0081               	movwf	1	;volatile
   670  0098                     l719:	
   671                           
   672                           ;main.c: 81:     CONFIG_ADC();
   673  0098  120A  118A  209E  120A  118A  	fcall	_CONFIG_ADC
   674  009D                     l68:	
   675  009D  0008               	return
   676  009E                     __end_of_setup:	
   677                           
   678                           	psect	text2
   679  009E                     __ptext2:	
   680 ;; *************** function _CONFIG_ADC *****************
   681 ;; Defined at:
   682 ;;		line 15 in file "ADC.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		None
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_setup
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _CONFIG_ADC
   712  009E                     _CONFIG_ADC:	
   713  009E                     l681:	
   714                           ;incstack = 0
   715                           ; Regs used in _CONFIG_ADC: []
   716                           
   717                           
   718                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
   719  009E  1683               	bsf	3,5	;RP0=1, select bank1
   720  009F  1303               	bcf	3,6	;RP1=0, select bank1
   721  00A0  139F               	bcf	31,7	;volatile
   722                           
   723                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
   724  00A1  129F               	bcf	31,5	;volatile
   725                           
   726                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
   727  00A2  121F               	bcf	31,4	;volatile
   728                           
   729                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
   730  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   731  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   732  00A5  139F               	bcf	31,7	;volatile
   733                           
   734                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
   735  00A6  171F               	bsf	31,6	;volatile
   736                           
   737                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
   738  00A7  129F               	bcf	31,5	;volatile
   739                           
   740                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
   741  00A8  121F               	bcf	31,4	;volatile
   742                           
   743                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
   744  00A9  119F               	bcf	31,3	;volatile
   745                           
   746                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
   747  00AA  111F               	bcf	31,2	;volatile
   748                           
   749                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
   750  00AB  141F               	bsf	31,0	;volatile
   751  00AC                     l89:	
   752                           ;ADC.c: 26:     return;
   753                           
   754  00AC  0008               	return
   755  00AD                     __end_of_CONFIG_ADC:	
   756                           
   757                           	psect	text3
   758  0017                     __ptext3:	
   759 ;; *************** function _isr *****************
   760 ;; Defined at:
   761 ;;		line 28 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          3       0       0       0       0
   778 ;;      Totals:         3       0       0       0       0
   779 ;;Total ram usage:        3 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		Interrupt level 1
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _isr
   790  0017                     _isr:	
   791  0017                     i1l721:	
   792                           
   793                           ;main.c: 29:     if (INTCONbits.T0IF == 1){
   794  0017  1D0B               	btfss	11,2	;volatile
   795  0018  281A               	goto	u1_21
   796  0019  281B               	goto	u1_20
   797  001A                     u1_21:	
   798  001A  2843               	goto	i1l54
   799  001B                     u1_20:	
   800  001B                     i1l723:	
   801                           
   802                           ;main.c: 30:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
   803  001B  0873               	movf	_cambiante,w
   804  001C  1D03               	btfss	3,2
   805  001D  281F               	goto	u2_21
   806  001E  2820               	goto	u2_20
   807  001F                     u2_21:	
   808  001F  2823               	goto	i1l727
   809  0020                     u2_20:	
   810  0020                     i1l725:	
   811  0020  1283               	bcf	3,5	;RP0=0, select bank0
   812  0021  1303               	bcf	3,6	;RP1=0, select bank0
   813  0022  151F               	bsf	31,2	;volatile
   814  0023                     i1l727:	
   815                           
   816                           ;main.c: 31:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
   817  0023  0373               	decf	_cambiante,w
   818  0024  1D03               	btfss	3,2
   819  0025  2827               	goto	u3_21
   820  0026  2828               	goto	u3_20
   821  0027                     u3_21:	
   822  0027  282B               	goto	i1l731
   823  0028                     u3_20:	
   824  0028                     i1l729:	
   825  0028  1283               	bcf	3,5	;RP0=0, select bank0
   826  0029  1303               	bcf	3,6	;RP1=0, select bank0
   827  002A  111F               	bcf	31,2	;volatile
   828  002B                     i1l731:	
   829                           
   830                           ;main.c: 32:         cambiante++;
   831  002B  3001               	movlw	1
   832  002C  00F4               	movwf	??_isr
   833  002D  0874               	movf	??_isr,w
   834  002E  07F3               	addwf	_cambiante,f
   835  002F                     i1l733:	
   836                           
   837                           ;main.c: 33:         if (cambiante > 1){cambiante = 0;}
   838  002F  3002               	movlw	2
   839  0030  0273               	subwf	_cambiante,w
   840  0031  1C03               	skipc
   841  0032  2834               	goto	u4_21
   842  0033  2835               	goto	u4_20
   843  0034                     u4_21:	
   844  0034  2836               	goto	i1l737
   845  0035                     u4_20:	
   846  0035                     i1l735:	
   847  0035  01F3               	clrf	_cambiante
   848  0036                     i1l737:	
   849                           
   850                           ;main.c: 34:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
   851  0036  1283               	bcf	3,5	;RP0=0, select bank0
   852  0037  1303               	bcf	3,6	;RP1=0, select bank0
   853  0038  189F               	btfsc	31,1	;volatile
   854  0039  283B               	goto	u5_21
   855  003A  283C               	goto	u5_20
   856  003B                     u5_21:	
   857  003B  283E               	goto	i1l53
   858  003C                     u5_20:	
   859  003C                     i1l739:	
   860  003C  01F2               	clrf	_eADC
   861  003D  0AF2               	incf	_eADC,f
   862  003E                     i1l53:	
   863                           
   864                           ;main.c: 35:         INTCONbits.T0IF = 0;
   865  003E  110B               	bcf	11,2	;volatile
   866  003F                     i1l741:	
   867                           
   868                           ;main.c: 36:         TMR0 = 130;
   869  003F  3082               	movlw	130
   870  0040  0081               	movwf	1	;volatile
   871  0041                     i1l743:	
   872                           
   873                           ;main.c: 37:         eADC = 1;
   874  0041  01F2               	clrf	_eADC
   875  0042  0AF2               	incf	_eADC,f
   876  0043                     i1l54:	
   877  0043  0876               	movf	??_isr+2,w
   878  0044  008A               	movwf	10
   879  0045  0E75               	swapf	(??_isr+1)^(0+4294967168),w
   880  0046  0083               	movwf	3
   881  0047  0EFE               	swapf	btemp,f
   882  0048  0E7E               	swapf	btemp,w
   883  0049  0009               	retfie
   884  004A                     __end_of_isr:	
   885  007E                     btemp	set	126	;btemp
   886  007E                     wtemp0	set	126
   887                           
   888                           	psect	intentry
   889  0004                     __pintentry:	
   890                           ;incstack = 0
   891                           ; Regs used in _isr: [wreg+status,2+status,0]
   892                           
   893  0004                     interrupt_function:	
   894  007E                     saved_w	set	btemp
   895  0004  00FE               	movwf	btemp
   896  0005  0E03               	swapf	3,w
   897  0006  00F5               	movwf	??_isr+1
   898  0007  080A               	movf	10,w
   899  0008  00F6               	movwf	??_isr+2
   900  0009  120A  118A  2817   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _CONFIG_ADC
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _CONFIG_ADC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 01:22:00 2020

             __CFG_CP$OFF 0000                        l68 009D                        l89 00AC  
                      u60 0054                        u61 0053                        u70 005A  
                      u71 0059                        u80 0067                        u81 0066  
                     l701 008A                       l711 0091                       l703 008B  
                     l713 0092                       l705 008E                       l715 0093  
                     l707 008F                       l717 0094                       l709 0090  
                     l719 0098                       l751 0055                       l681 009E  
                     l753 005A                       l745 004A                       l691 0083  
                     l683 0076                       l755 0062                       l747 004F  
                     l693 0084                       l685 007E                       l757 0067  
                     l749 0054                       l695 0085                       l687 007F  
                     l759 006F                       l697 0088                       l689 0082  
                     l699 0089              __CFG_CPD$OFF 0000                       _isr 0017  
            __CFG_LVP$OFF 0000                      ?_isr 0074                      i1l53 003E  
                    i1l54 0043                      _TMR0 0001                      _eADC 0072  
                    u1_20 001B                      u1_21 001A                      u2_20 0020  
                    u2_21 001F                      u3_20 0028                      u3_21 0027  
                    u4_20 0035                      u4_21 0034                      u5_20 003C  
                    u5_21 003B              __CFG_WRT$OFF 0000                      _main 004A  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
     __size_of_CONFIG_ADC 000F                     ??_isr 0074                     ?_main 0074  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l721 0017  
                   i1l731 002B                     i1l723 001B                     i1l741 003F  
                   i1l733 002F                     i1l725 0020                     i1l743 0041  
                   i1l735 0035                     i1l727 0023                     i1l737 0036  
                   i1l729 0028                     i1l739 003C                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
                   _setup 0076            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0076                    ??_main 0077  
                  _ADCAN0 0071                    _ADCAN1 0070                    _ADRESH 001E  
                  ?_setup 0074                    _ANSELH 0189            __CFG_PWRTE$OFF 0000  
            ??_CONFIG_ADC 0077                    saved_w 007E   __end_of__initialization 0013  
          __pcstackCOMMON 0074        __end_of_CONFIG_ADC 00AD             __end_of_setup 009E  
          _OPTION_REGbits 0081                   ??_setup 0077                __pmaintext 004A  
              __pintentry 0004                   __ptext1 0076                   __ptext2 009E  
                 __ptext3 0017              __size_of_isr 0033      end_of_initialization 0013  
     start_initialization 000F               __end_of_isr 004A  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0070                 ___latbits 0002                 _cambiante 0073  
          __size_of_setup 0028         interrupt_function 0004                _ADCON0bits 001F  
              _ADCON1bits 009F                _CONFIG_ADC 009E         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 002C                _INTCONbits 000B                  intlevel1 0000  
             ?_CONFIG_ADC 0074  
