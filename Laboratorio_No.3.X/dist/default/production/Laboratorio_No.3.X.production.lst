

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 11:27:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0009                     _PORTEbits	set	9
   451  0009                     _PORTE	set	9
   452  0008                     _PORTD	set	8
   453  0007                     _PORTC	set	7
   454  0006                     _PORTB	set	6
   455  001E                     _ADRESH	set	30
   456  0001                     _TMR0	set	1
   457  001F                     _ADCON0bits	set	31
   458  000B                     _INTCONbits	set	11
   459  0089                     _TRISEbits	set	137
   460  009F                     _ADCON1bits	set	159
   461  0081                     _OPTION_REGbits	set	129
   462  0089                     _TRISE	set	137
   463  0088                     _TRISD	set	136
   464  0087                     _TRISC	set	135
   465  0086                     _TRISB	set	134
   466  0085                     _TRISA	set	133
   467  0189                     _ANSELH	set	393
   468  0188                     _ANSEL	set	392
   469                           
   470                           	psect	strings
   471  0100                     __pstrings:	
   472  0100                     stringtab:	
   473  0100                     __stringtab:	
   474  0100                     stringcode:	
   475                           ;	String table - string pointers are 1 byte each
   476                           
   477  0100                     stringdir:	
   478  0100  3001               	movlw	high stringdir
   479  0101  008A               	movwf	10
   480  0102  0804               	movf	4,w
   481  0103  0A84               	incf	4,f
   482  0104  0782               	addwf	2,f
   483  0105                     __stringbase:	
   484  0105  3400               	retlw	0
   485  0106                     __end_of__stringtab:	
   486  0106                     STR_4:	
   487  0106  342D               	retlw	45	;'-'
   488  0107  344D               	retlw	77	;'M'
   489  0108  3450               	retlw	80	;'P'
   490  0109  344C               	retlw	76	;'L'
   491  010A  3441               	retlw	65	;'A'
   492  010B  3442               	retlw	66	;'B'
   493  010C  3458               	retlw	88	;'X'
   494  010D  342D               	retlw	45	;'-'
   495  010E  3458               	retlw	88	;'X'
   496  010F  3443               	retlw	67	;'C'
   497  0110  3438               	retlw	56	;'8'
   498  0111  342D               	retlw	45	;'-'
   499  0112  3450               	retlw	80	;'P'
   500  0113  3449               	retlw	73	;'I'
   501  0114  3443               	retlw	67	;'C'
   502  0115  342D               	retlw	45	;'-'
   503  0116  3400               	retlw	0
   504  0117                     STR_1:	
   505  0117  344C               	retlw	76	;'L'
   506  0118  3441               	retlw	65	;'A'
   507  0119  3442               	retlw	66	;'B'
   508  011A  344F               	retlw	79	;'O'
   509  011B  3452               	retlw	82	;'R'
   510  011C  3441               	retlw	65	;'A'
   511  011D  3454               	retlw	84	;'T'
   512  011E  344F               	retlw	79	;'O'
   513  011F  3452               	retlw	82	;'R'
   514  0120  3449               	retlw	73	;'I'
   515  0121  344F               	retlw	79	;'O'
   516  0122  3420               	retlw	32	;' '
   517  0123  344E               	retlw	78	;'N'
   518  0124  346F               	retlw	111	;'o'
   519  0125  342E               	retlw	46	;'.'
   520  0126  3433               	retlw	51	;'3'
   521  0127  3400               	retlw	0
   522  0128                     STR_3:	
   523  0128  344D               	retlw	77	;'M'
   524  0129  3441               	retlw	65	;'A'
   525  012A  344E               	retlw	78	;'N'
   526  012B  3445               	retlw	69	;'E'
   527  012C  344A               	retlw	74	;'J'
   528  012D  344F               	retlw	79	;'O'
   529  012E  3420               	retlw	32	;' '
   530  012F  3450               	retlw	80	;'P'
   531  0130  3441               	retlw	65	;'A'
   532  0131  344E               	retlw	78	;'N'
   533  0132  3445               	retlw	69	;'E'
   534  0133  344C               	retlw	76	;'L'
   535  0134  3420               	retlw	32	;' '
   536  0135  344C               	retlw	76	;'L'
   537  0136  3443               	retlw	67	;'C'
   538  0137  3444               	retlw	68	;'D'
   539  0138  3400               	retlw	0
   540  0139                     STR_2:	
   541  0139  344C               	retlw	76	;'L'
   542  013A  3475               	retlw	117	;'u'
   543  013B  3469               	retlw	105	;'i'
   544  013C  3473               	retlw	115	;'s'
   545  013D  3420               	retlw	32	;' '
   546  013E  344E               	retlw	78	;'N'
   547  013F  342E               	retlw	46	;'.'
   548  0140  3420               	retlw	32	;' '
   549  0141  3431               	retlw	49	;'1'
   550  0142  3438               	retlw	56	;'8'
   551  0143  3434               	retlw	52	;'4'
   552  0144  3438               	retlw	56	;'8'
   553  0145  3432               	retlw	50	;'2'
   554  0146  3455               	retlw	85	;'U'
   555  0147  3456               	retlw	86	;'V'
   556  0148  3447               	retlw	71	;'G'
   557  0149  3400               	retlw	0
   558                           
   559                           ; #config settings
   560  0000                     
   561                           	psect	cinit
   562  000F                     start_initialization:	
   563  000F                     __initialization:	
   564                           
   565                           ; Clear objects allocated to BANK0
   566  000F  1283               	bcf	3,5	;RP0=0, select bank0
   567  0010  1303               	bcf	3,6	;RP1=0, select bank0
   568  0011  01A7               	clrf	__pbssBANK0& (0+127)
   569  0012  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   570  0013  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   571  0014  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   572  0015                     end_of_initialization:	
   573                           ;End of C runtime variable initialization code
   574                           
   575  0015                     __end_of__initialization:	
   576  0015  0183               	clrf	3
   577  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   578                           
   579                           	psect	bssBANK0
   580  0027                     __pbssBANK0:	
   581  0027                     _ADCAN1:	
   582  0027                     	ds	1
   583  0028                     _ADCAN0:	
   584  0028                     	ds	1
   585  0029                     _eADC:	
   586  0029                     	ds	1
   587  002A                     _cambiante:	
   588  002A                     	ds	1
   589                           
   590                           	psect	cstackCOMMON
   591  0070                     __pcstackCOMMON:	
   592  0070                     ?_setup:	
   593  0070                     ?_INIT_LCD:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_LCD_CLEAR:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_LCD_RH:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_delay_ms:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_CONFIG_ADC:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_LCD_CONTROL:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_LCD_PULSE:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_isr:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ??_isr:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_main:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_delay_us:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_LCD_DATO:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_LCD_PRINT:	
   630                           ; 1 bytes @ 0x0
   631                           
   632                           
   633                           ; 1 bytes @ 0x0
   634  0070                     	ds	3
   635  0073                     ??_setup:	
   636  0073                     ??_delay_ms:	
   637                           ; 1 bytes @ 0x3
   638                           
   639  0073                     ??_CONFIG_ADC:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0073                     ??_delay_us:	
   643                           ; 1 bytes @ 0x3
   644                           
   645                           
   646                           ; 1 bytes @ 0x3
   647  0073                     	ds	1
   648  0074                     delay_ms@dms:	
   649  0074                     delay_us@ams:	
   650                           ; 1 bytes @ 0x4
   651                           
   652                           
   653                           ; 1 bytes @ 0x4
   654  0074                     	ds	1
   655  0075                     delay_ms@i:	
   656  0075                     delay_us@j:	
   657                           ; 2 bytes @ 0x5
   658                           
   659                           
   660                           ; 2 bytes @ 0x5
   661  0075                     	ds	2
   662  0077                     ??_LCD_PULSE:	
   663  0077                     ??_LCD_DATO:	
   664                           ; 1 bytes @ 0x7
   665                           
   666  0077                     LCD_DATO@comando:	
   667                           ; 1 bytes @ 0x7
   668                           
   669  0077                     delay_ms@j:	
   670                           ; 1 bytes @ 0x7
   671                           
   672                           
   673                           ; 2 bytes @ 0x7
   674  0077                     	ds	1
   675  0078                     ??_LCD_PRINT:	
   676                           
   677                           ; 1 bytes @ 0x8
   678  0078                     	ds	1
   679  0079                     ??_LCD_CONTROL:	
   680  0079                     LCD_CONTROL@dato:	
   681                           ; 1 bytes @ 0x9
   682                           
   683  0079                     LCD_PRINT@data:	
   684                           ; 1 bytes @ 0x9
   685                           
   686                           
   687                           ; 1 bytes @ 0x9
   688  0079                     	ds	1
   689  007A                     ??_INIT_LCD:	
   690  007A                     ??_LCD_CLEAR:	
   691                           ; 1 bytes @ 0xA
   692                           
   693  007A                     ??_LCD_RH:	
   694                           ; 1 bytes @ 0xA
   695                           
   696  007A                     ??_LCD_PRINT_WP:	
   697                           ; 1 bytes @ 0xA
   698                           
   699                           
   700                           ; 1 bytes @ 0xA
   701  007A                     	ds	1
   702                           
   703                           	psect	cstackBANK0
   704  0020                     __pcstackBANK0:	
   705  0020                     ?_LCD_PRINT_WP:	
   706  0020                     LCD_PRINT_WP@x:	
   707                           ; 1 bytes @ 0x0
   708                           
   709                           
   710                           ; 2 bytes @ 0x0
   711  0020                     	ds	2
   712  0022                     LCD_PRINT_WP@y:	
   713                           
   714                           ; 2 bytes @ 0x2
   715  0022                     	ds	2
   716  0024                     LCD_PRINT_WP@frase:	
   717                           
   718                           ; 1 bytes @ 0x4
   719  0024                     	ds	1
   720  0025                     LCD_PRINT_WP@location:	
   721                           
   722                           ; 1 bytes @ 0x5
   723  0025                     	ds	1
   724  0026                     ??_main:	
   725                           
   726                           ; 1 bytes @ 0x6
   727  0026                     	ds	1
   728                           
   729                           	psect	maintext
   730  0019                     __pmaintext:	
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 42 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : B00/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       1       0       0       0
   753 ;;      Totals:         0       1       0       0       0
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels required when called:    6
   756 ;; This function calls:
   757 ;;		_CONFIG_ADC
   758 ;;		_INIT_LCD
   759 ;;		_LCD_CLEAR
   760 ;;		_LCD_PRINT_WP
   761 ;;		_LCD_RH
   762 ;;		_delay_ms
   763 ;;		_setup
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _main
   771  0019                     _main:	
   772  0019                     l1107:	
   773                           ;incstack = 0
   774                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   775                           
   776                           
   777                           ;main.c: 43:     setup();
   778  0019  120A  118A  21FA  120A  118A  	fcall	_setup
   779  001E                     l1109:	
   780                           
   781                           ;main.c: 44:     INIT_LCD();
   782  001E  120A  118A  21D1  120A  118A  	fcall	_INIT_LCD
   783  0023                     l1111:	
   784                           
   785                           ;main.c: 45:     LCD_CLEAR();
   786  0023  120A  118A  22A3  120A  118A  	fcall	_LCD_CLEAR
   787  0028                     l1113:	
   788                           
   789                           ;main.c: 46:     LCD_RH();
   790  0028  120A  118A  229C  120A  118A  	fcall	_LCD_RH
   791  002D                     l1115:	
   792                           
   793                           ;main.c: 47:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
   794  002D  3000               	movlw	0
   795  002E  1283               	bcf	3,5	;RP0=0, select bank0
   796  002F  1303               	bcf	3,6	;RP1=0, select bank0
   797  0030  00A0               	movwf	LCD_PRINT_WP@x
   798  0031  00A1               	movwf	LCD_PRINT_WP@x+1
   799  0032  3001               	movlw	1
   800  0033  00A2               	movwf	LCD_PRINT_WP@y
   801  0034  3000               	movlw	0
   802  0035  00A3               	movwf	LCD_PRINT_WP@y+1
   803  0036  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   804  0037  00A6               	movwf	??_main
   805  0038  0826               	movf	??_main,w
   806  0039  00A4               	movwf	LCD_PRINT_WP@frase
   807  003A  120A  118A  21A6  120A  118A  	fcall	_LCD_PRINT_WP
   808  003F                     l1117:	
   809                           
   810                           ;main.c: 48:     delay_ms(150);
   811  003F  3096               	movlw	150
   812  0040  120A  118A  2179  120A  118A  	fcall	_delay_ms
   813  0045                     l1119:	
   814                           
   815                           ;main.c: 49:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
   816  0045  3000               	movlw	0
   817  0046  1283               	bcf	3,5	;RP0=0, select bank0
   818  0047  1303               	bcf	3,6	;RP1=0, select bank0
   819  0048  00A0               	movwf	LCD_PRINT_WP@x
   820  0049  00A1               	movwf	LCD_PRINT_WP@x+1
   821  004A  3002               	movlw	2
   822  004B  00A2               	movwf	LCD_PRINT_WP@y
   823  004C  3000               	movlw	0
   824  004D  00A3               	movwf	LCD_PRINT_WP@y+1
   825  004E  3034               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   826  004F  00A6               	movwf	??_main
   827  0050  0826               	movf	??_main,w
   828  0051  00A4               	movwf	LCD_PRINT_WP@frase
   829  0052  120A  118A  21A6  120A  118A  	fcall	_LCD_PRINT_WP
   830  0057                     l1121:	
   831                           
   832                           ;main.c: 50:     delay_ms(150);
   833  0057  3096               	movlw	150
   834  0058  120A  118A  2179  120A  118A  	fcall	_delay_ms
   835  005D                     l1123:	
   836                           
   837                           ;main.c: 51:     LCD_CLEAR();
   838  005D  120A  118A  22A3  120A  118A  	fcall	_LCD_CLEAR
   839  0062                     l1125:	
   840                           
   841                           ;main.c: 52:     LCD_RH();
   842  0062  120A  118A  229C  120A  118A  	fcall	_LCD_RH
   843  0067                     l1127:	
   844                           
   845                           ;main.c: 53:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
   846  0067  3000               	movlw	0
   847  0068  1283               	bcf	3,5	;RP0=0, select bank0
   848  0069  1303               	bcf	3,6	;RP1=0, select bank0
   849  006A  00A0               	movwf	LCD_PRINT_WP@x
   850  006B  00A1               	movwf	LCD_PRINT_WP@x+1
   851  006C  3001               	movlw	1
   852  006D  00A2               	movwf	LCD_PRINT_WP@y
   853  006E  3000               	movlw	0
   854  006F  00A3               	movwf	LCD_PRINT_WP@y+1
   855  0070  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   856  0071  00A6               	movwf	??_main
   857  0072  0826               	movf	??_main,w
   858  0073  00A4               	movwf	LCD_PRINT_WP@frase
   859  0074  120A  118A  21A6  120A  118A  	fcall	_LCD_PRINT_WP
   860  0079                     l1129:	
   861                           
   862                           ;main.c: 54:     delay_ms(150);
   863  0079  3096               	movlw	150
   864  007A  120A  118A  2179  120A  118A  	fcall	_delay_ms
   865  007F                     l1131:	
   866                           
   867                           ;main.c: 55:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
   868  007F  3000               	movlw	0
   869  0080  1283               	bcf	3,5	;RP0=0, select bank0
   870  0081  1303               	bcf	3,6	;RP1=0, select bank0
   871  0082  00A0               	movwf	LCD_PRINT_WP@x
   872  0083  00A1               	movwf	LCD_PRINT_WP@x+1
   873  0084  3002               	movlw	2
   874  0085  00A2               	movwf	LCD_PRINT_WP@y
   875  0086  3000               	movlw	0
   876  0087  00A3               	movwf	LCD_PRINT_WP@y+1
   877  0088  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   878  0089  00A6               	movwf	??_main
   879  008A  0826               	movf	??_main,w
   880  008B  00A4               	movwf	LCD_PRINT_WP@frase
   881  008C  120A  118A  21A6  120A  118A  	fcall	_LCD_PRINT_WP
   882  0091                     l1133:	
   883                           
   884                           ;main.c: 56:     delay_ms(150);
   885  0091  3096               	movlw	150
   886  0092  120A  118A  2179  120A  118A  	fcall	_delay_ms
   887  0097                     l1135:	
   888                           
   889                           ;main.c: 58:     CONFIG_ADC();
   890  0097  120A  118A  228D  120A  118A  	fcall	_CONFIG_ADC
   891  009C                     l1137:	
   892                           
   893                           ;main.c: 60:         if (eADC == 1){
   894  009C  1283               	bcf	3,5	;RP0=0, select bank0
   895  009D  1303               	bcf	3,6	;RP1=0, select bank0
   896  009E  0329               	decf	_eADC,w
   897  009F  1D03               	btfss	3,2
   898  00A0  28A2               	goto	u221
   899  00A1  28A3               	goto	u220
   900  00A2                     u221:	
   901  00A2  289C               	goto	l1137
   902  00A3                     u220:	
   903  00A3                     l1139:	
   904                           
   905                           ;main.c: 61:             eADC = 0;
   906  00A3  01A9               	clrf	_eADC
   907  00A4                     l1141:	
   908                           
   909                           ;main.c: 62:             if (cambiante == 0){ADCAN0 = ADRESH; PORTB = ADCAN0;}
   910  00A4  082A               	movf	_cambiante,w
   911  00A5  1D03               	btfss	3,2
   912  00A6  28A8               	goto	u231
   913  00A7  28A9               	goto	u230
   914  00A8                     u231:	
   915  00A8  28AF               	goto	l1145
   916  00A9                     u230:	
   917  00A9                     l1143:	
   918  00A9  081E               	movf	30,w	;volatile
   919  00AA  00A6               	movwf	??_main
   920  00AB  0826               	movf	??_main,w
   921  00AC  00A8               	movwf	_ADCAN0
   922  00AD  0828               	movf	_ADCAN0,w
   923  00AE  0086               	movwf	6	;volatile
   924  00AF                     l1145:	
   925                           
   926                           ;main.c: 63:             if (cambiante == 1){ADCAN1 = ADRESH; PORTC = ADCAN1;}
   927  00AF  032A               	decf	_cambiante,w
   928  00B0  1D03               	btfss	3,2
   929  00B1  28B3               	goto	u241
   930  00B2  28B4               	goto	u240
   931  00B3                     u241:	
   932  00B3  28BA               	goto	l1149
   933  00B4                     u240:	
   934  00B4                     l1147:	
   935  00B4  081E               	movf	30,w	;volatile
   936  00B5  00A6               	movwf	??_main
   937  00B6  0826               	movf	??_main,w
   938  00B7  00A7               	movwf	_ADCAN1
   939  00B8  0827               	movf	_ADCAN1,w
   940  00B9  0087               	movwf	7	;volatile
   941  00BA                     l1149:	
   942                           
   943                           ;main.c: 64:             ADCON0bits.GO_DONE = 1;}
   944  00BA  149F               	bsf	31,1	;volatile
   945  00BB  289C               	goto	l1137
   946  00BC  120A  118A  280C   	ljmp	start
   947  00BF                     __end_of_main:	
   948                           
   949                           	psect	text1
   950  01FA                     __ptext1:	
   951 ;; *************** function _setup *****************
   952 ;; Defined at:
   953 ;;		line 71 in file "main.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _setup
   983  01FA                     _setup:	
   984  01FA                     l1003:	
   985                           ;incstack = 0
   986                           ; Regs used in _setup: [wreg+status,2]
   987                           
   988                           
   989                           ;main.c: 73:     TRISA = 0b00000011;
   990  01FA  3003               	movlw	3
   991  01FB  1683               	bsf	3,5	;RP0=1, select bank1
   992  01FC  1303               	bcf	3,6	;RP1=0, select bank1
   993  01FD  0085               	movwf	5	;volatile
   994                           
   995                           ;main.c: 74:     ANSEL = 0b00000011;
   996  01FE  3003               	movlw	3
   997  01FF  1683               	bsf	3,5	;RP0=1, select bank3
   998  0200  1703               	bsf	3,6	;RP1=1, select bank3
   999  0201  0088               	movwf	8	;volatile
  1000  0202                     l1005:	
  1001                           
  1002                           ;main.c: 75:     ANSELH = 0b00000000;
  1003  0202  0189               	clrf	9	;volatile
  1004  0203                     l1007:	
  1005                           
  1006                           ;main.c: 76:     TRISB = 0b00000000;
  1007  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1008  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1009  0205  0186               	clrf	6	;volatile
  1010  0206                     l1009:	
  1011                           
  1012                           ;main.c: 77:     TRISC = 0b00000000;
  1013  0206  0187               	clrf	7	;volatile
  1014  0207                     l1011:	
  1015                           
  1016                           ;main.c: 78:     TRISD = 0b00000000;
  1017  0207  0188               	clrf	8	;volatile
  1018  0208                     l1013:	
  1019                           
  1020                           ;main.c: 79:     TRISE = 0b0000;
  1021  0208  0189               	clrf	9	;volatile
  1022  0209                     l1015:	
  1023                           
  1024                           ;main.c: 80:     PORTB = 0b00000000;
  1025  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1026  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1027  020B  0186               	clrf	6	;volatile
  1028  020C                     l1017:	
  1029                           
  1030                           ;main.c: 81:     PORTC = 0b00000000;
  1031  020C  0187               	clrf	7	;volatile
  1032  020D                     l1019:	
  1033                           
  1034                           ;main.c: 82:     PORTD = 0b00000000;
  1035  020D  0188               	clrf	8	;volatile
  1036  020E                     l1021:	
  1037                           
  1038                           ;main.c: 83:     PORTE = 0b0000;
  1039  020E  0189               	clrf	9	;volatile
  1040  020F                     l1023:	
  1041                           
  1042                           ;main.c: 86:     OPTION_REGbits.T0CS = 0;
  1043  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1044  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1045  0211  1281               	bcf	1,5	;volatile
  1046  0212                     l1025:	
  1047                           
  1048                           ;main.c: 87:     OPTION_REGbits.PSA = 0;
  1049  0212  1181               	bcf	1,3	;volatile
  1050  0213                     l1027:	
  1051                           
  1052                           ;main.c: 88:     OPTION_REGbits.PS0 = 0;
  1053  0213  1001               	bcf	1,0	;volatile
  1054  0214                     l1029:	
  1055                           
  1056                           ;main.c: 89:     OPTION_REGbits.PS1 = 1;
  1057  0214  1481               	bsf	1,1	;volatile
  1058  0215                     l1031:	
  1059                           
  1060                           ;main.c: 90:     OPTION_REGbits.PS2 = 0;
  1061  0215  1101               	bcf	1,2	;volatile
  1062  0216                     l1033:	
  1063                           
  1064                           ;main.c: 91:     INTCONbits.T0IE = 1;
  1065  0216  168B               	bsf	11,5	;volatile
  1066  0217                     l1035:	
  1067                           
  1068                           ;main.c: 92:     INTCONbits.T0IF = 0;
  1069  0217  110B               	bcf	11,2	;volatile
  1070  0218                     l1037:	
  1071                           
  1072                           ;main.c: 93:     INTCONbits.GIE = 1;
  1073  0218  178B               	bsf	11,7	;volatile
  1074  0219                     l1039:	
  1075                           
  1076                           ;main.c: 94:     TMR0 = 130;
  1077  0219  3082               	movlw	130
  1078  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1079  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1080  021C  0081               	movwf	1	;volatile
  1081  021D                     l78:	
  1082  021D  0008               	return
  1083  021E                     __end_of_setup:	
  1084                           
  1085                           	psect	text2
  1086  029C                     __ptext2:	
  1087 ;; *************** function _LCD_RH *****************
  1088 ;; Defined at:
  1089 ;;		line 59 in file "LCD.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_LCD_CONTROL
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _LCD_RH
  1119  029C                     _LCD_RH:	
  1120  029C                     l1061:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1123                           
  1124  029C  3002               	movlw	2
  1125  029D  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1126  02A2                     l139:	
  1127  02A2  0008               	return
  1128  02A3                     __end_of_LCD_RH:	
  1129                           
  1130                           	psect	text3
  1131  01A6                     __ptext3:	
  1132 ;; *************** function _LCD_PRINT_WP *****************
  1133 ;; Defined at:
  1134 ;;		line 61 in file "LCD.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  x               2    0[BANK0 ] int 
  1137 ;;  y               2    2[BANK0 ] int 
  1138 ;;  frase           1    4[BANK0 ] PTR unsigned char 
  1139 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  location        1    5[BANK0 ] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         0       5       0       0       0
  1152 ;;      Locals:         0       1       0       0       0
  1153 ;;      Temps:          1       0       0       0       0
  1154 ;;      Totals:         1       6       0       0       0
  1155 ;;Total ram usage:        7 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    5
  1158 ;; This function calls:
  1159 ;;		_LCD_CONTROL
  1160 ;;		_LCD_PRINT
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _LCD_PRINT_WP
  1168  01A6                     _LCD_PRINT_WP:	
  1169  01A6                     l1063:	
  1170                           ;incstack = 0
  1171                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1172                           
  1173                           
  1174                           ;LCD.c: 62:     char location;;LCD.c: 63:     switch(y){
  1175  01A6  29B3               	goto	l1071
  1176  01A7                     l1065:	
  1177                           
  1178                           ;LCD.c: 65:             location = 0x80 + x;
  1179  01A7  0820               	movf	LCD_PRINT_WP@x,w
  1180  01A8  3E80               	addlw	128
  1181  01A9  00FA               	movwf	??_LCD_PRINT_WP
  1182  01AA  087A               	movf	??_LCD_PRINT_WP,w
  1183  01AB  00A5               	movwf	LCD_PRINT_WP@location
  1184                           
  1185                           ;LCD.c: 66:             break;
  1186  01AC  29C2               	goto	l1073
  1187  01AD                     l1067:	
  1188                           
  1189                           ;LCD.c: 68:             location = 0xC0 + x;
  1190  01AD  0820               	movf	LCD_PRINT_WP@x,w
  1191  01AE  3EC0               	addlw	192
  1192  01AF  00FA               	movwf	??_LCD_PRINT_WP
  1193  01B0  087A               	movf	??_LCD_PRINT_WP,w
  1194  01B1  00A5               	movwf	LCD_PRINT_WP@location
  1195                           
  1196                           ;LCD.c: 69:             break;
  1197  01B2  29C2               	goto	l1073
  1198  01B3                     l1071:	
  1199                           
  1200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1201                           ; Switch size 1, requested type "simple"
  1202                           ; Number of cases is 1, Range of values is 0 to 0
  1203                           ; switch strategies available:
  1204                           ; Name         Instructions Cycles
  1205                           ; simple_byte            4     3 (average)
  1206                           ; direct_byte           11     8 (fixed)
  1207                           ; jumptable            260     6 (fixed)
  1208                           ;	Chosen strategy is simple_byte
  1209  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1210  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1211  01B5  0823               	movf	LCD_PRINT_WP@y+1,w
  1212  01B6  3A00               	xorlw	0	; case 0
  1213  01B7  1903               	skipnz
  1214  01B8  29BA               	goto	l1171
  1215  01B9  29A7               	goto	l1065
  1216  01BA                     l1171:	
  1217                           
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 2, Range of values is 1 to 2
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte            7     4 (average)
  1223                           ; direct_byte           17    11 (fixed)
  1224                           ; jumptable            263     9 (fixed)
  1225                           ;	Chosen strategy is simple_byte
  1226  01BA  0822               	movf	LCD_PRINT_WP@y,w
  1227  01BB  3A01               	xorlw	1	; case 1
  1228  01BC  1903               	skipnz
  1229  01BD  29A7               	goto	l1065
  1230  01BE  3A03               	xorlw	3	; case 2
  1231  01BF  1903               	skipnz
  1232  01C0  29AD               	goto	l1067
  1233  01C1  29A7               	goto	l1065
  1234  01C2                     l1073:	
  1235                           
  1236                           ;LCD.c: 72:     LCD_CONTROL(location);
  1237  01C2  0825               	movf	LCD_PRINT_WP@location,w
  1238  01C3  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1239  01C8                     l1075:	
  1240                           
  1241                           ;LCD.c: 73:     LCD_PRINT(frase);
  1242  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1243  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1244  01CA  0824               	movf	LCD_PRINT_WP@frase,w
  1245  01CB  120A  118A  221E  120A  118A  	fcall	_LCD_PRINT
  1246  01D0                     l147:	
  1247  01D0  0008               	return
  1248  01D1                     __end_of_LCD_PRINT_WP:	
  1249                           
  1250                           	psect	text4
  1251  021E                     __ptext4:	
  1252 ;; *************** function _LCD_PRINT *****************
  1253 ;; Defined at:
  1254 ;;		line 54 in file "LCD.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  data            1    wreg     PTR unsigned char 
  1257 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  data            1    9[COMMON] PTR unsigned char 
  1260 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0
  1272 ;;      Temps:          1       0       0       0       0
  1273 ;;      Totals:         2       0       0       0       0
  1274 ;;Total ram usage:        2 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    4
  1277 ;; This function calls:
  1278 ;;		_LCD_DATO
  1279 ;; This function is called by:
  1280 ;;		_LCD_PRINT_WP
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _LCD_PRINT
  1286  021E                     _LCD_PRINT:	
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1290                           ;LCD_PRINT@data stored from wreg
  1291  021E  00F9               	movwf	LCD_PRINT@data
  1292  021F                     l995:	
  1293                           
  1294                           ;LCD.c: 55:     while(*data){
  1295  021F  2A30               	goto	l1001
  1296  0220                     l997:	
  1297                           
  1298                           ;LCD.c: 56:         LCD_DATO (*data);
  1299  0220  0879               	movf	LCD_PRINT@data,w
  1300  0221  0084               	movwf	4
  1301  0222  120A  118A  2100  120A  118A  	fcall	stringdir
  1302  0227  120A  118A  2269  120A  118A  	fcall	_LCD_DATO
  1303  022C                     l999:	
  1304                           
  1305                           ;LCD.c: 57:         data++;}}
  1306  022C  3001               	movlw	1
  1307  022D  00F8               	movwf	??_LCD_PRINT
  1308  022E  0878               	movf	??_LCD_PRINT,w
  1309  022F  07F9               	addwf	LCD_PRINT@data,f
  1310  0230                     l1001:	
  1311                           
  1312                           ;LCD.c: 55:     while(*data){
  1313  0230  0879               	movf	LCD_PRINT@data,w
  1314  0231  0084               	movwf	4
  1315  0232  120A  118A  2100  120A  118A  	fcall	stringdir
  1316  0237  3A00               	xorlw	0
  1317  0238  1D03               	skipz
  1318  0239  2A3B               	goto	u161
  1319  023A  2A3C               	goto	u160
  1320  023B                     u161:	
  1321  023B  2A20               	goto	l997
  1322  023C                     u160:	
  1323  023C                     l136:	
  1324  023C  0008               	return
  1325  023D                     __end_of_LCD_PRINT:	
  1326                           
  1327                           	psect	text5
  1328  0269                     __ptext5:	
  1329 ;; *************** function _LCD_DATO *****************
  1330 ;; Defined at:
  1331 ;;		line 43 in file "LCD.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  comando         1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  comando         1    7[COMMON] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0
  1348 ;;      Totals:         1       0       0       0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    3
  1352 ;; This function calls:
  1353 ;;		_LCD_PULSE
  1354 ;;		_delay_us
  1355 ;; This function is called by:
  1356 ;;		_LCD_PRINT
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           
  1361                           ;psect for function _LCD_DATO
  1362  0269                     _LCD_DATO:	
  1363                           
  1364                           ;incstack = 0
  1365                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  1366                           ;LCD_DATO@comando stored from wreg
  1367  0269  00F7               	movwf	LCD_DATO@comando
  1368  026A                     l979:	
  1369                           
  1370                           ;LCD.c: 44:     PORTEbits.RE0 = 1;
  1371  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1372  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1373  026C  1409               	bsf	9,0	;volatile
  1374  026D                     l981:	
  1375                           
  1376                           ;LCD.c: 45:     PORTD = comando;
  1377  026D  0877               	movf	LCD_DATO@comando,w
  1378  026E  0088               	movwf	8	;volatile
  1379  026F                     l983:	
  1380                           
  1381                           ;LCD.c: 46:     LCD_PULSE();
  1382  026F  120A  118A  2256  120A  118A  	fcall	_LCD_PULSE
  1383  0274                     l985:	
  1384                           
  1385                           ;LCD.c: 47:     delay_us(50);
  1386  0274  3032               	movlw	50
  1387  0275  120A  118A  223D  120A  118A  	fcall	_delay_us
  1388  027A                     l127:	
  1389  027A  0008               	return
  1390  027B                     __end_of_LCD_DATO:	
  1391                           
  1392                           	psect	text6
  1393  02A3                     __ptext6:	
  1394 ;; *************** function _LCD_CLEAR *****************
  1395 ;; Defined at:
  1396 ;;		line 50 in file "LCD.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0
  1413 ;;      Totals:         0       0       0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    4
  1417 ;; This function calls:
  1418 ;;		_LCD_CONTROL
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _LCD_CLEAR
  1426  02A3                     _LCD_CLEAR:	
  1427  02A3                     l1059:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1430                           
  1431                           
  1432                           ;LCD.c: 51:     LCD_CONTROL(0x01);}
  1433  02A3  3001               	movlw	1
  1434  02A4  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1435  02A9                     l130:	
  1436  02A9  0008               	return
  1437  02AA                     __end_of_LCD_CLEAR:	
  1438                           
  1439                           	psect	text7
  1440  01D1                     __ptext7:	
  1441 ;; *************** function _INIT_LCD *****************
  1442 ;; Defined at:
  1443 ;;		line 18 in file "LCD.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    4
  1464 ;; This function calls:
  1465 ;;		_LCD_CONTROL
  1466 ;;		_delay_ms
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _INIT_LCD
  1474  01D1                     _INIT_LCD:	
  1475  01D1                     l1041:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1478                           
  1479                           
  1480                           ;LCD.c: 19:     TRISEbits.TRISE0 = 0;
  1481  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1482  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1483  01D3  1009               	bcf	9,0	;volatile
  1484                           
  1485                           ;LCD.c: 20:     TRISEbits.TRISE1 = 0;
  1486  01D4  1089               	bcf	9,1	;volatile
  1487  01D5                     l1043:	
  1488                           
  1489                           ;LCD.c: 21:     TRISD = 0b00000000;
  1490  01D5  0188               	clrf	8	;volatile
  1491  01D6                     l1045:	
  1492                           
  1493                           ;LCD.c: 22:     PORTEbits.RE0 = 0;
  1494  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1495  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1496  01D8  1009               	bcf	9,0	;volatile
  1497  01D9                     l1047:	
  1498                           
  1499                           ;LCD.c: 23:     PORTEbits.RE1 = 0;
  1500  01D9  1089               	bcf	9,1	;volatile
  1501                           
  1502                           ;LCD.c: 24:     PORTD = 0;
  1503  01DA  0188               	clrf	8	;volatile
  1504  01DB                     l1049:	
  1505                           
  1506                           ;LCD.c: 25:     delay_ms(50);
  1507  01DB  3032               	movlw	50
  1508  01DC  120A  118A  2179  120A  118A  	fcall	_delay_ms
  1509  01E1                     l1051:	
  1510                           
  1511                           ;LCD.c: 26:     LCD_CONTROL(0x02);
  1512  01E1  3002               	movlw	2
  1513  01E2  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1514  01E7                     l1053:	
  1515                           
  1516                           ;LCD.c: 27:     LCD_CONTROL(0x38);
  1517  01E7  3038               	movlw	56
  1518  01E8  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1519  01ED                     l1055:	
  1520                           
  1521                           ;LCD.c: 28:     LCD_CONTROL(0x0C);
  1522  01ED  300C               	movlw	12
  1523  01EE  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1524  01F3                     l1057:	
  1525                           
  1526                           ;LCD.c: 29:     LCD_CONTROL(0x06);}
  1527  01F3  3006               	movlw	6
  1528  01F4  120A  118A  227B  120A  118A  	fcall	_LCD_CONTROL
  1529  01F9                     l118:	
  1530  01F9  0008               	return
  1531  01FA                     __end_of_INIT_LCD:	
  1532                           
  1533                           	psect	text8
  1534  027B                     __ptext8:	
  1535 ;; *************** function _LCD_CONTROL *****************
  1536 ;; Defined at:
  1537 ;;		line 31 in file "LCD.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  dato            1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  dato            1    9[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         1       0       0       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    3
  1558 ;; This function calls:
  1559 ;;		_LCD_PULSE
  1560 ;;		_delay_ms
  1561 ;; This function is called by:
  1562 ;;		_INIT_LCD
  1563 ;;		_LCD_CLEAR
  1564 ;;		_LCD_RH
  1565 ;;		_LCD_PRINT_WP
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _LCD_CONTROL
  1571  027B                     _LCD_CONTROL:	
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1575                           ;LCD_CONTROL@dato stored from wreg
  1576  027B  00F9               	movwf	LCD_CONTROL@dato
  1577  027C                     l987:	
  1578                           
  1579                           ;LCD.c: 32:     PORTEbits.RE0 = 0;
  1580  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1581  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1582  027E  1009               	bcf	9,0	;volatile
  1583  027F                     l989:	
  1584                           
  1585                           ;LCD.c: 33:     PORTD = dato;
  1586  027F  0879               	movf	LCD_CONTROL@dato,w
  1587  0280  0088               	movwf	8	;volatile
  1588  0281                     l991:	
  1589                           
  1590                           ;LCD.c: 34:     LCD_PULSE();
  1591  0281  120A  118A  2256  120A  118A  	fcall	_LCD_PULSE
  1592  0286                     l993:	
  1593                           
  1594                           ;LCD.c: 35:     delay_ms(2);}
  1595  0286  3002               	movlw	2
  1596  0287  120A  118A  2179  120A  118A  	fcall	_delay_ms
  1597  028C                     l121:	
  1598  028C  0008               	return
  1599  028D                     __end_of_LCD_CONTROL:	
  1600                           
  1601                           	psect	text9
  1602  0179                     __ptext9:	
  1603 ;; *************** function _delay_ms *****************
  1604 ;; Defined at:
  1605 ;;		line 17 in file "DELAYS.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  dms             1    wreg     unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  dms             1    4[COMMON] unsigned char 
  1610 ;;  j               2    7[COMMON] int 
  1611 ;;  i               2    5[COMMON] int 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, btemp+1
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         5       0       0       0       0
  1623 ;;      Temps:          1       0       0       0       0
  1624 ;;      Totals:         6       0       0       0       0
  1625 ;;Total ram usage:        6 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;;		_INIT_LCD
  1633 ;;		_LCD_CONTROL
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _delay_ms
  1639  0179                     _delay_ms:	
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  1643                           ;delay_ms@dms stored from wreg
  1644  0179  00F4               	movwf	delay_ms@dms
  1645  017A                     l965:	
  1646                           
  1647                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++)
  1648  017A  01F5               	clrf	delay_ms@i
  1649  017B  01F6               	clrf	delay_ms@i+1
  1650  017C  2998               	goto	l81
  1651  017D                     l967:	
  1652                           
  1653                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}}
  1654  017D  01F7               	clrf	delay_ms@j
  1655  017E  01F8               	clrf	delay_ms@j+1
  1656  017F                     l973:	
  1657  017F  3001               	movlw	1
  1658  0180  07F7               	addwf	delay_ms@j,f
  1659  0181  1803               	skipnc
  1660  0182  0AF8               	incf	delay_ms@j+1,f
  1661  0183  3000               	movlw	0
  1662  0184  07F8               	addwf	delay_ms@j+1,f
  1663  0185                     l975:	
  1664  0185  0878               	movf	delay_ms@j+1,w
  1665  0186  3A80               	xorlw	128
  1666  0187  00FF               	movwf	btemp+1
  1667  0188  3080               	movlw	128
  1668  0189  027F               	subwf	btemp+1,w
  1669  018A  1D03               	skipz
  1670  018B  298E               	goto	u145
  1671  018C  30FF               	movlw	255
  1672  018D  0277               	subwf	delay_ms@j,w
  1673  018E                     u145:	
  1674  018E  1C03               	skipc
  1675  018F  2991               	goto	u141
  1676  0190  2992               	goto	u140
  1677  0191                     u141:	
  1678  0191  297F               	goto	l973
  1679  0192                     u140:	
  1680  0192                     l977:	
  1681  0192  3001               	movlw	1
  1682  0193  07F5               	addwf	delay_ms@i,f
  1683  0194  1803               	skipnc
  1684  0195  0AF6               	incf	delay_ms@i+1,f
  1685  0196  3000               	movlw	0
  1686  0197  07F6               	addwf	delay_ms@i+1,f
  1687  0198                     l81:	
  1688  0198  0876               	movf	delay_ms@i+1,w
  1689  0199  3A80               	xorlw	128
  1690  019A  00F3               	movwf	??_delay_ms
  1691  019B  3080               	movlw	128
  1692  019C  0273               	subwf	??_delay_ms,w
  1693  019D  1D03               	skipz
  1694  019E  29A1               	goto	u155
  1695  019F  0874               	movf	delay_ms@dms,w
  1696  01A0  0275               	subwf	delay_ms@i,w
  1697  01A1                     u155:	
  1698  01A1  1C03               	skipc
  1699  01A2  29A4               	goto	u151
  1700  01A3  29A5               	goto	u150
  1701  01A4                     u151:	
  1702  01A4  297D               	goto	l967
  1703  01A5                     u150:	
  1704  01A5                     l86:	
  1705  01A5  0008               	return
  1706  01A6                     __end_of_delay_ms:	
  1707                           
  1708                           	psect	text10
  1709  0256                     __ptext10:	
  1710 ;; *************** function _LCD_PULSE *****************
  1711 ;; Defined at:
  1712 ;;		line 37 in file "LCD.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0
  1729 ;;      Totals:         0       0       0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    2
  1733 ;; This function calls:
  1734 ;;		_delay_us
  1735 ;; This function is called by:
  1736 ;;		_LCD_CONTROL
  1737 ;;		_LCD_DATO
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _LCD_PULSE
  1743  0256                     _LCD_PULSE:	
  1744  0256                     l959:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  1747                           
  1748                           
  1749                           ;LCD.c: 38:     PORTEbits.RE1 = 1;
  1750  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0258  1489               	bsf	9,1	;volatile
  1753  0259                     l961:	
  1754                           
  1755                           ;LCD.c: 39:     delay_us(5);
  1756  0259  3005               	movlw	5
  1757  025A  120A  118A  223D  120A  118A  	fcall	_delay_us
  1758  025F                     l963:	
  1759                           
  1760                           ;LCD.c: 40:     PORTEbits.RE1 = 0;
  1761  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0261  1089               	bcf	9,1	;volatile
  1764                           
  1765                           ;LCD.c: 41:     delay_us(5);}
  1766  0262  3005               	movlw	5
  1767  0263  120A  118A  223D  120A  118A  	fcall	_delay_us
  1768  0268                     l124:	
  1769  0268  0008               	return
  1770  0269                     __end_of_LCD_PULSE:	
  1771                           
  1772                           	psect	text11
  1773  023D                     __ptext11:	
  1774 ;; *************** function _delay_us *****************
  1775 ;; Defined at:
  1776 ;;		line 22 in file "DELAYS.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  ams             1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  ams             1    4[COMMON] unsigned char 
  1781 ;;  j               2    5[COMMON] int 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         3       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0
  1794 ;;      Totals:         4       0       0       0       0
  1795 ;;Total ram usage:        4 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_LCD_PULSE
  1802 ;;		_LCD_DATO
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _delay_us
  1808  023D                     _delay_us:	
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _delay_us: [wreg+status,2]
  1812                           ;delay_us@ams stored from wreg
  1813  023D  00F4               	movwf	delay_us@ams
  1814  023E                     l955:	
  1815                           
  1816                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){
  1817  023E  01F5               	clrf	delay_us@j
  1818  023F  01F6               	clrf	delay_us@j+1
  1819  0240  2A48               	goto	l89
  1820  0241                     l90:	
  1821  0241  0000               	nop	;# 
  1822  0242                     l957:	
  1823  0242  3001               	movlw	1
  1824  0243  07F5               	addwf	delay_us@j,f
  1825  0244  1803               	skipnc
  1826  0245  0AF6               	incf	delay_us@j+1,f
  1827  0246  3000               	movlw	0
  1828  0247  07F6               	addwf	delay_us@j+1,f
  1829  0248                     l89:	
  1830  0248  0876               	movf	delay_us@j+1,w
  1831  0249  3A80               	xorlw	128
  1832  024A  00F3               	movwf	??_delay_us
  1833  024B  3080               	movlw	128
  1834  024C  0273               	subwf	??_delay_us,w
  1835  024D  1D03               	skipz
  1836  024E  2A51               	goto	u135
  1837  024F  0874               	movf	delay_us@ams,w
  1838  0250  0275               	subwf	delay_us@j,w
  1839  0251                     u135:	
  1840  0251  1C03               	skipc
  1841  0252  2A54               	goto	u131
  1842  0253  2A55               	goto	u130
  1843  0254                     u131:	
  1844  0254  2A41               	goto	l90
  1845  0255                     u130:	
  1846  0255                     l92:	
  1847  0255  0008               	return
  1848  0256                     __end_of_delay_us:	
  1849                           
  1850                           	psect	text12
  1851  028D                     __ptext12:	
  1852 ;; *************** function _CONFIG_ADC *****************
  1853 ;; Defined at:
  1854 ;;		line 15 in file "ADC.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		None
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _CONFIG_ADC
  1884  028D                     _CONFIG_ADC:	
  1885  028D                     l1081:	
  1886                           ;incstack = 0
  1887                           ; Regs used in _CONFIG_ADC: []
  1888                           
  1889                           
  1890                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;;ADC.c: 16:     ADCON1bits.ADFM = 0;
  1891  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1892  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1893  028F  139F               	bcf	31,7	;volatile
  1894                           
  1895                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  1896  0290  129F               	bcf	31,5	;volatile
  1897                           
  1898                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  1899  0291  121F               	bcf	31,4	;volatile
  1900                           
  1901                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  1902  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0294  139F               	bcf	31,7	;volatile
  1905                           
  1906                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  1907  0295  171F               	bsf	31,6	;volatile
  1908                           
  1909                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  1910  0296  129F               	bcf	31,5	;volatile
  1911                           
  1912                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  1913  0297  121F               	bcf	31,4	;volatile
  1914                           
  1915                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  1916  0298  119F               	bcf	31,3	;volatile
  1917                           
  1918                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  1919  0299  111F               	bcf	31,2	;volatile
  1920                           
  1921                           ;ADC.c: 25:     ADCON0bits.ADON = 1;;ADC.c: 25:     ADCON0bits.ADON = 1;
  1922  029A  141F               	bsf	31,0	;volatile
  1923  029B                     l99:	
  1924                           ;ADC.c: 26:     return;;ADC.c: 26:     return;
  1925                           
  1926  029B  0008               	return
  1927  029C                     __end_of_CONFIG_ADC:	
  1928                           
  1929                           	psect	text13
  1930  014A                     __ptext13:	
  1931 ;; *************** function _isr *****************
  1932 ;; Defined at:
  1933 ;;		line 30 in file "main.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0
  1949 ;;      Temps:          3       0       0       0       0
  1950 ;;      Totals:         3       0       0       0       0
  1951 ;;Total ram usage:        3 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		Interrupt level 1
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _isr
  1962  014A                     _isr:	
  1963  014A                     i1l1083:	
  1964                           
  1965                           ;main.c: 31:     if (INTCONbits.T0IF == 1){
  1966  014A  1D0B               	btfss	11,2	;volatile
  1967  014B  294D               	goto	u17_21
  1968  014C  294E               	goto	u17_20
  1969  014D                     u17_21:	
  1970  014D  2972               	goto	i1l64
  1971  014E                     u17_20:	
  1972  014E                     i1l1085:	
  1973                           
  1974                           ;main.c: 32:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  1975  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1976  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0150  082A               	movf	_cambiante,w
  1978  0151  1D03               	btfss	3,2
  1979  0152  2954               	goto	u18_21
  1980  0153  2955               	goto	u18_20
  1981  0154                     u18_21:	
  1982  0154  2956               	goto	i1l1089
  1983  0155                     u18_20:	
  1984  0155                     i1l1087:	
  1985  0155  151F               	bsf	31,2	;volatile
  1986  0156                     i1l1089:	
  1987                           
  1988                           ;main.c: 33:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  1989  0156  032A               	decf	_cambiante,w
  1990  0157  1D03               	btfss	3,2
  1991  0158  295A               	goto	u19_21
  1992  0159  295B               	goto	u19_20
  1993  015A                     u19_21:	
  1994  015A  295C               	goto	i1l1093
  1995  015B                     u19_20:	
  1996  015B                     i1l1091:	
  1997  015B  111F               	bcf	31,2	;volatile
  1998  015C                     i1l1093:	
  1999                           
  2000                           ;main.c: 34:         cambiante++;
  2001  015C  3001               	movlw	1
  2002  015D  00F0               	movwf	??_isr
  2003  015E  0870               	movf	??_isr,w
  2004  015F  07AA               	addwf	_cambiante,f
  2005  0160                     i1l1095:	
  2006                           
  2007                           ;main.c: 35:         if (cambiante > 1){cambiante = 0;}
  2008  0160  3002               	movlw	2
  2009  0161  022A               	subwf	_cambiante,w
  2010  0162  1C03               	skipc
  2011  0163  2965               	goto	u20_21
  2012  0164  2966               	goto	u20_20
  2013  0165                     u20_21:	
  2014  0165  2967               	goto	i1l1099
  2015  0166                     u20_20:	
  2016  0166                     i1l1097:	
  2017  0166  01AA               	clrf	_cambiante
  2018  0167                     i1l1099:	
  2019                           
  2020                           ;main.c: 36:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  2021  0167  189F               	btfsc	31,1	;volatile
  2022  0168  296A               	goto	u21_21
  2023  0169  296B               	goto	u21_20
  2024  016A                     u21_21:	
  2025  016A  296D               	goto	i1l63
  2026  016B                     u21_20:	
  2027  016B                     i1l1101:	
  2028  016B  01A9               	clrf	_eADC
  2029  016C  0AA9               	incf	_eADC,f
  2030  016D                     i1l63:	
  2031                           
  2032                           ;main.c: 37:         INTCONbits.T0IF = 0;
  2033  016D  110B               	bcf	11,2	;volatile
  2034  016E                     i1l1103:	
  2035                           
  2036                           ;main.c: 38:         TMR0 = 130;
  2037  016E  3082               	movlw	130
  2038  016F  0081               	movwf	1	;volatile
  2039  0170                     i1l1105:	
  2040                           
  2041                           ;main.c: 39:         eADC = 1;
  2042  0170  01A9               	clrf	_eADC
  2043  0171  0AA9               	incf	_eADC,f
  2044  0172                     i1l64:	
  2045  0172  0872               	movf	??_isr+2,w
  2046  0173  008A               	movwf	10
  2047  0174  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  2048  0175  0083               	movwf	3
  2049  0176  0EFE               	swapf	btemp,f
  2050  0177  0E7E               	swapf	btemp,w
  2051  0178  0009               	retfie
  2052  0179                     __end_of_isr:	
  2053  007E                     btemp	set	126	;btemp
  2054  007E                     wtemp0	set	126
  2055                           
  2056                           	psect	intentry
  2057  0004                     __pintentry:	
  2058                           ;incstack = 0
  2059                           ; Regs used in _isr: [wreg+status,2+status,0]
  2060                           
  2061  0004                     interrupt_function:	
  2062  007E                     saved_w	set	btemp
  2063  0004  00FE               	movwf	btemp
  2064  0005  0E03               	swapf	3,w
  2065  0006  00F1               	movwf	??_isr+1
  2066  0007  080A               	movf	10,w
  2067  0008  00F2               	movwf	??_isr+2
  2068  0009  120A  118A  294A   	ljmp	_isr


Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      7      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_PRINT_WP
    _LCD_RH->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_PRINT_WP

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2063
                                              6 BANK0      1     1      0
                         _CONFIG_ADC
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_PRINT_WP                                         7     2      5    1399
                                             10 COMMON     1     1      0
                                              0 BANK0      6     1      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT                                            2     2      0     192
                                              8 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (3) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     252
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_CONTROL                                          1     1      0     160
                                              9 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0      92
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (3) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 11:27:53 2020

                       pc 0002               __CFG_CP$OFF 0000                        l81 0198  
                      l90 0241                        l92 0255                        l86 01A5  
                      l78 021D                        l89 0248                        l99 029B  
                      fsr 0004                       l121 028C                       l130 02A9  
                     l124 0268                       l118 01F9                       l127 027A  
                     l136 023C                       l147 01D0                       l139 02A2  
                     l961 0259                       l955 023E                       l963 025F  
                     l957 0242                       l973 017F                       l965 017A  
                     l981 026D                       l959 0256                       l975 0185  
                     l967 017D                       l991 0281                       l983 026F  
                     l977 0192                       l993 0286                       l985 0274  
                     l987 027C                       l979 026A                       l995 021F  
                     l989 027F                       l997 0220                       l999 022C  
                     u130 0255                       u131 0254                       u140 0192  
                     u220 00A3                       u141 0191                       u221 00A2  
                     u150 01A5                       u230 00A9                       u135 0251  
                     u151 01A4                       u231 00A8                       u160 023C  
                     u240 00B4                       u145 018E                       u161 023B  
                     u241 00B3                       u155 01A1              __CFG_CPD$OFF 0000  
                     _isr 014A                       fsr0 0004              __CFG_LVP$OFF 0000  
                    l1001 0230                      l1011 0207                      l1003 01FA  
                    l1021 020E                      l1013 0208                      l1005 0202  
                    l1031 0215                      l1023 020F                      l1015 0209  
                    l1007 0203                      l1111 0023                      l1041 01D1  
                    l1033 0216                      l1025 0212                      l1017 020C  
                    l1009 0206                      l1121 0057                      l1113 0028  
                    l1051 01E1                      l1043 01D5                      l1035 0217  
                    l1027 0213                      l1019 020D                      l1131 007F  
                    l1123 005D                      l1115 002D                      l1107 0019  
                    l1053 01E7                      l1045 01D6                      l1061 029C  
                    l1037 0218                      l1029 0214                      l1141 00A4  
                    l1133 0091                      l1125 0062                      l1117 003F  
                    l1109 001E                      l1055 01ED                      l1047 01D9  
                    l1071 01B3                      l1063 01A6                      l1039 0219  
                    l1143 00A9                      l1135 0097                      l1127 0067  
                    l1119 0045                      l1081 028D                      l1057 01F3  
                    l1049 01DB                      l1073 01C2                      l1065 01A7  
                    l1145 00AF                      l1137 009C                      l1129 0079  
                    l1059 02A3                      l1075 01C8                      l1171 01BA  
                    l1067 01AD                      l1147 00B4                      l1139 00A3  
                    l1149 00BA                      ?_isr 0070                      STR_1 0117  
                    STR_2 0139                      STR_3 0128                      STR_4 0106  
                    i1l63 016D                      i1l64 0172        __size_of_LCD_CLEAR 0007  
                    _TMR0 0001                      _eADC 0029              __CFG_WRT$OFF 0000  
          ??_LCD_PRINT_WP 007A        __size_of_LCD_PRINT 001F        __size_of_LCD_PULSE 0013  
                    _main 0019                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F          __end_of_LCD_DATO 027B  
                   ??_isr 0070          __end_of_INIT_LCD 01FA                     ?_main 0070  
           __CFG_WDTE$OFF 0000             LCD_PRINT@data 0079                     _ANSEL 0188  
                   u20_20 0166                     u20_21 0165                     u21_20 016B  
                   u21_21 016A             LCD_PRINT_WP@x 0020             LCD_PRINT_WP@y 0022  
                   u17_20 014E                     u17_21 014D                     u18_20 0155  
                   u18_21 0154                     u19_20 015B                     u19_21 015A  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000                     _setup 01FA            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00BF  
       __end_of_LCD_CLEAR 02AA         __end_of_LCD_PRINT 023D                    ??_main 0026  
       __end_of_LCD_PULSE 0269                    _ADCAN0 0028                    _ADCAN1 0027  
                  _ADRESH 001E                    ?_setup 0070                    _ANSELH 0189  
                  _LCD_RH 029C                    i1l1101 016B                    i1l1103 016E  
                  i1l1105 0170                    i1l1091 015B                    i1l1083 014A  
                  i1l1093 015C                    i1l1085 014E                    i1l1095 0160  
                  i1l1087 0155                    i1l1097 0166                    i1l1089 0156  
                  i1l1099 0167      __size_of_LCD_CONTROL 0012          __end_of_delay_ms 01A6  
        __end_of_delay_us 0256            __CFG_PWRTE$OFF 0000      __end_of_LCD_PRINT_WP 01D1  
            ??_CONFIG_ADC 0073                    saved_w 007E                 ?_LCD_DATO 0070  
 __end_of__initialization 0015                 ?_INIT_LCD 0070            __pcstackCOMMON 0070  
      __end_of_CONFIG_ADC 029C             __end_of_setup 021E            _OPTION_REGbits 0081  
                 ??_setup 0073                __pbssBANK0 0027                   ?_LCD_RH 0070  
              ??_LCD_DATO 0077                ??_INIT_LCD 007A                __pmaintext 0019  
              __pintentry 0004                 ?_delay_ms 0070                 ?_delay_us 0070  
              __stringtab 0100           __size_of_LCD_RH 0007     __size_of_LCD_PRINT_WP 002B  
                 __ptext1 01FA                   __ptext2 029C                   __ptext3 01A6  
                 __ptext4 021E                   __ptext5 0269                   __ptext6 02A3  
                 __ptext7 01D1                   __ptext8 027B                   __ptext9 0179  
            __size_of_isr 002F                 _LCD_CLEAR 02A3                 _LCD_PRINT 021E  
              ??_delay_ms 0073                 _LCD_PULSE 0256                ??_delay_us 0073  
    end_of_initialization 0015              _LCD_PRINT_WP 01A6         LCD_PRINT_WP@frase 0024  
               _PORTEbits 0009                ?_LCD_CLEAR 0070                ?_LCD_PRINT 0070  
              ?_LCD_PULSE 0070                 _TRISEbits 0089             ??_LCD_CONTROL 0079  
          __end_of_LCD_RH 02A3         __size_of_LCD_DATO 0012         __size_of_INIT_LCD 0029  
     start_initialization 000F               __end_of_isr 0179                  ??_LCD_RH 007A  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_LCD_CONTROL 028D               ??_LCD_CLEAR 007A  
               ___latbits 0002               ??_LCD_PRINT 0078               ??_LCD_PULSE 0077  
           __pcstackBANK0 0020         __size_of_delay_ms 002D         __size_of_delay_us 0019  
               _cambiante 002A                 __pstrings 0100            __size_of_setup 0024  
                _LCD_DATO 0269               _LCD_CONTROL 027B         interrupt_function 0004  
               delay_ms@i 0075                 delay_ms@j 0077                  _INIT_LCD 01D1  
               delay_us@j 0075                _ADCON0bits 001F               __stringbase 0105  
              _ADCON1bits 009F           LCD_DATO@comando 0077      LCD_PRINT_WP@location 0025  
      __end_of__stringtab 0106                _CONFIG_ADC 028D                  _delay_ms 0179  
                _delay_us 023D                  __ptext10 0256                  __ptext11 023D  
                __ptext12 028D                  __ptext13 014A         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 00A6               delay_ms@dms 0074               delay_us@ams 0074  
              _INTCONbits 000B                  intlevel1 0000           LCD_CONTROL@dato 0079  
               stringcode 0100               ?_CONFIG_ADC 0070                  stringdir 0100  
                stringtab 0100              ?_LCD_CONTROL 0070             ?_LCD_PRINT_WP 0020  
