

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 09:50:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  0009                     _PORTEbits	set	9
   448  0009                     _PORTE	set	9
   449  0008                     _PORTD	set	8
   450  0007                     _PORTC	set	7
   451  0006                     _PORTB	set	6
   452  001E                     _ADRESH	set	30
   453  0001                     _TMR0	set	1
   454  001F                     _ADCON0bits	set	31
   455  000B                     _INTCONbits	set	11
   456  0089                     _TRISEbits	set	137
   457  009F                     _ADCON1bits	set	159
   458  0081                     _OPTION_REGbits	set	129
   459  0089                     _TRISE	set	137
   460  0088                     _TRISD	set	136
   461  0087                     _TRISC	set	135
   462  0086                     _TRISB	set	134
   463  0085                     _TRISA	set	133
   464  0189                     _ANSELH	set	393
   465  0188                     _ANSEL	set	392
   466                           
   467                           ; #config settings
   468  0000                     
   469                           	psect	cinit
   470  000F                     start_initialization:	
   471  000F                     __initialization:	
   472                           
   473                           ; Clear objects allocated to COMMON
   474  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   475  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   476  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK0
   479  0012  1283               	bcf	3,5	;RP0=0, select bank0
   480  0013  1303               	bcf	3,6	;RP1=0, select bank0
   481  0014  01A6               	clrf	__pbssBANK0& (0+127)
   482  0015                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  0015                     __end_of__initialization:	
   486  0015  0183               	clrf	3
   487  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssCOMMON
   490  0078                     __pbssCOMMON:	
   491  0078                     _ADCAN0:	
   492  0078                     	ds	1
   493  0079                     _eADC:	
   494  0079                     	ds	1
   495  007A                     _cambiante:	
   496  007A                     	ds	1
   497                           
   498                           	psect	bssBANK0
   499  0026                     __pbssBANK0:	
   500  0026                     _ADCAN1:	
   501  0026                     	ds	1
   502                           
   503                           	psect	cstackCOMMON
   504  0070                     __pcstackCOMMON:	
   505  0070                     ?_setup:	
   506  0070                     ?_INIT_LCD:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_LCD_CLEAR:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_LCD_DATO:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_CONFIG_ADC:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_lcd_control:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_LCD_PULSE:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_isr:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ??_isr:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_main:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_delay_ms:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_delay_us:	
   537                           ; 1 bytes @ 0x0
   538                           
   539                           
   540                           ; 1 bytes @ 0x0
   541  0070                     	ds	3
   542  0073                     ??_setup:	
   543  0073                     ??_CONFIG_ADC:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  0073                     ??_delay_ms:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0073                     ??_delay_us:	
   550                           ; 1 bytes @ 0x3
   551                           
   552                           
   553                           ; 1 bytes @ 0x3
   554  0073                     	ds	1
   555  0074                     delay_us@ams:	
   556                           
   557                           ; 1 bytes @ 0x4
   558  0074                     	ds	1
   559  0075                     delay_us@j:	
   560                           
   561                           ; 2 bytes @ 0x5
   562  0075                     	ds	2
   563  0077                     ??_LCD_DATO:	
   564  0077                     ??_lcd_control:	
   565                           ; 1 bytes @ 0x7
   566                           
   567  0077                     ??_LCD_PULSE:	
   568                           ; 1 bytes @ 0x7
   569                           
   570  0077                     lcd_control@dato:	
   571                           ; 1 bytes @ 0x7
   572                           
   573  0077                     LCD_DATO@comando:	
   574                           ; 1 bytes @ 0x7
   575                           
   576                           
   577                           ; 1 bytes @ 0x7
   578  0077                     	ds	1
   579  0078                     ??_INIT_LCD:	
   580  0078                     ??_LCD_CLEAR:	
   581                           ; 1 bytes @ 0x8
   582                           
   583                           
   584                           	psect	cstackBANK0
   585  0020                     __pcstackBANK0:	
   586                           ; 1 bytes @ 0x8
   587                           
   588  0020                     delay_ms@dms:	
   589                           
   590                           ; 1 bytes @ 0x0
   591  0020                     	ds	1
   592  0021                     delay_ms@i:	
   593                           
   594                           ; 2 bytes @ 0x1
   595  0021                     	ds	2
   596  0023                     delay_ms@j:	
   597                           
   598                           ; 2 bytes @ 0x3
   599  0023                     	ds	2
   600  0025                     ??_main:	
   601                           
   602                           ; 1 bytes @ 0x5
   603  0025                     	ds	1
   604                           
   605                           	psect	maintext
   606  0019                     __pmaintext:	
   607 ;;
   608 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   609 ;;
   610 ;; *************** function _main *****************
   611 ;; Defined at:
   612 ;;		line 42 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : B00/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       1       0       0       0
   629 ;;      Totals:         0       1       0       0       0
   630 ;;Total ram usage:        1 bytes
   631 ;; Hardware stack levels required when called:    5
   632 ;; This function calls:
   633 ;;		_CONFIG_ADC
   634 ;;		_INIT_LCD
   635 ;;		_LCD_CLEAR
   636 ;;		_LCD_DATO
   637 ;;		_setup
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _main
   645  0019                     _main:	
   646  0019                     l1028:	
   647                           ;incstack = 0
   648                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   649                           
   650                           
   651                           ;main.c: 43:     setup();
   652  0019  120A  118A  20EB  120A  118A  	fcall	_setup
   653  001E                     l1030:	
   654                           
   655                           ;main.c: 44:     INIT_LCD();
   656  001E  120A  118A  20C2  120A  118A  	fcall	_INIT_LCD
   657  0023                     l1032:	
   658                           
   659                           ;main.c: 45:     LCD_CLEAR();
   660  0023  120A  118A  216E  120A  118A  	fcall	_LCD_CLEAR
   661                           
   662                           ;main.c: 46:     LCD_DATO (0b10000000);
   663  0028  3080               	movlw	128
   664  0029  120A  118A  213B  120A  118A  	fcall	_LCD_DATO
   665  002E                     l1034:	
   666                           
   667                           ;main.c: 47:     CONFIG_ADC();
   668  002E  120A  118A  215F  120A  118A  	fcall	_CONFIG_ADC
   669  0033                     l1036:	
   670                           
   671                           ;main.c: 49:         if (eADC == 1){
   672  0033  0379               	decf	_eADC,w
   673  0034  1D03               	btfss	3,2
   674  0035  2837               	goto	u201
   675  0036  2838               	goto	u200
   676  0037                     u201:	
   677  0037  2833               	goto	l1036
   678  0038                     u200:	
   679  0038                     l1038:	
   680                           
   681                           ;main.c: 50:             eADC = 0;
   682  0038  01F9               	clrf	_eADC
   683  0039                     l1040:	
   684                           
   685                           ;main.c: 51:             if (cambiante == 0){ADCAN0 = ADRESH; PORTB = ADCAN0;}
   686  0039  087A               	movf	_cambiante,w
   687  003A  1D03               	btfss	3,2
   688  003B  283D               	goto	u211
   689  003C  283E               	goto	u210
   690  003D                     u211:	
   691  003D  2846               	goto	l1044
   692  003E                     u210:	
   693  003E                     l1042:	
   694  003E  1283               	bcf	3,5	;RP0=0, select bank0
   695  003F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0040  081E               	movf	30,w	;volatile
   697  0041  00A5               	movwf	??_main
   698  0042  0825               	movf	??_main,w
   699  0043  00F8               	movwf	_ADCAN0
   700  0044  0878               	movf	_ADCAN0,w
   701  0045  0086               	movwf	6	;volatile
   702  0046                     l1044:	
   703                           
   704                           ;main.c: 52:             if (cambiante == 1){ADCAN1 = ADRESH; PORTC = ADCAN1;}
   705  0046  037A               	decf	_cambiante,w
   706  0047  1D03               	btfss	3,2
   707  0048  284A               	goto	u221
   708  0049  284B               	goto	u220
   709  004A                     u221:	
   710  004A  2853               	goto	l1048
   711  004B                     u220:	
   712  004B                     l1046:	
   713  004B  1283               	bcf	3,5	;RP0=0, select bank0
   714  004C  1303               	bcf	3,6	;RP1=0, select bank0
   715  004D  081E               	movf	30,w	;volatile
   716  004E  00A5               	movwf	??_main
   717  004F  0825               	movf	??_main,w
   718  0050  00A6               	movwf	_ADCAN1
   719  0051  0826               	movf	_ADCAN1,w
   720  0052  0087               	movwf	7	;volatile
   721  0053                     l1048:	
   722                           
   723                           ;main.c: 53:             ADCON0bits.GO_DONE = 1;}
   724  0053  1283               	bcf	3,5	;RP0=0, select bank0
   725  0054  1303               	bcf	3,6	;RP1=0, select bank0
   726  0055  149F               	bsf	31,1	;volatile
   727  0056  2833               	goto	l1036
   728  0057  120A  118A  280C   	ljmp	start
   729  005A                     __end_of_main:	
   730                           
   731                           	psect	text1
   732  00EB                     __ptext1:	
   733 ;; *************** function _setup *****************
   734 ;; Defined at:
   735 ;;		line 63 in file "main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _setup
   765  00EB                     _setup:	
   766  00EB                     l896:	
   767                           ;incstack = 0
   768                           ; Regs used in _setup: [wreg+status,2]
   769                           
   770                           
   771                           ;main.c: 65:     TRISA = 0b00000011;
   772  00EB  3003               	movlw	3
   773  00EC  1683               	bsf	3,5	;RP0=1, select bank1
   774  00ED  1303               	bcf	3,6	;RP1=0, select bank1
   775  00EE  0085               	movwf	5	;volatile
   776                           
   777                           ;main.c: 66:     ANSEL = 0b00000011;
   778  00EF  3003               	movlw	3
   779  00F0  1683               	bsf	3,5	;RP0=1, select bank3
   780  00F1  1703               	bsf	3,6	;RP1=1, select bank3
   781  00F2  0088               	movwf	8	;volatile
   782  00F3                     l898:	
   783                           
   784                           ;main.c: 67:     ANSELH = 0b00000000;
   785  00F3  0189               	clrf	9	;volatile
   786  00F4                     l900:	
   787                           
   788                           ;main.c: 68:     TRISB = 0b00000000;
   789  00F4  1683               	bsf	3,5	;RP0=1, select bank1
   790  00F5  1303               	bcf	3,6	;RP1=0, select bank1
   791  00F6  0186               	clrf	6	;volatile
   792  00F7                     l902:	
   793                           
   794                           ;main.c: 69:     TRISC = 0b00000000;
   795  00F7  0187               	clrf	7	;volatile
   796  00F8                     l904:	
   797                           
   798                           ;main.c: 70:     TRISD = 0b00000000;
   799  00F8  0188               	clrf	8	;volatile
   800  00F9                     l906:	
   801                           
   802                           ;main.c: 71:     TRISE = 0b0000;
   803  00F9  0189               	clrf	9	;volatile
   804  00FA                     l908:	
   805                           
   806                           ;main.c: 72:     PORTB = 0b00000000;
   807  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   808  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   809  00FC  0186               	clrf	6	;volatile
   810  00FD                     l910:	
   811                           
   812                           ;main.c: 73:     PORTC = 0b00000000;
   813  00FD  0187               	clrf	7	;volatile
   814  00FE                     l912:	
   815                           
   816                           ;main.c: 74:     PORTD = 0b00000000;
   817  00FE  0188               	clrf	8	;volatile
   818  00FF                     l914:	
   819                           
   820                           ;main.c: 75:     PORTE = 0b0000;
   821  00FF  0189               	clrf	9	;volatile
   822  0100                     l916:	
   823                           
   824                           ;main.c: 78:     OPTION_REGbits.T0CS = 0;
   825  0100  1683               	bsf	3,5	;RP0=1, select bank1
   826  0101  1303               	bcf	3,6	;RP1=0, select bank1
   827  0102  1281               	bcf	1,5	;volatile
   828  0103                     l918:	
   829                           
   830                           ;main.c: 79:     OPTION_REGbits.PSA = 0;
   831  0103  1181               	bcf	1,3	;volatile
   832  0104                     l920:	
   833                           
   834                           ;main.c: 80:     OPTION_REGbits.PS0 = 0;
   835  0104  1001               	bcf	1,0	;volatile
   836  0105                     l922:	
   837                           
   838                           ;main.c: 81:     OPTION_REGbits.PS1 = 1;
   839  0105  1481               	bsf	1,1	;volatile
   840  0106                     l924:	
   841                           
   842                           ;main.c: 82:     OPTION_REGbits.PS2 = 0;
   843  0106  1101               	bcf	1,2	;volatile
   844  0107                     l926:	
   845                           
   846                           ;main.c: 83:     INTCONbits.T0IE = 1;
   847  0107  168B               	bsf	11,5	;volatile
   848  0108                     l928:	
   849                           
   850                           ;main.c: 84:     INTCONbits.T0IF = 0;
   851  0108  110B               	bcf	11,2	;volatile
   852  0109                     l930:	
   853                           
   854                           ;main.c: 85:     INTCONbits.GIE = 1;
   855  0109  178B               	bsf	11,7	;volatile
   856  010A                     l932:	
   857                           
   858                           ;main.c: 86:     TMR0 = 130;
   859  010A  3082               	movlw	130
   860  010B  1283               	bcf	3,5	;RP0=0, select bank0
   861  010C  1303               	bcf	3,6	;RP1=0, select bank0
   862  010D  0081               	movwf	1	;volatile
   863  010E                     l74:	
   864  010E  0008               	return
   865  010F                     __end_of_setup:	
   866                           
   867                           	psect	text2
   868  013B                     __ptext2:	
   869 ;; *************** function _LCD_DATO *****************
   870 ;; Defined at:
   871 ;;		line 43 in file "LCD.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  comando         1    wreg     unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  comando         1    7[COMMON] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, pclath, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0
   888 ;;      Totals:         1       0       0       0       0
   889 ;;Total ram usage:        1 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    3
   892 ;; This function calls:
   893 ;;		_LCD_PULSE
   894 ;;		_delay_us
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _LCD_DATO
   902  013B                     _LCD_DATO:	
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
   906                           ;LCD_DATO@comando stored from wreg
   907  013B  00F7               	movwf	LCD_DATO@comando
   908  013C                     l954:	
   909                           
   910                           ;LCD.c: 44:     PORTEbits.RE0 = 1;
   911  013C  1283               	bcf	3,5	;RP0=0, select bank0
   912  013D  1303               	bcf	3,6	;RP1=0, select bank0
   913  013E  1409               	bsf	9,0	;volatile
   914  013F                     l956:	
   915                           
   916                           ;LCD.c: 45:     PORTD = comando;
   917  013F  0877               	movf	LCD_DATO@comando,w
   918  0140  0088               	movwf	8	;volatile
   919  0141                     l958:	
   920                           
   921                           ;LCD.c: 46:     LCD_PULSE();
   922  0141  120A  118A  2128  120A  118A  	fcall	_LCD_PULSE
   923  0146                     l960:	
   924                           
   925                           ;LCD.c: 47:     delay_us(50);
   926  0146  3032               	movlw	50
   927  0147  120A  118A  210F  120A  118A  	fcall	_delay_us
   928  014C                     l123:	
   929  014C  0008               	return
   930  014D                     __end_of_LCD_DATO:	
   931                           
   932                           	psect	text3
   933  016E                     __ptext3:	
   934 ;; *************** function _LCD_CLEAR *****************
   935 ;; Defined at:
   936 ;;		line 50 in file "LCD.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    4
   957 ;; This function calls:
   958 ;;		_lcd_control
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function _LCD_CLEAR
   966  016E                     _LCD_CLEAR:	
   967  016E                     l1026:	
   968                           ;incstack = 0
   969                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   970                           
   971                           
   972                           ;LCD.c: 51:     lcd_control(0x01);}
   973  016E  3001               	movlw	1
   974  016F  120A  118A  214D  120A  118A  	fcall	_lcd_control
   975  0174                     l126:	
   976  0174  0008               	return
   977  0175                     __end_of_LCD_CLEAR:	
   978                           
   979                           	psect	text4
   980  00C2                     __ptext4:	
   981 ;; *************** function _INIT_LCD *****************
   982 ;; Defined at:
   983 ;;		line 18 in file "LCD.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    4
  1004 ;; This function calls:
  1005 ;;		_delay_ms
  1006 ;;		_lcd_control
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _INIT_LCD
  1014  00C2                     _INIT_LCD:	
  1015  00C2                     l1008:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1018                           
  1019                           
  1020                           ;LCD.c: 19:     TRISEbits.TRISE0 = 0;
  1021  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1022  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1023  00C4  1009               	bcf	9,0	;volatile
  1024                           
  1025                           ;LCD.c: 20:     TRISEbits.TRISE1 = 0;
  1026  00C5  1089               	bcf	9,1	;volatile
  1027  00C6                     l1010:	
  1028                           
  1029                           ;LCD.c: 21:     TRISD = 0b00000000;
  1030  00C6  0188               	clrf	8	;volatile
  1031  00C7                     l1012:	
  1032                           
  1033                           ;LCD.c: 22:     PORTEbits.RE0 = 0;
  1034  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1035  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1036  00C9  1009               	bcf	9,0	;volatile
  1037  00CA                     l1014:	
  1038                           
  1039                           ;LCD.c: 23:     PORTEbits.RE1 = 0;
  1040  00CA  1089               	bcf	9,1	;volatile
  1041                           
  1042                           ;LCD.c: 24:     PORTD = 0;
  1043  00CB  0188               	clrf	8	;volatile
  1044  00CC                     l1016:	
  1045                           
  1046                           ;LCD.c: 25:     delay_ms(50);
  1047  00CC  3032               	movlw	50
  1048  00CD  120A  118A  205A  120A  118A  	fcall	_delay_ms
  1049  00D2                     l1018:	
  1050                           
  1051                           ;LCD.c: 26:     lcd_control(0x02);
  1052  00D2  3002               	movlw	2
  1053  00D3  120A  118A  214D  120A  118A  	fcall	_lcd_control
  1054  00D8                     l1020:	
  1055                           
  1056                           ;LCD.c: 27:     lcd_control(0x38);
  1057  00D8  3038               	movlw	56
  1058  00D9  120A  118A  214D  120A  118A  	fcall	_lcd_control
  1059  00DE                     l1022:	
  1060                           
  1061                           ;LCD.c: 28:     lcd_control(0x0C);
  1062  00DE  300C               	movlw	12
  1063  00DF  120A  118A  214D  120A  118A  	fcall	_lcd_control
  1064  00E4                     l1024:	
  1065                           
  1066                           ;LCD.c: 29:     lcd_control(0x06);}
  1067  00E4  3006               	movlw	6
  1068  00E5  120A  118A  214D  120A  118A  	fcall	_lcd_control
  1069  00EA                     l114:	
  1070  00EA  0008               	return
  1071  00EB                     __end_of_INIT_LCD:	
  1072                           
  1073                           	psect	text5
  1074  014D                     __ptext5:	
  1075 ;; *************** function _lcd_control *****************
  1076 ;; Defined at:
  1077 ;;		line 31 in file "LCD.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  dato            1    wreg     unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  dato            1    7[COMMON] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         1       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0
  1094 ;;      Totals:         1       0       0       0       0
  1095 ;;Total ram usage:        1 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    3
  1098 ;; This function calls:
  1099 ;;		_LCD_PULSE
  1100 ;;		_delay_ms
  1101 ;; This function is called by:
  1102 ;;		_INIT_LCD
  1103 ;;		_LCD_CLEAR
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _lcd_control
  1109  014D                     _lcd_control:	
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _lcd_control: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1113                           ;lcd_control@dato stored from wreg
  1114  014D  00F7               	movwf	lcd_control@dato
  1115  014E                     l1000:	
  1116                           
  1117                           ;LCD.c: 32:     PORTEbits.RE0 = 0;
  1118  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1119  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0150  1009               	bcf	9,0	;volatile
  1121  0151                     l1002:	
  1122                           
  1123                           ;LCD.c: 33:     PORTD = dato;
  1124  0151  0877               	movf	lcd_control@dato,w
  1125  0152  0088               	movwf	8	;volatile
  1126  0153                     l1004:	
  1127                           
  1128                           ;LCD.c: 34:     LCD_PULSE();
  1129  0153  120A  118A  2128  120A  118A  	fcall	_LCD_PULSE
  1130  0158                     l1006:	
  1131                           
  1132                           ;LCD.c: 35:     delay_ms(2);}
  1133  0158  3002               	movlw	2
  1134  0159  120A  118A  205A  120A  118A  	fcall	_delay_ms
  1135  015E                     l117:	
  1136  015E  0008               	return
  1137  015F                     __end_of_lcd_control:	
  1138                           
  1139                           	psect	text6
  1140  005A                     __ptext6:	
  1141 ;; *************** function _delay_ms *****************
  1142 ;; Defined at:
  1143 ;;		line 17 in file "DELAYS.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  dms             1    wreg     unsigned char 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  dms             1    0[BANK0 ] unsigned char 
  1148 ;;  j               2    3[BANK0 ] int 
  1149 ;;  i               2    1[BANK0 ] int 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, btemp+1
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         0       5       0       0       0
  1161 ;;      Temps:          1       0       0       0       0
  1162 ;;      Totals:         1       5       0       0       0
  1163 ;;Total ram usage:        6 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_INIT_LCD
  1170 ;;		_lcd_control
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _delay_ms
  1176  005A                     _delay_ms:	
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  1180                           ;delay_ms@dms stored from wreg
  1181  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1182  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1183  005C  00A0               	movwf	delay_ms@dms
  1184  005D                     l986:	
  1185                           
  1186                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++)
  1187  005D  01A1               	clrf	delay_ms@i
  1188  005E  01A2               	clrf	delay_ms@i+1
  1189  005F  2881               	goto	l77
  1190  0060                     l988:	
  1191                           
  1192                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}}
  1193  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0062  01A3               	clrf	delay_ms@j
  1196  0063  01A4               	clrf	delay_ms@j+1
  1197  0064                     l994:	
  1198  0064  3001               	movlw	1
  1199  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0067  07A3               	addwf	delay_ms@j,f
  1202  0068  1803               	skipnc
  1203  0069  0AA4               	incf	delay_ms@j+1,f
  1204  006A  3000               	movlw	0
  1205  006B  07A4               	addwf	delay_ms@j+1,f
  1206  006C                     l996:	
  1207  006C  0824               	movf	delay_ms@j+1,w
  1208  006D  3A80               	xorlw	128
  1209  006E  00FF               	movwf	btemp+1
  1210  006F  3080               	movlw	128
  1211  0070  027F               	subwf	btemp+1,w
  1212  0071  1D03               	skipz
  1213  0072  2875               	goto	u185
  1214  0073  30FF               	movlw	255
  1215  0074  0223               	subwf	delay_ms@j,w
  1216  0075                     u185:	
  1217  0075  1C03               	skipc
  1218  0076  2878               	goto	u181
  1219  0077  2879               	goto	u180
  1220  0078                     u181:	
  1221  0078  2864               	goto	l994
  1222  0079                     u180:	
  1223  0079                     l998:	
  1224  0079  3001               	movlw	1
  1225  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1226  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1227  007C  07A1               	addwf	delay_ms@i,f
  1228  007D  1803               	skipnc
  1229  007E  0AA2               	incf	delay_ms@i+1,f
  1230  007F  3000               	movlw	0
  1231  0080  07A2               	addwf	delay_ms@i+1,f
  1232  0081                     l77:	
  1233  0081  0822               	movf	delay_ms@i+1,w
  1234  0082  3A80               	xorlw	128
  1235  0083  00F3               	movwf	??_delay_ms
  1236  0084  3080               	movlw	128
  1237  0085  0273               	subwf	??_delay_ms,w
  1238  0086  1D03               	skipz
  1239  0087  288A               	goto	u195
  1240  0088  0820               	movf	delay_ms@dms,w
  1241  0089  0221               	subwf	delay_ms@i,w
  1242  008A                     u195:	
  1243  008A  1C03               	skipc
  1244  008B  288D               	goto	u191
  1245  008C  288E               	goto	u190
  1246  008D                     u191:	
  1247  008D  2860               	goto	l988
  1248  008E                     u190:	
  1249  008E                     l82:	
  1250  008E  0008               	return
  1251  008F                     __end_of_delay_ms:	
  1252                           
  1253                           	psect	text7
  1254  0128                     __ptext7:	
  1255 ;; *************** function _LCD_PULSE *****************
  1256 ;; Defined at:
  1257 ;;		line 37 in file "LCD.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    2
  1278 ;; This function calls:
  1279 ;;		_delay_us
  1280 ;; This function is called by:
  1281 ;;		_lcd_control
  1282 ;;		_LCD_DATO
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _LCD_PULSE
  1288  0128                     _LCD_PULSE:	
  1289  0128                     l882:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  1292                           
  1293                           
  1294                           ;LCD.c: 38:     PORTEbits.RE1 = 1;
  1295  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1297  012A  1489               	bsf	9,1	;volatile
  1298  012B                     l884:	
  1299                           
  1300                           ;LCD.c: 39:     delay_us(5);
  1301  012B  3005               	movlw	5
  1302  012C  120A  118A  210F  120A  118A  	fcall	_delay_us
  1303  0131                     l886:	
  1304                           
  1305                           ;LCD.c: 40:     PORTEbits.RE1 = 0;
  1306  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0133  1089               	bcf	9,1	;volatile
  1309                           
  1310                           ;LCD.c: 41:     delay_us(5);}
  1311  0134  3005               	movlw	5
  1312  0135  120A  118A  210F  120A  118A  	fcall	_delay_us
  1313  013A                     l120:	
  1314  013A  0008               	return
  1315  013B                     __end_of_LCD_PULSE:	
  1316                           
  1317                           	psect	text8
  1318  010F                     __ptext8:	
  1319 ;; *************** function _delay_us *****************
  1320 ;; Defined at:
  1321 ;;		line 22 in file "DELAYS.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  ams             1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  ams             1    4[COMMON] unsigned char 
  1326 ;;  j               2    5[COMMON] int 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       0       0       0       0
  1337 ;;      Locals:         3       0       0       0       0
  1338 ;;      Temps:          1       0       0       0       0
  1339 ;;      Totals:         4       0       0       0       0
  1340 ;;Total ram usage:        4 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_LCD_PULSE
  1347 ;;		_LCD_DATO
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _delay_us
  1353  010F                     _delay_us:	
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _delay_us: [wreg+status,2]
  1357                           ;delay_us@ams stored from wreg
  1358  010F  00F4               	movwf	delay_us@ams
  1359  0110                     l864:	
  1360                           
  1361                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){
  1362  0110  01F5               	clrf	delay_us@j
  1363  0111  01F6               	clrf	delay_us@j+1
  1364  0112  291A               	goto	l85
  1365  0113                     l86:	
  1366  0113  0000               	nop	;# 
  1367  0114                     l866:	
  1368  0114  3001               	movlw	1
  1369  0115  07F5               	addwf	delay_us@j,f
  1370  0116  1803               	skipnc
  1371  0117  0AF6               	incf	delay_us@j+1,f
  1372  0118  3000               	movlw	0
  1373  0119  07F6               	addwf	delay_us@j+1,f
  1374  011A                     l85:	
  1375  011A  0876               	movf	delay_us@j+1,w
  1376  011B  3A80               	xorlw	128
  1377  011C  00F3               	movwf	??_delay_us
  1378  011D  3080               	movlw	128
  1379  011E  0273               	subwf	??_delay_us,w
  1380  011F  1D03               	skipz
  1381  0120  2923               	goto	u125
  1382  0121  0874               	movf	delay_us@ams,w
  1383  0122  0275               	subwf	delay_us@j,w
  1384  0123                     u125:	
  1385  0123  1C03               	skipc
  1386  0124  2926               	goto	u121
  1387  0125  2927               	goto	u120
  1388  0126                     u121:	
  1389  0126  2913               	goto	l86
  1390  0127                     u120:	
  1391  0127                     l88:	
  1392  0127  0008               	return
  1393  0128                     __end_of_delay_us:	
  1394                           
  1395                           	psect	text9
  1396  015F                     __ptext9:	
  1397 ;; *************** function _CONFIG_ADC *****************
  1398 ;; Defined at:
  1399 ;;		line 15 in file "ADC.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		None
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _CONFIG_ADC
  1429  015F                     _CONFIG_ADC:	
  1430  015F                     l962:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _CONFIG_ADC: []
  1433                           
  1434                           
  1435                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;;ADC.c: 16:     ADCON1bits.ADFM = 0;
  1436  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0161  139F               	bcf	31,7	;volatile
  1439                           
  1440                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  1441  0162  129F               	bcf	31,5	;volatile
  1442                           
  1443                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  1444  0163  121F               	bcf	31,4	;volatile
  1445                           
  1446                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  1447  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0166  139F               	bcf	31,7	;volatile
  1450                           
  1451                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  1452  0167  171F               	bsf	31,6	;volatile
  1453                           
  1454                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  1455  0168  129F               	bcf	31,5	;volatile
  1456                           
  1457                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  1458  0169  121F               	bcf	31,4	;volatile
  1459                           
  1460                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  1461  016A  119F               	bcf	31,3	;volatile
  1462                           
  1463                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  1464  016B  111F               	bcf	31,2	;volatile
  1465                           
  1466                           ;ADC.c: 25:     ADCON0bits.ADON = 1;;ADC.c: 25:     ADCON0bits.ADON = 1;
  1467  016C  141F               	bsf	31,0	;volatile
  1468  016D                     l95:	
  1469                           ;ADC.c: 26:     return;;ADC.c: 26:     return;
  1470                           
  1471  016D  0008               	return
  1472  016E                     __end_of_CONFIG_ADC:	
  1473                           
  1474                           	psect	text10
  1475  008F                     __ptext10:	
  1476 ;; *************** function _isr *****************
  1477 ;; Defined at:
  1478 ;;		line 30 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          3       0       0       0       0
  1495 ;;      Totals:         3       0       0       0       0
  1496 ;;Total ram usage:        3 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		Interrupt level 1
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _isr
  1507  008F                     _isr:	
  1508  008F                     i1l818:	
  1509                           
  1510                           ;main.c: 31:     if (INTCONbits.T0IF == 1){
  1511  008F  1D0B               	btfss	11,2	;volatile
  1512  0090  2892               	goto	u4_21
  1513  0091  2893               	goto	u4_20
  1514  0092                     u4_21:	
  1515  0092  28BB               	goto	i1l60
  1516  0093                     u4_20:	
  1517  0093                     i1l820:	
  1518                           
  1519                           ;main.c: 32:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  1520  0093  087A               	movf	_cambiante,w
  1521  0094  1D03               	btfss	3,2
  1522  0095  2897               	goto	u5_21
  1523  0096  2898               	goto	u5_20
  1524  0097                     u5_21:	
  1525  0097  289B               	goto	i1l824
  1526  0098                     u5_20:	
  1527  0098                     i1l822:	
  1528  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1530  009A  151F               	bsf	31,2	;volatile
  1531  009B                     i1l824:	
  1532                           
  1533                           ;main.c: 33:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  1534  009B  037A               	decf	_cambiante,w
  1535  009C  1D03               	btfss	3,2
  1536  009D  289F               	goto	u6_21
  1537  009E  28A0               	goto	u6_20
  1538  009F                     u6_21:	
  1539  009F  28A3               	goto	i1l828
  1540  00A0                     u6_20:	
  1541  00A0                     i1l826:	
  1542  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1543  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1544  00A2  111F               	bcf	31,2	;volatile
  1545  00A3                     i1l828:	
  1546                           
  1547                           ;main.c: 34:         cambiante++;
  1548  00A3  3001               	movlw	1
  1549  00A4  00F0               	movwf	??_isr
  1550  00A5  0870               	movf	??_isr,w
  1551  00A6  07FA               	addwf	_cambiante,f
  1552  00A7                     i1l830:	
  1553                           
  1554                           ;main.c: 35:         if (cambiante > 1){cambiante = 0;}
  1555  00A7  3002               	movlw	2
  1556  00A8  027A               	subwf	_cambiante,w
  1557  00A9  1C03               	skipc
  1558  00AA  28AC               	goto	u7_21
  1559  00AB  28AD               	goto	u7_20
  1560  00AC                     u7_21:	
  1561  00AC  28AE               	goto	i1l834
  1562  00AD                     u7_20:	
  1563  00AD                     i1l832:	
  1564  00AD  01FA               	clrf	_cambiante
  1565  00AE                     i1l834:	
  1566                           
  1567                           ;main.c: 36:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  1568  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1569  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1570  00B0  189F               	btfsc	31,1	;volatile
  1571  00B1  28B3               	goto	u8_21
  1572  00B2  28B4               	goto	u8_20
  1573  00B3                     u8_21:	
  1574  00B3  28B6               	goto	i1l59
  1575  00B4                     u8_20:	
  1576  00B4                     i1l836:	
  1577  00B4  01F9               	clrf	_eADC
  1578  00B5  0AF9               	incf	_eADC,f
  1579  00B6                     i1l59:	
  1580                           
  1581                           ;main.c: 37:         INTCONbits.T0IF = 0;
  1582  00B6  110B               	bcf	11,2	;volatile
  1583  00B7                     i1l838:	
  1584                           
  1585                           ;main.c: 38:         TMR0 = 130;
  1586  00B7  3082               	movlw	130
  1587  00B8  0081               	movwf	1	;volatile
  1588  00B9                     i1l840:	
  1589                           
  1590                           ;main.c: 39:         eADC = 1;
  1591  00B9  01F9               	clrf	_eADC
  1592  00BA  0AF9               	incf	_eADC,f
  1593  00BB                     i1l60:	
  1594  00BB  0872               	movf	??_isr+2,w
  1595  00BC  008A               	movwf	10
  1596  00BD  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1597  00BE  0083               	movwf	3
  1598  00BF  0EFE               	swapf	btemp,f
  1599  00C0  0E7E               	swapf	btemp,w
  1600  00C1  0009               	retfie
  1601  00C2                     __end_of_isr:	
  1602  007E                     btemp	set	126	;btemp
  1603  007E                     wtemp0	set	126
  1604                           
  1605                           	psect	intentry
  1606  0004                     __pintentry:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _isr: [wreg+status,2+status,0]
  1609                           
  1610  0004                     interrupt_function:	
  1611  007E                     saved_w	set	btemp
  1612  0004  00FE               	movwf	btemp
  1613  0005  0E03               	swapf	3,w
  1614  0006  00F1               	movwf	??_isr+1
  1615  0007  080A               	movf	10,w
  1616  0008  00F2               	movwf	??_isr+2
  1617  0009  120A  118A  288F   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_CLEAR->_lcd_control
    _INIT_LCD->_lcd_control
    _LCD_PULSE->_delay_us

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _INIT_LCD->_delay_ms
    _lcd_control->_delay_ms

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     676
                                              5 BANK0      1     1      0
                         _CONFIG_ADC
                           _INIT_LCD
                          _LCD_CLEAR
                           _LCD_DATO
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     213
                        _lcd_control
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     349
                           _delay_ms
                        _lcd_control
 ---------------------------------------------------------------------------------
 (2) _lcd_control                                          1     1      0     213
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     6      0     136
                                              3 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _INIT_LCD
     _delay_ms
     _lcd_control
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_CLEAR
     _lcd_control
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_DATO
     _LCD_PULSE
       _delay_us
     _delay_us
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 09:50:46 2020

             __CFG_CP$OFF 0000                        l82 008E                        l74 010E  
                      l85 011A                        l77 0081                        l86 0113  
                      l95 016D                        l88 0127                       l120 013A  
                     l114 00EA                       l123 014C                       l117 015E  
                     l126 0174                       l900 00F4                       l910 00FD  
                     l902 00F7                       l920 0104                       l912 00FE  
                     l904 00F8                       l930 0109                       l922 0105  
                     l914 00FF                       l906 00F9                       l932 010A  
                     l924 0106                       l916 0100                       l908 00FA  
                     l926 0107                       l918 0103                       l864 0110  
                     l960 0146                       l928 0108                       l962 015F  
                     l866 0114                       l882 0128                       l954 013C  
                     l884 012B                       l956 013F                       l886 0131  
                     l958 0141                       l896 00EB                       l994 0064  
                     l986 005D                       l898 00F3                       l996 006C  
                     l988 0060                       l998 0079                       u120 0127  
                     u200 0038                       u121 0126                       u201 0037  
                     u210 003E                       u211 003D                       u220 004B  
                     u125 0123                       u221 004A                       u180 0079  
                     u181 0078                       u190 008E                       u191 008D  
                     u185 0075              __CFG_CPD$OFF 0000                       u195 008A  
                     _isr 008F              __CFG_LVP$OFF 0000                      l1000 014E  
                    l1002 0151                      l1010 00C6                      l1004 0153  
                    l1020 00D8                      l1012 00C7                      l1006 0158  
                    l1022 00DE                      l1014 00CA                      l1030 001E  
                    l1024 00E4                      l1016 00CC                      l1008 00C2  
                    l1040 0039                      l1032 0023                      l1018 00D2  
                    l1026 016E                      l1042 003E                      l1034 002E  
                    l1044 0046                      l1036 0033                      l1028 0019  
                    l1046 004B                      l1038 0038                      l1048 0053  
                    ?_isr 0070                      i1l60 00BB                      i1l59 00B6  
      __size_of_LCD_CLEAR 0007                      _TMR0 0001                      _eADC 0079  
                    u4_20 0093                      u4_21 0092                      u5_20 0098  
                    u5_21 0097                      u6_20 00A0                      u6_21 009F  
                    u7_20 00AD                      u7_21 00AC                      u8_20 00B4  
                    u8_21 00B3              __CFG_WRT$OFF 0000        __size_of_LCD_PULSE 0013  
                    _main 0019                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F          __end_of_LCD_DATO 014D  
                   ??_isr 0070          __end_of_INIT_LCD 00EB                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l820 0093  
                   i1l830 00A7                     i1l822 0098                     i1l840 00B9  
                   i1l832 00AD                     i1l824 009B                     i1l834 00AE  
                   i1l826 00A0                     i1l818 008F                     i1l836 00B4  
                   i1l828 00A3                     i1l838 00B7                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
                   _setup 00EB            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 005A         __end_of_LCD_CLEAR 0175  
                  ??_main 0025         __end_of_LCD_PULSE 013B                    _ADCAN0 0078  
                  _ADCAN1 0026                    _ADRESH 001E                    ?_setup 0070  
                  _ANSELH 0189          __end_of_delay_ms 008F          __end_of_delay_us 0128  
          __CFG_PWRTE$OFF 0000      __size_of_lcd_control 0012              ??_CONFIG_ADC 0073  
                  saved_w 007E                 ?_LCD_DATO 0070   __end_of__initialization 0015  
               ?_INIT_LCD 0070            __pcstackCOMMON 0070        __end_of_CONFIG_ADC 016E  
           __end_of_setup 010F            _OPTION_REGbits 0081                   ??_setup 0073  
              __pbssBANK0 0026                ??_LCD_DATO 0077                ??_INIT_LCD 0078  
              __pmaintext 0019                __pintentry 0004                 ?_delay_ms 0070  
               ?_delay_us 0070           lcd_control@dato 0077                   __ptext1 00EB  
                 __ptext2 013B                   __ptext3 016E                   __ptext4 00C2  
                 __ptext5 014D                   __ptext6 005A                   __ptext7 0128  
                 __ptext8 010F                   __ptext9 015F              __size_of_isr 0033  
               _LCD_CLEAR 016E                ??_delay_ms 0073                 _LCD_PULSE 0128  
              ??_delay_us 0073      end_of_initialization 0015                 _PORTEbits 0009  
              ?_LCD_CLEAR 0070                ?_LCD_PULSE 0070                 _TRISEbits 0089  
       __size_of_LCD_DATO 0012             ??_lcd_control 0077         __size_of_INIT_LCD 0029  
     start_initialization 000F               __end_of_isr 00C2  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __end_of_lcd_control 015F               ??_LCD_CLEAR 0078               __pbssCOMMON 0078  
               ___latbits 0002               ??_LCD_PULSE 0077             __pcstackBANK0 0020  
       __size_of_delay_ms 0035         __size_of_delay_us 0019                 _cambiante 007A  
          __size_of_setup 0024                  _LCD_DATO 013B         interrupt_function 0004  
               delay_ms@i 0021                 delay_ms@j 0023                  _INIT_LCD 00C2  
               delay_us@j 0075               _lcd_control 014D                _ADCON0bits 001F  
              _ADCON1bits 009F           LCD_DATO@comando 0077                _CONFIG_ADC 015F  
                _delay_ms 005A                  _delay_us 010F                  __ptext10 008F  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0041               delay_ms@dms 0020  
             delay_us@ams 0074                _INTCONbits 000B                  intlevel1 0000  
             ?_CONFIG_ADC 0070              ?_lcd_control 0070  
