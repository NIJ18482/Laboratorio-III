

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 11:20:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0009                     _PORTEbits	set	9
   454  0009                     _PORTE	set	9
   455  0008                     _PORTD	set	8
   456  0007                     _PORTC	set	7
   457  0006                     _PORTB	set	6
   458  001E                     _ADRESH	set	30
   459  0001                     _TMR0	set	1
   460  001F                     _ADCON0bits	set	31
   461  000B                     _INTCONbits	set	11
   462  0089                     _TRISEbits	set	137
   463  009F                     _ADCON1bits	set	159
   464  0081                     _OPTION_REGbits	set	129
   465  0089                     _TRISE	set	137
   466  0088                     _TRISD	set	136
   467  0087                     _TRISC	set	135
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  0189                     _ANSELH	set	393
   471  0188                     _ANSEL	set	392
   472                           
   473                           	psect	strings
   474  0500                     __pstrings:	
   475  0500                     stringtab:	
   476  0500                     __stringtab:	
   477  0500                     stringcode:	
   478                           ;	String table - string pointers are 1 byte each
   479                           
   480  0500                     stringdir:	
   481  0500  3005               	movlw	high stringdir
   482  0501  008A               	movwf	10
   483  0502  0804               	movf	4,w
   484  0503  0A84               	incf	4,f
   485  0504  0782               	addwf	2,f
   486  0505                     __stringbase:	
   487  0505  3400               	retlw	0
   488  0506                     __end_of__stringtab:	
   489  0506                     STR_4:	
   490  0506  342D               	retlw	45	;'-'
   491  0507  344D               	retlw	77	;'M'
   492  0508  3450               	retlw	80	;'P'
   493  0509  344C               	retlw	76	;'L'
   494  050A  3441               	retlw	65	;'A'
   495  050B  3442               	retlw	66	;'B'
   496  050C  3458               	retlw	88	;'X'
   497  050D  342D               	retlw	45	;'-'
   498  050E  3458               	retlw	88	;'X'
   499  050F  3443               	retlw	67	;'C'
   500  0510  3438               	retlw	56	;'8'
   501  0511  342D               	retlw	45	;'-'
   502  0512  3450               	retlw	80	;'P'
   503  0513  3449               	retlw	73	;'I'
   504  0514  3443               	retlw	67	;'C'
   505  0515  342D               	retlw	45	;'-'
   506  0516  3400               	retlw	0
   507  0517                     STR_6:	
   508  0517  347C               	retlw	124	;'|'
   509  0518  3430               	retlw	48	;'0'
   510  0519  342E               	retlw	46	;'.'
   511  051A  3430               	retlw	48	;'0'
   512  051B  3430               	retlw	48	;'0'
   513  051C  3456               	retlw	86	;'V'
   514  051D  347C               	retlw	124	;'|'
   515  051E  3430               	retlw	48	;'0'
   516  051F  342E               	retlw	46	;'.'
   517  0520  3430               	retlw	48	;'0'
   518  0521  3430               	retlw	48	;'0'
   519  0522  3456               	retlw	86	;'V'
   520  0523  347C               	retlw	124	;'|'
   521  0524  3430               	retlw	48	;'0'
   522  0525  3430               	retlw	48	;'0'
   523  0526  3430               	retlw	48	;'0'
   524  0527  3400               	retlw	0
   525  0528                     STR_1:	
   526  0528  344C               	retlw	76	;'L'
   527  0529  3441               	retlw	65	;'A'
   528  052A  3442               	retlw	66	;'B'
   529  052B  344F               	retlw	79	;'O'
   530  052C  3452               	retlw	82	;'R'
   531  052D  3441               	retlw	65	;'A'
   532  052E  3454               	retlw	84	;'T'
   533  052F  344F               	retlw	79	;'O'
   534  0530  3452               	retlw	82	;'R'
   535  0531  3449               	retlw	73	;'I'
   536  0532  344F               	retlw	79	;'O'
   537  0533  3420               	retlw	32	;' '
   538  0534  344E               	retlw	78	;'N'
   539  0535  346F               	retlw	111	;'o'
   540  0536  342E               	retlw	46	;'.'
   541  0537  3433               	retlw	51	;'3'
   542  0538  3400               	retlw	0
   543  0539                     STR_3:	
   544  0539  344D               	retlw	77	;'M'
   545  053A  3441               	retlw	65	;'A'
   546  053B  344E               	retlw	78	;'N'
   547  053C  3445               	retlw	69	;'E'
   548  053D  344A               	retlw	74	;'J'
   549  053E  344F               	retlw	79	;'O'
   550  053F  3420               	retlw	32	;' '
   551  0540  3450               	retlw	80	;'P'
   552  0541  3441               	retlw	65	;'A'
   553  0542  344E               	retlw	78	;'N'
   554  0543  3445               	retlw	69	;'E'
   555  0544  344C               	retlw	76	;'L'
   556  0545  3420               	retlw	32	;' '
   557  0546  344C               	retlw	76	;'L'
   558  0547  3443               	retlw	67	;'C'
   559  0548  3444               	retlw	68	;'D'
   560  0549  3400               	retlw	0
   561  054A                     STR_2:	
   562  054A  344C               	retlw	76	;'L'
   563  054B  3475               	retlw	117	;'u'
   564  054C  3469               	retlw	105	;'i'
   565  054D  3473               	retlw	115	;'s'
   566  054E  3420               	retlw	32	;' '
   567  054F  344E               	retlw	78	;'N'
   568  0550  342E               	retlw	46	;'.'
   569  0551  3420               	retlw	32	;' '
   570  0552  3431               	retlw	49	;'1'
   571  0553  3438               	retlw	56	;'8'
   572  0554  3434               	retlw	52	;'4'
   573  0555  3438               	retlw	56	;'8'
   574  0556  3432               	retlw	50	;'2'
   575  0557  3455               	retlw	85	;'U'
   576  0558  3456               	retlw	86	;'V'
   577  0559  3447               	retlw	71	;'G'
   578  055A  3400               	retlw	0
   579  055B                     STR_5:	
   580  055B  347C               	retlw	124	;'|'
   581  055C  3453               	retlw	83	;'S'
   582  055D  3445               	retlw	69	;'E'
   583  055E  344E               	retlw	78	;'N'
   584  055F  342E               	retlw	46	;'.'
   585  0560  3432               	retlw	50	;'2'
   586  0561  347C               	retlw	124	;'|'
   587  0562  3453               	retlw	83	;'S'
   588  0563  3445               	retlw	69	;'E'
   589  0564  344E               	retlw	78	;'N'
   590  0565  342E               	retlw	46	;'.'
   591  0566  3431               	retlw	49	;'1'
   592  0567  347C               	retlw	124	;'|'
   593  0568  3420               	retlw	32	;' '
   594  0569  3443               	retlw	67	;'C'
   595  056A  3454               	retlw	84	;'T'
   596  056B  3400               	retlw	0
   597  056C                     STR_8:	
   598  056C  3431               	retlw	49	;'1'
   599  056D  3400               	retlw	0
   600  056E                     STR_9:	
   601  056E  3432               	retlw	50	;'2'
   602  056F  3400               	retlw	0
   603  0570                     STR_11:	
   604  0570  3434               	retlw	52	;'4'
   605  0571  3400               	retlw	0
   606  0572                     STR_12:	
   607  0572  3435               	retlw	53	;'5'
   608  0573  3400               	retlw	0
   609  0574                     STR_13:	
   610  0574  3436               	retlw	54	;'6'
   611  0575  3400               	retlw	0
   612  0576                     STR_14:	
   613  0576  3437               	retlw	55	;'7'
   614  0577  3400               	retlw	0
   615  0578                     STR_15:	
   616  0578  3438               	retlw	56	;'8'
   617  0579  3400               	retlw	0
   618  057A                     STR_16:	
   619  057A  3439               	retlw	57	;'9'
   620  057B  3400               	retlw	0
   621  0526                     
   622                           ; #config settings
   623  0000                     
   624                           	psect	cinit
   625  000F                     start_initialization:	
   626  000F                     __initialization:	
   627                           
   628                           ; Clear objects allocated to BANK0
   629  000F  1283               	bcf	3,5	;RP0=0, select bank0
   630  0010  1303               	bcf	3,6	;RP1=0, select bank0
   631  0011  01C1               	clrf	__pbssBANK0& (0+127)
   632  0012  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   633  0013  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   634  0014  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   635  0015  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   636  0016  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   637  0017  01C7               	clrf	(__pbssBANK0+6)& (0+127)
   638  0018  01C8               	clrf	(__pbssBANK0+7)& (0+127)
   639  0019  01C9               	clrf	(__pbssBANK0+8)& (0+127)
   640  001A  01CA               	clrf	(__pbssBANK0+9)& (0+127)
   641  001B  01CB               	clrf	(__pbssBANK0+10)& (0+127)
   642  001C  01CC               	clrf	(__pbssBANK0+11)& (0+127)
   643  001D                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  001D                     __end_of__initialization:	
   647  001D  0183               	clrf	3
   648  001E  120A  118A  2BAB   	ljmp	_main	;jump to C main() function
   649                           
   650                           	psect	bssBANK0
   651  0041                     __pbssBANK0:	
   652  0041                     VAL@F1517:	
   653  0041                     	ds	6
   654  0047                     _sen:	
   655  0047                     	ds	1
   656  0048                     _sensor:	
   657  0048                     	ds	1
   658  0049                     _ADCAN1:	
   659  0049                     	ds	1
   660  004A                     _ADCAN0:	
   661  004A                     	ds	1
   662  004B                     _eADC:	
   663  004B                     	ds	1
   664  004C                     _cambiante:	
   665  004C                     	ds	1
   666                           
   667                           	psect	cstackCOMMON
   668  0070                     __pcstackCOMMON:	
   669  0070                     ?_setup:	
   670  0070                     ?_INIT_LCD:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_LCD_CLEAR:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_LCD_RH:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_delay_ms:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_CONFIG_ADC:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_LCD_CONTROL:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_LCD_PULSE:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_isr:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_isr:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_delay_us:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_LCD_DATO:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_LCD_PRINT:	
   707                           ; 1 bytes @ 0x0
   708                           
   709                           
   710                           ; 1 bytes @ 0x0
   711  0070                     	ds	3
   712  0073                     ??_setup:	
   713  0073                     ??_delay_ms:	
   714                           ; 1 bytes @ 0x3
   715                           
   716  0073                     ??_CONFIG_ADC:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     ??_delay_us:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     ?___awmod:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ___awmod@divisor:	
   726                           ; 2 bytes @ 0x3
   727                           
   728                           
   729                           ; 2 bytes @ 0x3
   730  0073                     	ds	1
   731  0074                     delay_ms@dms:	
   732  0074                     delay_us@ams:	
   733                           ; 1 bytes @ 0x4
   734                           
   735                           
   736                           ; 1 bytes @ 0x4
   737  0074                     	ds	1
   738  0075                     delay_ms@i:	
   739  0075                     delay_us@j:	
   740                           ; 2 bytes @ 0x5
   741                           
   742  0075                     ___awmod@dividend:	
   743                           ; 2 bytes @ 0x5
   744                           
   745                           
   746                           ; 2 bytes @ 0x5
   747  0075                     	ds	2
   748  0077                     ??_LCD_PULSE:	
   749  0077                     ??_LCD_DATO:	
   750                           ; 1 bytes @ 0x7
   751                           
   752  0077                     ??___awmod:	
   753                           ; 1 bytes @ 0x7
   754                           
   755  0077                     LCD_DATO@comando:	
   756                           ; 1 bytes @ 0x7
   757                           
   758  0077                     delay_ms@j:	
   759                           ; 1 bytes @ 0x7
   760                           
   761                           
   762                           ; 2 bytes @ 0x7
   763  0077                     	ds	1
   764  0078                     ??_LCD_PRINT:	
   765  0078                     ___awmod@counter:	
   766                           ; 1 bytes @ 0x8
   767                           
   768                           
   769                           ; 1 bytes @ 0x8
   770  0078                     	ds	1
   771  0079                     ??_LCD_CONTROL:	
   772  0079                     LCD_CONTROL@dato:	
   773                           ; 1 bytes @ 0x9
   774                           
   775  0079                     LCD_PRINT@data:	
   776                           ; 1 bytes @ 0x9
   777                           
   778  0079                     ___awmod@sign:	
   779                           ; 1 bytes @ 0x9
   780                           
   781                           
   782                           ; 1 bytes @ 0x9
   783  0079                     	ds	1
   784  007A                     ??_INIT_LCD:	
   785  007A                     ??_LCD_CLEAR:	
   786                           ; 1 bytes @ 0xA
   787                           
   788  007A                     ??_LCD_RH:	
   789                           ; 1 bytes @ 0xA
   790                           
   791  007A                     ??_LCD_PRINT_WP:	
   792                           ; 1 bytes @ 0xA
   793                           
   794  007A                     ??___awdiv:	
   795                           ; 1 bytes @ 0xA
   796                           
   797                           
   798                           ; 1 bytes @ 0xA
   799  007A                     	ds	1
   800                           
   801                           	psect	cstackBANK0
   802  0020                     __pcstackBANK0:	
   803  0020                     ?_LCD_PRINT_WP:	
   804  0020                     ?___awdiv:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0020                     LCD_PRINT_WP@x:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0020                     ___awdiv@divisor:	
   811                           ; 2 bytes @ 0x0
   812                           
   813                           
   814                           ; 2 bytes @ 0x0
   815  0020                     	ds	2
   816  0022                     LCD_PRINT_WP@y:	
   817  0022                     ___awdiv@dividend:	
   818                           ; 2 bytes @ 0x2
   819                           
   820                           
   821                           ; 2 bytes @ 0x2
   822  0022                     	ds	2
   823  0024                     LCD_PRINT_WP@frase:	
   824  0024                     ___awdiv@counter:	
   825                           ; 1 bytes @ 0x4
   826                           
   827                           
   828                           ; 1 bytes @ 0x4
   829  0024                     	ds	1
   830  0025                     LCD_PRINT_WP@location:	
   831  0025                     ___awdiv@sign:	
   832                           ; 1 bytes @ 0x5
   833                           
   834                           
   835                           ; 1 bytes @ 0x5
   836  0025                     	ds	1
   837  0026                     ___awdiv@quotient:	
   838                           
   839                           ; 2 bytes @ 0x6
   840  0026                     	ds	2
   841  0028                     ?_VAL:	
   842  0028                     VAL@column:	
   843                           ; 1 bytes @ 0x8
   844                           
   845                           
   846                           ; 1 bytes @ 0x8
   847  0028                     	ds	1
   848  0029                     ??_VAL:	
   849                           
   850                           ; 1 bytes @ 0x9
   851  0029                     	ds	5
   852  002E                     VAL@unidades:	
   853                           
   854                           ; 1 bytes @ 0xE
   855  002E                     	ds	1
   856  002F                     VAL@decimas:	
   857                           
   858                           ; 1 bytes @ 0xF
   859  002F                     	ds	1
   860  0030                     VAL@centesimas:	
   861                           
   862                           ; 1 bytes @ 0x10
   863  0030                     	ds	1
   864  0031                     VAL@numero:	
   865                           
   866                           ; 6 bytes @ 0x11
   867  0031                     	ds	6
   868  0037                     _VAL$969:	
   869                           
   870                           ; 2 bytes @ 0x17
   871  0037                     	ds	2
   872  0039                     VAL@i:	
   873                           
   874                           ; 2 bytes @ 0x19
   875  0039                     	ds	2
   876  003B                     VAL@i_371:	
   877                           
   878                           ; 2 bytes @ 0x1B
   879  003B                     	ds	2
   880  003D                     VAL@result:	
   881                           
   882                           ; 1 bytes @ 0x1D
   883  003D                     	ds	1
   884  003E                     VAL@valor:	
   885                           
   886                           ; 1 bytes @ 0x1E
   887  003E                     	ds	1
   888  003F                     VAL@coordenada:	
   889                           
   890                           ; 1 bytes @ 0x1F
   891  003F                     	ds	1
   892  0040                     ??_main:	
   893                           
   894                           ; 1 bytes @ 0x20
   895  0040                     	ds	1
   896                           
   897                           	psect	maintext
   898  03AB                     __pmaintext:	
   899 ;;
   900 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   901 ;;
   902 ;; *************** function _main *****************
   903 ;; Defined at:
   904 ;;		line 44 in file "main.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : B00/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0
   920 ;;      Temps:          0       1       0       0       0
   921 ;;      Totals:         0       1       0       0       0
   922 ;;Total ram usage:        1 bytes
   923 ;; Hardware stack levels required when called:    7
   924 ;; This function calls:
   925 ;;		_CONFIG_ADC
   926 ;;		_INIT_LCD
   927 ;;		_LCD_CLEAR
   928 ;;		_LCD_PRINT_WP
   929 ;;		_LCD_RH
   930 ;;		_VAL
   931 ;;		_delay_ms
   932 ;;		_setup
   933 ;; This function is called by:
   934 ;;		Startup code after reset
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _main
   940  03AB                     _main:	
   941  03AB                     l1630:	
   942                           ;incstack = 0
   943                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   944                           
   945                           
   946                           ;main.c: 45:     setup();
   947  03AB  120A  118A  26C7  120A  118A  	fcall	_setup
   948  03B0                     l1632:	
   949                           
   950                           ;main.c: 46:     INIT_LCD();
   951  03B0  120A  118A  269E  120A  118A  	fcall	_INIT_LCD
   952  03B5                     l1634:	
   953                           
   954                           ;main.c: 47:     LCD_CLEAR();
   955  03B5  120A  118A  2792  120A  118A  	fcall	_LCD_CLEAR
   956  03BA                     l1636:	
   957                           
   958                           ;main.c: 48:     LCD_RH();
   959  03BA  120A  118A  278B  120A  118A  	fcall	_LCD_RH
   960  03BF                     l1638:	
   961                           
   962                           ;main.c: 49:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
   963  03BF  3000               	movlw	0
   964  03C0  1283               	bcf	3,5	;RP0=0, select bank0
   965  03C1  1303               	bcf	3,6	;RP1=0, select bank0
   966  03C2  00A0               	movwf	LCD_PRINT_WP@x
   967  03C3  00A1               	movwf	LCD_PRINT_WP@x+1
   968  03C4  3001               	movlw	1
   969  03C5  00A2               	movwf	LCD_PRINT_WP@y
   970  03C6  3000               	movlw	0
   971  03C7  00A3               	movwf	LCD_PRINT_WP@y+1
   972  03C8  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   973  03C9  00C0               	movwf	??_main
   974  03CA  0840               	movf	??_main,w
   975  03CB  00A4               	movwf	LCD_PRINT_WP@frase
   976  03CC  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
   977  03D1                     l1640:	
   978                           
   979                           ;main.c: 50:     delay_ms(150);
   980  03D1  3096               	movlw	150
   981  03D2  120A  118A  2671  120A  118A  	fcall	_delay_ms
   982  03D7                     l1642:	
   983                           
   984                           ;main.c: 51:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
   985  03D7  3000               	movlw	0
   986  03D8  1283               	bcf	3,5	;RP0=0, select bank0
   987  03D9  1303               	bcf	3,6	;RP1=0, select bank0
   988  03DA  00A0               	movwf	LCD_PRINT_WP@x
   989  03DB  00A1               	movwf	LCD_PRINT_WP@x+1
   990  03DC  3002               	movlw	2
   991  03DD  00A2               	movwf	LCD_PRINT_WP@y
   992  03DE  3000               	movlw	0
   993  03DF  00A3               	movwf	LCD_PRINT_WP@y+1
   994  03E0  3045               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   995  03E1  00C0               	movwf	??_main
   996  03E2  0840               	movf	??_main,w
   997  03E3  00A4               	movwf	LCD_PRINT_WP@frase
   998  03E4  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
   999  03E9                     l1644:	
  1000                           
  1001                           ;main.c: 52:     delay_ms(150);
  1002  03E9  3096               	movlw	150
  1003  03EA  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1004  03EF                     l1646:	
  1005                           
  1006                           ;main.c: 53:     LCD_CLEAR();
  1007  03EF  120A  118A  2792  120A  118A  	fcall	_LCD_CLEAR
  1008  03F4                     l1648:	
  1009                           
  1010                           ;main.c: 54:     LCD_RH();
  1011  03F4  120A  118A  278B  120A  118A  	fcall	_LCD_RH
  1012  03F9                     l1650:	
  1013                           
  1014                           ;main.c: 55:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
  1015  03F9  3000               	movlw	0
  1016  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1017  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1018  03FC  00A0               	movwf	LCD_PRINT_WP@x
  1019  03FD  00A1               	movwf	LCD_PRINT_WP@x+1
  1020  03FE  3001               	movlw	1
  1021  03FF  00A2               	movwf	LCD_PRINT_WP@y
  1022  0400  3000               	movlw	0
  1023  0401  00A3               	movwf	LCD_PRINT_WP@y+1
  1024  0402  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1025  0403  00C0               	movwf	??_main
  1026  0404  0840               	movf	??_main,w
  1027  0405  00A4               	movwf	LCD_PRINT_WP@frase
  1028  0406  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1029  040B                     l1652:	
  1030                           
  1031                           ;main.c: 56:     delay_ms(150);
  1032  040B  3096               	movlw	150
  1033  040C  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1034  0411                     l1654:	
  1035                           
  1036                           ;main.c: 57:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
  1037  0411  3000               	movlw	0
  1038  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0414  00A0               	movwf	LCD_PRINT_WP@x
  1041  0415  00A1               	movwf	LCD_PRINT_WP@x+1
  1042  0416  3002               	movlw	2
  1043  0417  00A2               	movwf	LCD_PRINT_WP@y
  1044  0418  3000               	movlw	0
  1045  0419  00A3               	movwf	LCD_PRINT_WP@y+1
  1046  041A  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1047  041B  00C0               	movwf	??_main
  1048  041C  0840               	movf	??_main,w
  1049  041D  00A4               	movwf	LCD_PRINT_WP@frase
  1050  041E  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1051  0423                     l1656:	
  1052                           
  1053                           ;main.c: 58:     delay_ms(150);
  1054  0423  3096               	movlw	150
  1055  0424  120A  118A  2671  120A  118A  	fcall	_delay_ms
  1056  0429                     l1658:	
  1057                           
  1058                           ;main.c: 59:     LCD_CLEAR();
  1059  0429  120A  118A  2792  120A  118A  	fcall	_LCD_CLEAR
  1060  042E                     l1660:	
  1061                           
  1062                           ;main.c: 60:     LCD_RH();
  1063  042E  120A  118A  278B  120A  118A  	fcall	_LCD_RH
  1064  0433                     l1662:	
  1065                           
  1066                           ;main.c: 61:     LCD_PRINT_WP(0,1,"|SEN.2|SEN.1| CT");
  1067  0433  3000               	movlw	0
  1068  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0436  00A0               	movwf	LCD_PRINT_WP@x
  1071  0437  00A1               	movwf	LCD_PRINT_WP@x+1
  1072  0438  3001               	movlw	1
  1073  0439  00A2               	movwf	LCD_PRINT_WP@y
  1074  043A  3000               	movlw	0
  1075  043B  00A3               	movwf	LCD_PRINT_WP@y+1
  1076  043C  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1077  043D  00C0               	movwf	??_main
  1078  043E  0840               	movf	??_main,w
  1079  043F  00A4               	movwf	LCD_PRINT_WP@frase
  1080  0440  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1081  0445                     l1664:	
  1082                           
  1083                           ;main.c: 62:     LCD_PRINT_WP(0,2,"|0.00V|0.00V|000");
  1084  0445  3000               	movlw	0
  1085  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0448  00A0               	movwf	LCD_PRINT_WP@x
  1088  0449  00A1               	movwf	LCD_PRINT_WP@x+1
  1089  044A  3002               	movlw	2
  1090  044B  00A2               	movwf	LCD_PRINT_WP@y
  1091  044C  3000               	movlw	0
  1092  044D  00A3               	movwf	LCD_PRINT_WP@y+1
  1093  044E  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1094  044F  00C0               	movwf	??_main
  1095  0450  0840               	movf	??_main,w
  1096  0451  00A4               	movwf	LCD_PRINT_WP@frase
  1097  0452  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1098  0457                     l1666:	
  1099                           
  1100                           ;main.c: 63:     CONFIG_ADC();
  1101  0457  120A  118A  277C  120A  118A  	fcall	_CONFIG_ADC
  1102  045C                     l1668:	
  1103                           
  1104                           ;main.c: 66:         if (eADC == 1){
  1105  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1106  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1107  045E  034B               	decf	_eADC,w
  1108  045F  1D03               	btfss	3,2
  1109  0460  2C62               	goto	u1301
  1110  0461  2C63               	goto	u1300
  1111  0462                     u1301:	
  1112  0462  2C77               	goto	l1682
  1113  0463                     u1300:	
  1114  0463                     l1670:	
  1115                           
  1116                           ;main.c: 67:             eADC = 0;
  1117  0463  01CB               	clrf	_eADC
  1118  0464                     l1672:	
  1119                           
  1120                           ;main.c: 68:             if (cambiante == 0){ADCAN0 = ADRESH;}
  1121  0464  084C               	movf	_cambiante,w
  1122  0465  1D03               	btfss	3,2
  1123  0466  2C68               	goto	u1311
  1124  0467  2C69               	goto	u1310
  1125  0468                     u1311:	
  1126  0468  2C6D               	goto	l1676
  1127  0469                     u1310:	
  1128  0469                     l1674:	
  1129  0469  081E               	movf	30,w	;volatile
  1130  046A  00C0               	movwf	??_main
  1131  046B  0840               	movf	??_main,w
  1132  046C  00CA               	movwf	_ADCAN0
  1133  046D                     l1676:	
  1134                           
  1135                           ;main.c: 69:             if (cambiante == 1){ADCAN1 = ADRESH;}
  1136  046D  034C               	decf	_cambiante,w
  1137  046E  1D03               	btfss	3,2
  1138  046F  2C71               	goto	u1321
  1139  0470  2C72               	goto	u1320
  1140  0471                     u1321:	
  1141  0471  2C76               	goto	l1680
  1142  0472                     u1320:	
  1143  0472                     l1678:	
  1144  0472  081E               	movf	30,w	;volatile
  1145  0473  00C0               	movwf	??_main
  1146  0474  0840               	movf	??_main,w
  1147  0475  00C9               	movwf	_ADCAN1
  1148  0476                     l1680:	
  1149                           
  1150                           ;main.c: 70:             ADCON0bits.GO_DONE = 1;}
  1151  0476  149F               	bsf	31,1	;volatile
  1152  0477                     l1682:	
  1153                           
  1154                           ;main.c: 71:         if (sensor == 20){
  1155  0477  3014               	movlw	20
  1156  0478  0648               	xorwf	_sensor,w
  1157  0479  1D03               	btfss	3,2
  1158  047A  2C7C               	goto	u1331
  1159  047B  2C7D               	goto	u1330
  1160  047C                     u1331:	
  1161  047C  2C5C               	goto	l1668
  1162  047D                     u1330:	
  1163  047D                     l1684:	
  1164                           
  1165                           ;main.c: 72:             if (sen == 0){VAL(ADCAN0,0);}
  1166  047D  0847               	movf	_sen,w
  1167  047E  1D03               	btfss	3,2
  1168  047F  2C81               	goto	u1341
  1169  0480  2C82               	goto	u1340
  1170  0481                     u1341:	
  1171  0481  2C89               	goto	l1688
  1172  0482                     u1340:	
  1173  0482                     l1686:	
  1174  0482  01A8               	clrf	VAL@column
  1175  0483  084A               	movf	_ADCAN0,w
  1176  0484  120A  118A  2021  120A  118A  	fcall	_VAL
  1177  0489                     l1688:	
  1178                           
  1179                           ;main.c: 73:             if (sen == 1){VAL(ADCAN1,1);}
  1180  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1181  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1182  048B  0347               	decf	_sen,w
  1183  048C  1D03               	btfss	3,2
  1184  048D  2C8F               	goto	u1351
  1185  048E  2C90               	goto	u1350
  1186  048F                     u1351:	
  1187  048F  2C98               	goto	l1692
  1188  0490                     u1350:	
  1189  0490                     l1690:	
  1190  0490  01A8               	clrf	VAL@column
  1191  0491  0AA8               	incf	VAL@column,f
  1192  0492  0849               	movf	_ADCAN1,w
  1193  0493  120A  118A  2021  120A  118A  	fcall	_VAL
  1194  0498                     l1692:	
  1195                           
  1196                           ;main.c: 74:             sen++;
  1197  0498  3001               	movlw	1
  1198  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1199  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1200  049B  00C0               	movwf	??_main
  1201  049C  0840               	movf	??_main,w
  1202  049D  07C7               	addwf	_sen,f
  1203  049E                     l1694:	
  1204                           
  1205                           ;main.c: 75:             if (sen > 1){sen = 0;}
  1206  049E  3002               	movlw	2
  1207  049F  0247               	subwf	_sen,w
  1208  04A0  1C03               	skipc
  1209  04A1  2CA3               	goto	u1361
  1210  04A2  2CA4               	goto	u1360
  1211  04A3                     u1361:	
  1212  04A3  2CA5               	goto	l82
  1213  04A4                     u1360:	
  1214  04A4                     l1696:	
  1215  04A4  01C7               	clrf	_sen
  1216  04A5                     l82:	
  1217                           
  1218                           ;main.c: 76:             sensor = 0;}
  1219  04A5  01C8               	clrf	_sensor
  1220  04A6  2C5C               	goto	l1668
  1221  04A7  120A  118A  280C   	ljmp	start
  1222  04AA                     __end_of_main:	
  1223                           
  1224                           	psect	text1
  1225  06C7                     __ptext1:	
  1226 ;; *************** function _setup *****************
  1227 ;; Defined at:
  1228 ;;		line 81 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _setup
  1258  06C7                     _setup:	
  1259  06C7                     l1386:	
  1260                           ;incstack = 0
  1261                           ; Regs used in _setup: [wreg+status,2]
  1262                           
  1263                           
  1264                           ;main.c: 83:     TRISA = 0b00000011;
  1265  06C7  3003               	movlw	3
  1266  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  1267  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  1268  06CA  0085               	movwf	5	;volatile
  1269                           
  1270                           ;main.c: 84:     ANSEL = 0b00000011;
  1271  06CB  3003               	movlw	3
  1272  06CC  1683               	bsf	3,5	;RP0=1, select bank3
  1273  06CD  1703               	bsf	3,6	;RP1=1, select bank3
  1274  06CE  0088               	movwf	8	;volatile
  1275  06CF                     l1388:	
  1276                           
  1277                           ;main.c: 85:     ANSELH = 0b00000000;
  1278  06CF  0189               	clrf	9	;volatile
  1279  06D0                     l1390:	
  1280                           
  1281                           ;main.c: 86:     TRISB = 0b00000000;
  1282  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  1283  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  1284  06D2  0186               	clrf	6	;volatile
  1285  06D3                     l1392:	
  1286                           
  1287                           ;main.c: 87:     TRISC = 0b00000000;
  1288  06D3  0187               	clrf	7	;volatile
  1289  06D4                     l1394:	
  1290                           
  1291                           ;main.c: 88:     TRISD = 0b00000000;
  1292  06D4  0188               	clrf	8	;volatile
  1293  06D5                     l1396:	
  1294                           
  1295                           ;main.c: 89:     TRISE = 0b0000;
  1296  06D5  0189               	clrf	9	;volatile
  1297  06D6                     l1398:	
  1298                           
  1299                           ;main.c: 90:     PORTB = 0b00000000;
  1300  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1301  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1302  06D8  0186               	clrf	6	;volatile
  1303  06D9                     l1400:	
  1304                           
  1305                           ;main.c: 91:     PORTC = 0b00000000;
  1306  06D9  0187               	clrf	7	;volatile
  1307  06DA                     l1402:	
  1308                           
  1309                           ;main.c: 92:     PORTD = 0b00000000;
  1310  06DA  0188               	clrf	8	;volatile
  1311  06DB                     l1404:	
  1312                           
  1313                           ;main.c: 93:     PORTE = 0b0000;
  1314  06DB  0189               	clrf	9	;volatile
  1315  06DC                     l1406:	
  1316                           
  1317                           ;main.c: 96:     OPTION_REGbits.T0CS = 0;
  1318  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  1319  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  1320  06DE  1281               	bcf	1,5	;volatile
  1321  06DF                     l1408:	
  1322                           
  1323                           ;main.c: 97:     OPTION_REGbits.PSA = 0;
  1324  06DF  1181               	bcf	1,3	;volatile
  1325  06E0                     l1410:	
  1326                           
  1327                           ;main.c: 98:     OPTION_REGbits.PS0 = 0;
  1328  06E0  1001               	bcf	1,0	;volatile
  1329  06E1                     l1412:	
  1330                           
  1331                           ;main.c: 99:     OPTION_REGbits.PS1 = 1;
  1332  06E1  1481               	bsf	1,1	;volatile
  1333  06E2                     l1414:	
  1334                           
  1335                           ;main.c: 100:     OPTION_REGbits.PS2 = 0;
  1336  06E2  1101               	bcf	1,2	;volatile
  1337  06E3                     l1416:	
  1338                           
  1339                           ;main.c: 101:     INTCONbits.T0IE = 1;
  1340  06E3  168B               	bsf	11,5	;volatile
  1341  06E4                     l1418:	
  1342                           
  1343                           ;main.c: 102:     INTCONbits.T0IF = 0;
  1344  06E4  110B               	bcf	11,2	;volatile
  1345  06E5                     l1420:	
  1346                           
  1347                           ;main.c: 103:     INTCONbits.GIE = 1;
  1348  06E5  178B               	bsf	11,7	;volatile
  1349  06E6                     l1422:	
  1350                           
  1351                           ;main.c: 104:     TMR0 = 130;
  1352  06E6  3082               	movlw	130
  1353  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1354  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1355  06E9  0081               	movwf	1	;volatile
  1356  06EA                     l88:	
  1357  06EA  0008               	return
  1358  06EB                     __end_of_setup:	
  1359                           
  1360                           	psect	text2
  1361  0021                     __ptext2:	
  1362 ;; *************** function _VAL *****************
  1363 ;; Defined at:
  1364 ;;		line 72 in file "LCD.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  result          1    wreg     unsigned char 
  1367 ;;  column          1    8[BANK0 ] unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  result          1   29[BANK0 ] unsigned char 
  1370 ;;  i               2   27[BANK0 ] int 
  1371 ;;  i               2   25[BANK0 ] int 
  1372 ;;  numero          6   17[BANK0 ] int [3]
  1373 ;;  coordenada      1   31[BANK0 ] unsigned char 
  1374 ;;  valor           1   30[BANK0 ] unsigned char 
  1375 ;;  centesimas      1   16[BANK0 ] unsigned char 
  1376 ;;  decimas         1   15[BANK0 ] unsigned char 
  1377 ;;  unidades        1   14[BANK0 ] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       1       0       0       0
  1388 ;;      Locals:         0      18       0       0       0
  1389 ;;      Temps:          0       5       0       0       0
  1390 ;;      Totals:         0      24       0       0       0
  1391 ;;Total ram usage:       24 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    6
  1394 ;; This function calls:
  1395 ;;		_LCD_PRINT_WP
  1396 ;;		___awdiv
  1397 ;;		___awmod
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _VAL
  1405  0021                     _VAL:	
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _VAL: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1409                           ;VAL@result stored from wreg
  1410  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0023  00BD               	movwf	VAL@result
  1413  0024                     l1448:	
  1414                           
  1415                           ;LCD.c: 73:     if (result>=250){result = 250;}
  1416  0024  30FA               	movlw	250
  1417  0025  023D               	subwf	VAL@result,w
  1418  0026  1C03               	skipc
  1419  0027  2829               	goto	u931
  1420  0028  282A               	goto	u930
  1421  0029                     u931:	
  1422  0029  282E               	goto	l1452
  1423  002A                     u930:	
  1424  002A                     l1450:	
  1425  002A  30FA               	movlw	250
  1426  002B  00A9               	movwf	??_VAL
  1427  002C  0829               	movf	??_VAL,w
  1428  002D  00BD               	movwf	VAL@result
  1429  002E                     l1452:	
  1430  002E                     l1454:	
  1431                           
  1432                           ;LCD.c: 75:     uint8_t coordenada = 0;
  1433  002E  01BF               	clrf	VAL@coordenada
  1434  002F                     l1456:	
  1435                           
  1436                           ;LCD.c: 76:     uint8_t unidades = (result - (result % 50))/50;
  1437  002F  3032               	movlw	50
  1438  0030  00A0               	movwf	___awdiv@divisor
  1439  0031  3000               	movlw	0
  1440  0032  00A1               	movwf	___awdiv@divisor+1
  1441  0033  3032               	movlw	50
  1442  0034  00F3               	movwf	___awmod@divisor
  1443  0035  3000               	movlw	0
  1444  0036  00F4               	movwf	___awmod@divisor+1
  1445  0037  083D               	movf	VAL@result,w
  1446  0038  00A9               	movwf	??_VAL
  1447  0039  01AA               	clrf	??_VAL+1
  1448  003A  0829               	movf	??_VAL,w
  1449  003B  00F5               	movwf	___awmod@dividend
  1450  003C  082A               	movf	??_VAL+1,w
  1451  003D  00F6               	movwf	___awmod@dividend+1
  1452  003E  120A  118A  25E5  120A  118A  	fcall	___awmod
  1453  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0045  083D               	movf	VAL@result,w
  1456  0046  00AB               	movwf	??_VAL+2
  1457  0047  0873               	movf	?___awmod,w
  1458  0048  022B               	subwf	??_VAL+2,w
  1459  0049  00A2               	movwf	___awdiv@dividend
  1460  004A  0974               	comf	?___awmod+1,w
  1461  004B  1803               	skipnc
  1462  004C  3E01               	addlw	1
  1463  004D  00A3               	movwf	___awdiv@dividend+1
  1464  004E  120A  118A  257C  120A  118A  	fcall	___awdiv
  1465  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0055  0820               	movf	?___awdiv,w
  1468  0056  00AC               	movwf	??_VAL+3
  1469  0057  082C               	movf	??_VAL+3,w
  1470  0058  00AE               	movwf	VAL@unidades
  1471  0059                     l1458:	
  1472                           
  1473                           ;LCD.c: 77:     uint8_t decimas = ((result %50) -((result %50)%5))/5;
  1474  0059  083D               	movf	VAL@result,w
  1475  005A  00A9               	movwf	??_VAL
  1476  005B  01AA               	clrf	??_VAL+1
  1477  005C  0829               	movf	??_VAL,w
  1478  005D  00F5               	movwf	___awmod@dividend
  1479  005E  082A               	movf	??_VAL+1,w
  1480  005F  00F6               	movwf	___awmod@dividend+1
  1481  0060  3032               	movlw	50
  1482  0061  00F3               	movwf	___awmod@divisor
  1483  0062  3000               	movlw	0
  1484  0063  00F4               	movwf	___awmod@divisor+1
  1485  0064  120A  118A  25E5  120A  118A  	fcall	___awmod
  1486  0069  0874               	movf	?___awmod+1,w
  1487  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1488  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1489  006C  00B8               	movwf	_VAL$969+1
  1490  006D  0873               	movf	?___awmod,w
  1491  006E  00B7               	movwf	_VAL$969
  1492  006F                     l1460:	
  1493                           
  1494                           ;LCD.c: 77:     uint8_t decimas = ((result %50) -((result %50)%5))/5;
  1495  006F  3005               	movlw	5
  1496  0070  00A0               	movwf	___awdiv@divisor
  1497  0071  3000               	movlw	0
  1498  0072  00A1               	movwf	___awdiv@divisor+1
  1499  0073  3032               	movlw	50
  1500  0074  00F3               	movwf	___awmod@divisor
  1501  0075  3000               	movlw	0
  1502  0076  00F4               	movwf	___awmod@divisor+1
  1503  0077  083D               	movf	VAL@result,w
  1504  0078  00A9               	movwf	??_VAL
  1505  0079  01AA               	clrf	??_VAL+1
  1506  007A  0829               	movf	??_VAL,w
  1507  007B  00F5               	movwf	___awmod@dividend
  1508  007C  082A               	movf	??_VAL+1,w
  1509  007D  00F6               	movwf	___awmod@dividend+1
  1510  007E  120A  118A  25E5  120A  118A  	fcall	___awmod
  1511  0083  0873               	movf	?___awmod,w
  1512  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0086  00AB               	movwf	??_VAL+2
  1515  0087  0874               	movf	?___awmod+1,w
  1516  0088  00AC               	movwf	??_VAL+3
  1517  0089  3005               	movlw	5
  1518  008A  00F3               	movwf	___awmod@divisor
  1519  008B  3000               	movlw	0
  1520  008C  00F4               	movwf	___awmod@divisor+1
  1521  008D  0838               	movf	_VAL$969+1,w
  1522  008E  00F6               	movwf	___awmod@dividend+1
  1523  008F  0837               	movf	_VAL$969,w
  1524  0090  00F5               	movwf	___awmod@dividend
  1525  0091  120A  118A  25E5  120A  118A  	fcall	___awmod
  1526  0096  0873               	movf	?___awmod,w
  1527  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0099  022B               	subwf	??_VAL+2,w
  1530  009A  00A2               	movwf	___awdiv@dividend
  1531  009B  0874               	movf	?___awmod+1,w
  1532  009C  1C03               	skipc
  1533  009D  0A74               	incf	?___awmod+1,w
  1534  009E  022C               	subwf	??_VAL+3,w
  1535  009F  00A3               	movwf	___awdiv@dividend+1
  1536  00A0  120A  118A  257C  120A  118A  	fcall	___awdiv
  1537  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1538  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1539  00A7  0820               	movf	?___awdiv,w
  1540  00A8  00AD               	movwf	??_VAL+4
  1541  00A9  082D               	movf	??_VAL+4,w
  1542  00AA  00AF               	movwf	VAL@decimas
  1543  00AB                     l1462:	
  1544                           
  1545                           ;LCD.c: 78:     uint8_t centesimas = (((result %50)%5) -(((result %50)%5)%1))*2;
  1546  00AB  083D               	movf	VAL@result,w
  1547  00AC  00A9               	movwf	??_VAL
  1548  00AD  01AA               	clrf	??_VAL+1
  1549  00AE  0829               	movf	??_VAL,w
  1550  00AF  00F5               	movwf	___awmod@dividend
  1551  00B0  082A               	movf	??_VAL+1,w
  1552  00B1  00F6               	movwf	___awmod@dividend+1
  1553  00B2  3032               	movlw	50
  1554  00B3  00F3               	movwf	___awmod@divisor
  1555  00B4  3000               	movlw	0
  1556  00B5  00F4               	movwf	___awmod@divisor+1
  1557  00B6  120A  118A  25E5  120A  118A  	fcall	___awmod
  1558  00BB  0874               	movf	?___awmod+1,w
  1559  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1560  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1561  00BE  00B8               	movwf	_VAL$969+1
  1562  00BF  0873               	movf	?___awmod,w
  1563  00C0  00B7               	movwf	_VAL$969
  1564  00C1                     l1464:	
  1565                           
  1566                           ;LCD.c: 78:     uint8_t centesimas = (((result %50)%5) -(((result %50)%5)%1))*2;
  1567  00C1  3005               	movlw	5
  1568  00C2  00F3               	movwf	___awmod@divisor
  1569  00C3  3000               	movlw	0
  1570  00C4  00F4               	movwf	___awmod@divisor+1
  1571  00C5  0838               	movf	_VAL$969+1,w
  1572  00C6  00F6               	movwf	___awmod@dividend+1
  1573  00C7  0837               	movf	_VAL$969,w
  1574  00C8  00F5               	movwf	___awmod@dividend
  1575  00C9  120A  118A  25E5  120A  118A  	fcall	___awmod
  1576  00CE  0873               	movf	?___awmod,w
  1577  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1578  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1579  00D1  00A9               	movwf	??_VAL
  1580  00D2  0729               	addwf	??_VAL,w
  1581  00D3  00AA               	movwf	??_VAL+1
  1582  00D4  082A               	movf	??_VAL+1,w
  1583  00D5  00B0               	movwf	VAL@centesimas
  1584  00D6                     l1466:	
  1585                           
  1586                           ;LCD.c: 79:     int numero[] = {unidades,decimas,centesimas};
  1587  00D6  3031               	movlw	VAL@numero& (0+255)
  1588  00D7  0084               	movwf	4
  1589  00D8  3006               	movlw	6
  1590  00D9  00FF               	movwf	btemp+1
  1591  00DA                     u940:	
  1592  00DA  1383               	bcf	3,7	;select IRP bank0
  1593  00DB  0180               	clrf	0
  1594  00DC  0A84               	incf	4,f
  1595  00DD  0BFF               	decfsz	btemp+1,f
  1596  00DE  28DA               	goto	u940
  1597  00DF                     l1468:	
  1598  00DF  082E               	movf	VAL@unidades,w
  1599  00E0  00A9               	movwf	??_VAL
  1600  00E1  01AA               	clrf	??_VAL+1
  1601  00E2  0829               	movf	??_VAL,w
  1602  00E3  00B1               	movwf	VAL@numero
  1603  00E4  082A               	movf	??_VAL+1,w
  1604  00E5  00B2               	movwf	VAL@numero+1
  1605  00E6                     l1470:	
  1606  00E6  082F               	movf	VAL@decimas,w
  1607  00E7  00A9               	movwf	??_VAL
  1608  00E8  01AA               	clrf	??_VAL+1
  1609  00E9  0829               	movf	??_VAL,w
  1610  00EA  00B3               	movwf	VAL@numero+2
  1611  00EB  082A               	movf	??_VAL+1,w
  1612  00EC  00B4               	movwf	VAL@numero+3
  1613  00ED                     l1472:	
  1614  00ED  0830               	movf	VAL@centesimas,w
  1615  00EE  00A9               	movwf	??_VAL
  1616  00EF  01AA               	clrf	??_VAL+1
  1617  00F0  0829               	movf	??_VAL,w
  1618  00F1  00B5               	movwf	VAL@numero+4
  1619  00F2  082A               	movf	??_VAL+1,w
  1620  00F3  00B6               	movwf	VAL@numero+5
  1621  00F4                     l1474:	
  1622                           
  1623                           ;LCD.c: 80:     if (column == 0){
  1624  00F4  0828               	movf	VAL@column,w
  1625  00F5  1D03               	btfss	3,2
  1626  00F6  28F8               	goto	u951
  1627  00F7  28F9               	goto	u950
  1628  00F8                     u951:	
  1629  00F8  2A4D               	goto	l1540
  1630  00F9                     u950:	
  1631  00F9                     l1476:	
  1632                           
  1633                           ;LCD.c: 81:         for (int i=0; i<3;i++){
  1634  00F9  01B9               	clrf	VAL@i
  1635  00FA  01BA               	clrf	VAL@i+1
  1636  00FB                     l1482:	
  1637                           
  1638                           ;LCD.c: 82:             valor = numero[i];
  1639  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1640  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1641  00FD  0839               	movf	VAL@i,w
  1642  00FE  00A9               	movwf	??_VAL
  1643  00FF  0729               	addwf	??_VAL,w
  1644  0100  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  1645  0101  0084               	movwf	4
  1646  0102  1383               	bcf	3,7	;select IRP bank0
  1647  0103  0800               	movf	0,w
  1648  0104  00AA               	movwf	??_VAL+1
  1649  0105  082A               	movf	??_VAL+1,w
  1650  0106  00BE               	movwf	VAL@valor
  1651  0107                     l1484:	
  1652                           
  1653                           ;LCD.c: 83:             if (i == 0) {coordenada = 1;}
  1654  0107  0839               	movf	VAL@i,w
  1655  0108  043A               	iorwf	VAL@i+1,w
  1656  0109  1D03               	btfss	3,2
  1657  010A  290C               	goto	u961
  1658  010B  290D               	goto	u960
  1659  010C                     u961:	
  1660  010C  290F               	goto	l1488
  1661  010D                     u960:	
  1662  010D                     l1486:	
  1663  010D  01BF               	clrf	VAL@coordenada
  1664  010E  0ABF               	incf	VAL@coordenada,f
  1665  010F                     l1488:	
  1666                           
  1667                           ;LCD.c: 84:             if (i == 1) {coordenada = 3;}
  1668  010F  0339               	decf	VAL@i,w
  1669  0110  043A               	iorwf	VAL@i+1,w
  1670  0111  1D03               	btfss	3,2
  1671  0112  2914               	goto	u971
  1672  0113  2915               	goto	u970
  1673  0114                     u971:	
  1674  0114  2919               	goto	l1492
  1675  0115                     u970:	
  1676  0115                     l1490:	
  1677  0115  3003               	movlw	3
  1678  0116  00A9               	movwf	??_VAL
  1679  0117  0829               	movf	??_VAL,w
  1680  0118  00BF               	movwf	VAL@coordenada
  1681  0119                     l1492:	
  1682                           
  1683                           ;LCD.c: 85:             if (i == 2) {coordenada = 4;}
  1684  0119  3002               	movlw	2
  1685  011A  0639               	xorwf	VAL@i,w
  1686  011B  043A               	iorwf	VAL@i+1,w
  1687  011C  1D03               	btfss	3,2
  1688  011D  291F               	goto	u981
  1689  011E  2920               	goto	u980
  1690  011F                     u981:	
  1691  011F  2924               	goto	l1496
  1692  0120                     u980:	
  1693  0120                     l1494:	
  1694  0120  3004               	movlw	4
  1695  0121  00A9               	movwf	??_VAL
  1696  0122  0829               	movf	??_VAL,w
  1697  0123  00BF               	movwf	VAL@coordenada
  1698  0124                     l1496:	
  1699                           
  1700                           ;LCD.c: 86:             if (valor == 0){LCD_PRINT_WP(coordenada,2,"0");}
  1701  0124  083E               	movf	VAL@valor,w
  1702  0125  1D03               	btfss	3,2
  1703  0126  2928               	goto	u991
  1704  0127  2929               	goto	u990
  1705  0128                     u991:	
  1706  0128  293D               	goto	l1500
  1707  0129                     u990:	
  1708  0129                     l1498:	
  1709  0129  083F               	movf	VAL@coordenada,w
  1710  012A  00A9               	movwf	??_VAL
  1711  012B  01AA               	clrf	??_VAL+1
  1712  012C  0829               	movf	??_VAL,w
  1713  012D  00A0               	movwf	LCD_PRINT_WP@x
  1714  012E  082A               	movf	??_VAL+1,w
  1715  012F  00A1               	movwf	LCD_PRINT_WP@x+1
  1716  0130  3002               	movlw	2
  1717  0131  00A2               	movwf	LCD_PRINT_WP@y
  1718  0132  3000               	movlw	0
  1719  0133  00A3               	movwf	LCD_PRINT_WP@y+1
  1720  0134  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  1721  0135  00AB               	movwf	??_VAL+2
  1722  0136  082B               	movf	??_VAL+2,w
  1723  0137  00A4               	movwf	LCD_PRINT_WP@frase
  1724  0138  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1725  013D                     l1500:	
  1726                           
  1727                           ;LCD.c: 87:             if (valor == 1){LCD_PRINT_WP(coordenada,2,"1");}
  1728  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1729  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1730  013F  033E               	decf	VAL@valor,w
  1731  0140  1D03               	btfss	3,2
  1732  0141  2943               	goto	u1001
  1733  0142  2944               	goto	u1000
  1734  0143                     u1001:	
  1735  0143  2958               	goto	l1504
  1736  0144                     u1000:	
  1737  0144                     l1502:	
  1738  0144  083F               	movf	VAL@coordenada,w
  1739  0145  00A9               	movwf	??_VAL
  1740  0146  01AA               	clrf	??_VAL+1
  1741  0147  0829               	movf	??_VAL,w
  1742  0148  00A0               	movwf	LCD_PRINT_WP@x
  1743  0149  082A               	movf	??_VAL+1,w
  1744  014A  00A1               	movwf	LCD_PRINT_WP@x+1
  1745  014B  3002               	movlw	2
  1746  014C  00A2               	movwf	LCD_PRINT_WP@y
  1747  014D  3000               	movlw	0
  1748  014E  00A3               	movwf	LCD_PRINT_WP@y+1
  1749  014F  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1750  0150  00AB               	movwf	??_VAL+2
  1751  0151  082B               	movf	??_VAL+2,w
  1752  0152  00A4               	movwf	LCD_PRINT_WP@frase
  1753  0153  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1754  0158                     l1504:	
  1755                           
  1756                           ;LCD.c: 88:             if (valor == 2){LCD_PRINT_WP(coordenada,2,"2");}
  1757  0158  3002               	movlw	2
  1758  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1759  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1760  015B  063E               	xorwf	VAL@valor,w
  1761  015C  1D03               	btfss	3,2
  1762  015D  295F               	goto	u1011
  1763  015E  2960               	goto	u1010
  1764  015F                     u1011:	
  1765  015F  2974               	goto	l1508
  1766  0160                     u1010:	
  1767  0160                     l1506:	
  1768  0160  083F               	movf	VAL@coordenada,w
  1769  0161  00A9               	movwf	??_VAL
  1770  0162  01AA               	clrf	??_VAL+1
  1771  0163  0829               	movf	??_VAL,w
  1772  0164  00A0               	movwf	LCD_PRINT_WP@x
  1773  0165  082A               	movf	??_VAL+1,w
  1774  0166  00A1               	movwf	LCD_PRINT_WP@x+1
  1775  0167  3002               	movlw	2
  1776  0168  00A2               	movwf	LCD_PRINT_WP@y
  1777  0169  3000               	movlw	0
  1778  016A  00A3               	movwf	LCD_PRINT_WP@y+1
  1779  016B  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1780  016C  00AB               	movwf	??_VAL+2
  1781  016D  082B               	movf	??_VAL+2,w
  1782  016E  00A4               	movwf	LCD_PRINT_WP@frase
  1783  016F  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1784  0174                     l1508:	
  1785                           
  1786                           ;LCD.c: 89:             if (valor == 3){LCD_PRINT_WP(coordenada,2,"3");}
  1787  0174  3003               	movlw	3
  1788  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0177  063E               	xorwf	VAL@valor,w
  1791  0178  1D03               	btfss	3,2
  1792  0179  297B               	goto	u1021
  1793  017A  297C               	goto	u1020
  1794  017B                     u1021:	
  1795  017B  2990               	goto	l1512
  1796  017C                     u1020:	
  1797  017C                     l1510:	
  1798  017C  083F               	movf	VAL@coordenada,w
  1799  017D  00A9               	movwf	??_VAL
  1800  017E  01AA               	clrf	??_VAL+1
  1801  017F  0829               	movf	??_VAL,w
  1802  0180  00A0               	movwf	LCD_PRINT_WP@x
  1803  0181  082A               	movf	??_VAL+1,w
  1804  0182  00A1               	movwf	LCD_PRINT_WP@x+1
  1805  0183  3002               	movlw	2
  1806  0184  00A2               	movwf	LCD_PRINT_WP@y
  1807  0185  3000               	movlw	0
  1808  0186  00A3               	movwf	LCD_PRINT_WP@y+1
  1809  0187  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1810  0188  00AB               	movwf	??_VAL+2
  1811  0189  082B               	movf	??_VAL+2,w
  1812  018A  00A4               	movwf	LCD_PRINT_WP@frase
  1813  018B  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1814  0190                     l1512:	
  1815                           
  1816                           ;LCD.c: 90:             if (valor == 4){LCD_PRINT_WP(coordenada,2,"4");}
  1817  0190  3004               	movlw	4
  1818  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0193  063E               	xorwf	VAL@valor,w
  1821  0194  1D03               	btfss	3,2
  1822  0195  2997               	goto	u1031
  1823  0196  2998               	goto	u1030
  1824  0197                     u1031:	
  1825  0197  29AC               	goto	l1516
  1826  0198                     u1030:	
  1827  0198                     l1514:	
  1828  0198  083F               	movf	VAL@coordenada,w
  1829  0199  00A9               	movwf	??_VAL
  1830  019A  01AA               	clrf	??_VAL+1
  1831  019B  0829               	movf	??_VAL,w
  1832  019C  00A0               	movwf	LCD_PRINT_WP@x
  1833  019D  082A               	movf	??_VAL+1,w
  1834  019E  00A1               	movwf	LCD_PRINT_WP@x+1
  1835  019F  3002               	movlw	2
  1836  01A0  00A2               	movwf	LCD_PRINT_WP@y
  1837  01A1  3000               	movlw	0
  1838  01A2  00A3               	movwf	LCD_PRINT_WP@y+1
  1839  01A3  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1840  01A4  00AB               	movwf	??_VAL+2
  1841  01A5  082B               	movf	??_VAL+2,w
  1842  01A6  00A4               	movwf	LCD_PRINT_WP@frase
  1843  01A7  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1844  01AC                     l1516:	
  1845                           
  1846                           ;LCD.c: 91:             if (valor == 5){LCD_PRINT_WP(coordenada,2,"5");}
  1847  01AC  3005               	movlw	5
  1848  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1849  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1850  01AF  063E               	xorwf	VAL@valor,w
  1851  01B0  1D03               	btfss	3,2
  1852  01B1  29B3               	goto	u1041
  1853  01B2  29B4               	goto	u1040
  1854  01B3                     u1041:	
  1855  01B3  29C8               	goto	l1520
  1856  01B4                     u1040:	
  1857  01B4                     l1518:	
  1858  01B4  083F               	movf	VAL@coordenada,w
  1859  01B5  00A9               	movwf	??_VAL
  1860  01B6  01AA               	clrf	??_VAL+1
  1861  01B7  0829               	movf	??_VAL,w
  1862  01B8  00A0               	movwf	LCD_PRINT_WP@x
  1863  01B9  082A               	movf	??_VAL+1,w
  1864  01BA  00A1               	movwf	LCD_PRINT_WP@x+1
  1865  01BB  3002               	movlw	2
  1866  01BC  00A2               	movwf	LCD_PRINT_WP@y
  1867  01BD  3000               	movlw	0
  1868  01BE  00A3               	movwf	LCD_PRINT_WP@y+1
  1869  01BF  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1870  01C0  00AB               	movwf	??_VAL+2
  1871  01C1  082B               	movf	??_VAL+2,w
  1872  01C2  00A4               	movwf	LCD_PRINT_WP@frase
  1873  01C3  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1874  01C8                     l1520:	
  1875                           
  1876                           ;LCD.c: 92:             if (valor == 6){LCD_PRINT_WP(coordenada,2,"6");}
  1877  01C8  3006               	movlw	6
  1878  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1879  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1880  01CB  063E               	xorwf	VAL@valor,w
  1881  01CC  1D03               	btfss	3,2
  1882  01CD  29CF               	goto	u1051
  1883  01CE  29D0               	goto	u1050
  1884  01CF                     u1051:	
  1885  01CF  29E4               	goto	l1524
  1886  01D0                     u1050:	
  1887  01D0                     l1522:	
  1888  01D0  083F               	movf	VAL@coordenada,w
  1889  01D1  00A9               	movwf	??_VAL
  1890  01D2  01AA               	clrf	??_VAL+1
  1891  01D3  0829               	movf	??_VAL,w
  1892  01D4  00A0               	movwf	LCD_PRINT_WP@x
  1893  01D5  082A               	movf	??_VAL+1,w
  1894  01D6  00A1               	movwf	LCD_PRINT_WP@x+1
  1895  01D7  3002               	movlw	2
  1896  01D8  00A2               	movwf	LCD_PRINT_WP@y
  1897  01D9  3000               	movlw	0
  1898  01DA  00A3               	movwf	LCD_PRINT_WP@y+1
  1899  01DB  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1900  01DC  00AB               	movwf	??_VAL+2
  1901  01DD  082B               	movf	??_VAL+2,w
  1902  01DE  00A4               	movwf	LCD_PRINT_WP@frase
  1903  01DF  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1904  01E4                     l1524:	
  1905                           
  1906                           ;LCD.c: 93:             if (valor == 7){LCD_PRINT_WP(coordenada,2,"7");}
  1907  01E4  3007               	movlw	7
  1908  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1909  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1910  01E7  063E               	xorwf	VAL@valor,w
  1911  01E8  1D03               	btfss	3,2
  1912  01E9  29EB               	goto	u1061
  1913  01EA  29EC               	goto	u1060
  1914  01EB                     u1061:	
  1915  01EB  2A00               	goto	l1528
  1916  01EC                     u1060:	
  1917  01EC                     l1526:	
  1918  01EC  083F               	movf	VAL@coordenada,w
  1919  01ED  00A9               	movwf	??_VAL
  1920  01EE  01AA               	clrf	??_VAL+1
  1921  01EF  0829               	movf	??_VAL,w
  1922  01F0  00A0               	movwf	LCD_PRINT_WP@x
  1923  01F1  082A               	movf	??_VAL+1,w
  1924  01F2  00A1               	movwf	LCD_PRINT_WP@x+1
  1925  01F3  3002               	movlw	2
  1926  01F4  00A2               	movwf	LCD_PRINT_WP@y
  1927  01F5  3000               	movlw	0
  1928  01F6  00A3               	movwf	LCD_PRINT_WP@y+1
  1929  01F7  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1930  01F8  00AB               	movwf	??_VAL+2
  1931  01F9  082B               	movf	??_VAL+2,w
  1932  01FA  00A4               	movwf	LCD_PRINT_WP@frase
  1933  01FB  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1934  0200                     l1528:	
  1935                           
  1936                           ;LCD.c: 94:             if (valor == 8){LCD_PRINT_WP(coordenada,2,"8");}
  1937  0200  3008               	movlw	8
  1938  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0203  063E               	xorwf	VAL@valor,w
  1941  0204  1D03               	btfss	3,2
  1942  0205  2A07               	goto	u1071
  1943  0206  2A08               	goto	u1070
  1944  0207                     u1071:	
  1945  0207  2A1C               	goto	l1532
  1946  0208                     u1070:	
  1947  0208                     l1530:	
  1948  0208  083F               	movf	VAL@coordenada,w
  1949  0209  00A9               	movwf	??_VAL
  1950  020A  01AA               	clrf	??_VAL+1
  1951  020B  0829               	movf	??_VAL,w
  1952  020C  00A0               	movwf	LCD_PRINT_WP@x
  1953  020D  082A               	movf	??_VAL+1,w
  1954  020E  00A1               	movwf	LCD_PRINT_WP@x+1
  1955  020F  3002               	movlw	2
  1956  0210  00A2               	movwf	LCD_PRINT_WP@y
  1957  0211  3000               	movlw	0
  1958  0212  00A3               	movwf	LCD_PRINT_WP@y+1
  1959  0213  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1960  0214  00AB               	movwf	??_VAL+2
  1961  0215  082B               	movf	??_VAL+2,w
  1962  0216  00A4               	movwf	LCD_PRINT_WP@frase
  1963  0217  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1964  021C                     l1532:	
  1965                           
  1966                           ;LCD.c: 95:             if (valor == 9){LCD_PRINT_WP(coordenada,2,"9");}}}
  1967  021C  3009               	movlw	9
  1968  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1969  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1970  021F  063E               	xorwf	VAL@valor,w
  1971  0220  1D03               	btfss	3,2
  1972  0221  2A23               	goto	u1081
  1973  0222  2A24               	goto	u1080
  1974  0223                     u1081:	
  1975  0223  2A38               	goto	l1536
  1976  0224                     u1080:	
  1977  0224                     l1534:	
  1978  0224  083F               	movf	VAL@coordenada,w
  1979  0225  00A9               	movwf	??_VAL
  1980  0226  01AA               	clrf	??_VAL+1
  1981  0227  0829               	movf	??_VAL,w
  1982  0228  00A0               	movwf	LCD_PRINT_WP@x
  1983  0229  082A               	movf	??_VAL+1,w
  1984  022A  00A1               	movwf	LCD_PRINT_WP@x+1
  1985  022B  3002               	movlw	2
  1986  022C  00A2               	movwf	LCD_PRINT_WP@y
  1987  022D  3000               	movlw	0
  1988  022E  00A3               	movwf	LCD_PRINT_WP@y+1
  1989  022F  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1990  0230  00AB               	movwf	??_VAL+2
  1991  0231  082B               	movf	??_VAL+2,w
  1992  0232  00A4               	movwf	LCD_PRINT_WP@frase
  1993  0233  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  1994  0238                     l1536:	
  1995  0238  3001               	movlw	1
  1996  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1997  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1998  023B  07B9               	addwf	VAL@i,f
  1999  023C  1803               	skipnc
  2000  023D  0ABA               	incf	VAL@i+1,f
  2001  023E  3000               	movlw	0
  2002  023F  07BA               	addwf	VAL@i+1,f
  2003  0240                     l1538:	
  2004  0240  083A               	movf	VAL@i+1,w
  2005  0241  3A80               	xorlw	128
  2006  0242  00FF               	movwf	btemp+1
  2007  0243  3080               	movlw	128
  2008  0244  027F               	subwf	btemp+1,w
  2009  0245  1D03               	skipz
  2010  0246  2A49               	goto	u1095
  2011  0247  3003               	movlw	3
  2012  0248  0239               	subwf	VAL@i,w
  2013  0249                     u1095:	
  2014  0249  1C03               	skipc
  2015  024A  2A4C               	goto	u1091
  2016  024B  2A4D               	goto	u1090
  2017  024C                     u1091:	
  2018  024C  28FB               	goto	l1482
  2019  024D                     u1090:	
  2020  024D                     l1540:	
  2021                           
  2022                           ;LCD.c: 96:     if (column == 1){
  2023  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2024  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2025  024F  0328               	decf	VAL@column,w
  2026  0250  1D03               	btfss	3,2
  2027  0251  2A53               	goto	u1101
  2028  0252  2A54               	goto	u1100
  2029  0253                     u1101:	
  2030  0253  2BAA               	goto	l194
  2031  0254                     u1100:	
  2032  0254                     l1542:	
  2033                           
  2034                           ;LCD.c: 97:             for (int i=0; i<3;i++){
  2035  0254  01BB               	clrf	VAL@i_371
  2036  0255  01BC               	clrf	VAL@i_371+1
  2037  0256                     l1548:	
  2038                           
  2039                           ;LCD.c: 98:                 valor = numero[i];
  2040  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0258  083B               	movf	VAL@i_371,w
  2043  0259  00A9               	movwf	??_VAL
  2044  025A  0729               	addwf	??_VAL,w
  2045  025B  3E31               	addlw	(low (VAL@numero| 0))& (0+255)
  2046  025C  0084               	movwf	4
  2047  025D  1383               	bcf	3,7	;select IRP bank0
  2048  025E  0800               	movf	0,w
  2049  025F  00AA               	movwf	??_VAL+1
  2050  0260  082A               	movf	??_VAL+1,w
  2051  0261  00BE               	movwf	VAL@valor
  2052  0262                     l1550:	
  2053                           
  2054                           ;LCD.c: 99:                 if (i == 0) {coordenada = 7;}
  2055  0262  083B               	movf	VAL@i_371,w
  2056  0263  043C               	iorwf	VAL@i_371+1,w
  2057  0264  1D03               	btfss	3,2
  2058  0265  2A67               	goto	u1111
  2059  0266  2A68               	goto	u1110
  2060  0267                     u1111:	
  2061  0267  2A6C               	goto	l1554
  2062  0268                     u1110:	
  2063  0268                     l1552:	
  2064  0268  3007               	movlw	7
  2065  0269  00A9               	movwf	??_VAL
  2066  026A  0829               	movf	??_VAL,w
  2067  026B  00BF               	movwf	VAL@coordenada
  2068  026C                     l1554:	
  2069                           
  2070                           ;LCD.c: 100:                 if (i == 1) {coordenada = 9;}
  2071  026C  033B               	decf	VAL@i_371,w
  2072  026D  043C               	iorwf	VAL@i_371+1,w
  2073  026E  1D03               	btfss	3,2
  2074  026F  2A71               	goto	u1121
  2075  0270  2A72               	goto	u1120
  2076  0271                     u1121:	
  2077  0271  2A76               	goto	l1558
  2078  0272                     u1120:	
  2079  0272                     l1556:	
  2080  0272  3009               	movlw	9
  2081  0273  00A9               	movwf	??_VAL
  2082  0274  0829               	movf	??_VAL,w
  2083  0275  00BF               	movwf	VAL@coordenada
  2084  0276                     l1558:	
  2085                           
  2086                           ;LCD.c: 101:                 if (i == 2) {coordenada = 10;}
  2087  0276  3002               	movlw	2
  2088  0277  063B               	xorwf	VAL@i_371,w
  2089  0278  043C               	iorwf	VAL@i_371+1,w
  2090  0279  1D03               	btfss	3,2
  2091  027A  2A7C               	goto	u1131
  2092  027B  2A7D               	goto	u1130
  2093  027C                     u1131:	
  2094  027C  2A81               	goto	l1562
  2095  027D                     u1130:	
  2096  027D                     l1560:	
  2097  027D  300A               	movlw	10
  2098  027E  00A9               	movwf	??_VAL
  2099  027F  0829               	movf	??_VAL,w
  2100  0280  00BF               	movwf	VAL@coordenada
  2101  0281                     l1562:	
  2102                           
  2103                           ;LCD.c: 102:                 if (valor == 0){LCD_PRINT_WP(coordenada,2,"0");}
  2104  0281  083E               	movf	VAL@valor,w
  2105  0282  1D03               	btfss	3,2
  2106  0283  2A85               	goto	u1141
  2107  0284  2A86               	goto	u1140
  2108  0285                     u1141:	
  2109  0285  2A9A               	goto	l1566
  2110  0286                     u1140:	
  2111  0286                     l1564:	
  2112  0286  083F               	movf	VAL@coordenada,w
  2113  0287  00A9               	movwf	??_VAL
  2114  0288  01AA               	clrf	??_VAL+1
  2115  0289  0829               	movf	??_VAL,w
  2116  028A  00A0               	movwf	LCD_PRINT_WP@x
  2117  028B  082A               	movf	??_VAL+1,w
  2118  028C  00A1               	movwf	LCD_PRINT_WP@x+1
  2119  028D  3002               	movlw	2
  2120  028E  00A2               	movwf	LCD_PRINT_WP@y
  2121  028F  3000               	movlw	0
  2122  0290  00A3               	movwf	LCD_PRINT_WP@y+1
  2123  0291  3021               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
  2124  0292  00AB               	movwf	??_VAL+2
  2125  0293  082B               	movf	??_VAL+2,w
  2126  0294  00A4               	movwf	LCD_PRINT_WP@frase
  2127  0295  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2128  029A                     l1566:	
  2129                           
  2130                           ;LCD.c: 103:                 if (valor == 1){LCD_PRINT_WP(coordenada,2,"1");}
  2131  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2132  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2133  029C  033E               	decf	VAL@valor,w
  2134  029D  1D03               	btfss	3,2
  2135  029E  2AA0               	goto	u1151
  2136  029F  2AA1               	goto	u1150
  2137  02A0                     u1151:	
  2138  02A0  2AB5               	goto	l1570
  2139  02A1                     u1150:	
  2140  02A1                     l1568:	
  2141  02A1  083F               	movf	VAL@coordenada,w
  2142  02A2  00A9               	movwf	??_VAL
  2143  02A3  01AA               	clrf	??_VAL+1
  2144  02A4  0829               	movf	??_VAL,w
  2145  02A5  00A0               	movwf	LCD_PRINT_WP@x
  2146  02A6  082A               	movf	??_VAL+1,w
  2147  02A7  00A1               	movwf	LCD_PRINT_WP@x+1
  2148  02A8  3002               	movlw	2
  2149  02A9  00A2               	movwf	LCD_PRINT_WP@y
  2150  02AA  3000               	movlw	0
  2151  02AB  00A3               	movwf	LCD_PRINT_WP@y+1
  2152  02AC  3067               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2153  02AD  00AB               	movwf	??_VAL+2
  2154  02AE  082B               	movf	??_VAL+2,w
  2155  02AF  00A4               	movwf	LCD_PRINT_WP@frase
  2156  02B0  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2157  02B5                     l1570:	
  2158                           
  2159                           ;LCD.c: 104:                 if (valor == 2){LCD_PRINT_WP(coordenada,2,"2");}
  2160  02B5  3002               	movlw	2
  2161  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2162  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2163  02B8  063E               	xorwf	VAL@valor,w
  2164  02B9  1D03               	btfss	3,2
  2165  02BA  2ABC               	goto	u1161
  2166  02BB  2ABD               	goto	u1160
  2167  02BC                     u1161:	
  2168  02BC  2AD1               	goto	l1574
  2169  02BD                     u1160:	
  2170  02BD                     l1572:	
  2171  02BD  083F               	movf	VAL@coordenada,w
  2172  02BE  00A9               	movwf	??_VAL
  2173  02BF  01AA               	clrf	??_VAL+1
  2174  02C0  0829               	movf	??_VAL,w
  2175  02C1  00A0               	movwf	LCD_PRINT_WP@x
  2176  02C2  082A               	movf	??_VAL+1,w
  2177  02C3  00A1               	movwf	LCD_PRINT_WP@x+1
  2178  02C4  3002               	movlw	2
  2179  02C5  00A2               	movwf	LCD_PRINT_WP@y
  2180  02C6  3000               	movlw	0
  2181  02C7  00A3               	movwf	LCD_PRINT_WP@y+1
  2182  02C8  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2183  02C9  00AB               	movwf	??_VAL+2
  2184  02CA  082B               	movf	??_VAL+2,w
  2185  02CB  00A4               	movwf	LCD_PRINT_WP@frase
  2186  02CC  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2187  02D1                     l1574:	
  2188                           
  2189                           ;LCD.c: 105:                 if (valor == 3){LCD_PRINT_WP(coordenada,2,"3");}
  2190  02D1  3003               	movlw	3
  2191  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2192  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2193  02D4  063E               	xorwf	VAL@valor,w
  2194  02D5  1D03               	btfss	3,2
  2195  02D6  2AD8               	goto	u1171
  2196  02D7  2AD9               	goto	u1170
  2197  02D8                     u1171:	
  2198  02D8  2AED               	goto	l1578
  2199  02D9                     u1170:	
  2200  02D9                     l1576:	
  2201  02D9  083F               	movf	VAL@coordenada,w
  2202  02DA  00A9               	movwf	??_VAL
  2203  02DB  01AA               	clrf	??_VAL+1
  2204  02DC  0829               	movf	??_VAL,w
  2205  02DD  00A0               	movwf	LCD_PRINT_WP@x
  2206  02DE  082A               	movf	??_VAL+1,w
  2207  02DF  00A1               	movwf	LCD_PRINT_WP@x+1
  2208  02E0  3002               	movlw	2
  2209  02E1  00A2               	movwf	LCD_PRINT_WP@y
  2210  02E2  3000               	movlw	0
  2211  02E3  00A3               	movwf	LCD_PRINT_WP@y+1
  2212  02E4  3032               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  2213  02E5  00AB               	movwf	??_VAL+2
  2214  02E6  082B               	movf	??_VAL+2,w
  2215  02E7  00A4               	movwf	LCD_PRINT_WP@frase
  2216  02E8  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2217  02ED                     l1578:	
  2218                           
  2219                           ;LCD.c: 106:                 if (valor == 4){LCD_PRINT_WP(coordenada,2,"4");}
  2220  02ED  3004               	movlw	4
  2221  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2222  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2223  02F0  063E               	xorwf	VAL@valor,w
  2224  02F1  1D03               	btfss	3,2
  2225  02F2  2AF4               	goto	u1181
  2226  02F3  2AF5               	goto	u1180
  2227  02F4                     u1181:	
  2228  02F4  2B09               	goto	l1582
  2229  02F5                     u1180:	
  2230  02F5                     l1580:	
  2231  02F5  083F               	movf	VAL@coordenada,w
  2232  02F6  00A9               	movwf	??_VAL
  2233  02F7  01AA               	clrf	??_VAL+1
  2234  02F8  0829               	movf	??_VAL,w
  2235  02F9  00A0               	movwf	LCD_PRINT_WP@x
  2236  02FA  082A               	movf	??_VAL+1,w
  2237  02FB  00A1               	movwf	LCD_PRINT_WP@x+1
  2238  02FC  3002               	movlw	2
  2239  02FD  00A2               	movwf	LCD_PRINT_WP@y
  2240  02FE  3000               	movlw	0
  2241  02FF  00A3               	movwf	LCD_PRINT_WP@y+1
  2242  0300  306B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2243  0301  00AB               	movwf	??_VAL+2
  2244  0302  082B               	movf	??_VAL+2,w
  2245  0303  00A4               	movwf	LCD_PRINT_WP@frase
  2246  0304  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2247  0309                     l1582:	
  2248                           
  2249                           ;LCD.c: 107:                 if (valor == 5){LCD_PRINT_WP(coordenada,2,"5");}
  2250  0309  3005               	movlw	5
  2251  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2252  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2253  030C  063E               	xorwf	VAL@valor,w
  2254  030D  1D03               	btfss	3,2
  2255  030E  2B10               	goto	u1191
  2256  030F  2B11               	goto	u1190
  2257  0310                     u1191:	
  2258  0310  2B25               	goto	l1586
  2259  0311                     u1190:	
  2260  0311                     l1584:	
  2261  0311  083F               	movf	VAL@coordenada,w
  2262  0312  00A9               	movwf	??_VAL
  2263  0313  01AA               	clrf	??_VAL+1
  2264  0314  0829               	movf	??_VAL,w
  2265  0315  00A0               	movwf	LCD_PRINT_WP@x
  2266  0316  082A               	movf	??_VAL+1,w
  2267  0317  00A1               	movwf	LCD_PRINT_WP@x+1
  2268  0318  3002               	movlw	2
  2269  0319  00A2               	movwf	LCD_PRINT_WP@y
  2270  031A  3000               	movlw	0
  2271  031B  00A3               	movwf	LCD_PRINT_WP@y+1
  2272  031C  306D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2273  031D  00AB               	movwf	??_VAL+2
  2274  031E  082B               	movf	??_VAL+2,w
  2275  031F  00A4               	movwf	LCD_PRINT_WP@frase
  2276  0320  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2277  0325                     l1586:	
  2278                           
  2279                           ;LCD.c: 108:                 if (valor == 6){LCD_PRINT_WP(coordenada,2,"6");}
  2280  0325  3006               	movlw	6
  2281  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0328  063E               	xorwf	VAL@valor,w
  2284  0329  1D03               	btfss	3,2
  2285  032A  2B2C               	goto	u1201
  2286  032B  2B2D               	goto	u1200
  2287  032C                     u1201:	
  2288  032C  2B41               	goto	l1590
  2289  032D                     u1200:	
  2290  032D                     l1588:	
  2291  032D  083F               	movf	VAL@coordenada,w
  2292  032E  00A9               	movwf	??_VAL
  2293  032F  01AA               	clrf	??_VAL+1
  2294  0330  0829               	movf	??_VAL,w
  2295  0331  00A0               	movwf	LCD_PRINT_WP@x
  2296  0332  082A               	movf	??_VAL+1,w
  2297  0333  00A1               	movwf	LCD_PRINT_WP@x+1
  2298  0334  3002               	movlw	2
  2299  0335  00A2               	movwf	LCD_PRINT_WP@y
  2300  0336  3000               	movlw	0
  2301  0337  00A3               	movwf	LCD_PRINT_WP@y+1
  2302  0338  306F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2303  0339  00AB               	movwf	??_VAL+2
  2304  033A  082B               	movf	??_VAL+2,w
  2305  033B  00A4               	movwf	LCD_PRINT_WP@frase
  2306  033C  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2307  0341                     l1590:	
  2308                           
  2309                           ;LCD.c: 109:                 if (valor == 7){LCD_PRINT_WP(coordenada,2,"7");}
  2310  0341  3007               	movlw	7
  2311  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0344  063E               	xorwf	VAL@valor,w
  2314  0345  1D03               	btfss	3,2
  2315  0346  2B48               	goto	u1211
  2316  0347  2B49               	goto	u1210
  2317  0348                     u1211:	
  2318  0348  2B5D               	goto	l1594
  2319  0349                     u1210:	
  2320  0349                     l1592:	
  2321  0349  083F               	movf	VAL@coordenada,w
  2322  034A  00A9               	movwf	??_VAL
  2323  034B  01AA               	clrf	??_VAL+1
  2324  034C  0829               	movf	??_VAL,w
  2325  034D  00A0               	movwf	LCD_PRINT_WP@x
  2326  034E  082A               	movf	??_VAL+1,w
  2327  034F  00A1               	movwf	LCD_PRINT_WP@x+1
  2328  0350  3002               	movlw	2
  2329  0351  00A2               	movwf	LCD_PRINT_WP@y
  2330  0352  3000               	movlw	0
  2331  0353  00A3               	movwf	LCD_PRINT_WP@y+1
  2332  0354  3071               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2333  0355  00AB               	movwf	??_VAL+2
  2334  0356  082B               	movf	??_VAL+2,w
  2335  0357  00A4               	movwf	LCD_PRINT_WP@frase
  2336  0358  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2337  035D                     l1594:	
  2338                           
  2339                           ;LCD.c: 110:                 if (valor == 8){LCD_PRINT_WP(coordenada,2,"8");}
  2340  035D  3008               	movlw	8
  2341  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2342  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0360  063E               	xorwf	VAL@valor,w
  2344  0361  1D03               	btfss	3,2
  2345  0362  2B64               	goto	u1221
  2346  0363  2B65               	goto	u1220
  2347  0364                     u1221:	
  2348  0364  2B79               	goto	l1598
  2349  0365                     u1220:	
  2350  0365                     l1596:	
  2351  0365  083F               	movf	VAL@coordenada,w
  2352  0366  00A9               	movwf	??_VAL
  2353  0367  01AA               	clrf	??_VAL+1
  2354  0368  0829               	movf	??_VAL,w
  2355  0369  00A0               	movwf	LCD_PRINT_WP@x
  2356  036A  082A               	movf	??_VAL+1,w
  2357  036B  00A1               	movwf	LCD_PRINT_WP@x+1
  2358  036C  3002               	movlw	2
  2359  036D  00A2               	movwf	LCD_PRINT_WP@y
  2360  036E  3000               	movlw	0
  2361  036F  00A3               	movwf	LCD_PRINT_WP@y+1
  2362  0370  3073               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2363  0371  00AB               	movwf	??_VAL+2
  2364  0372  082B               	movf	??_VAL+2,w
  2365  0373  00A4               	movwf	LCD_PRINT_WP@frase
  2366  0374  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2367  0379                     l1598:	
  2368                           
  2369                           ;LCD.c: 111:                 if (valor == 9){LCD_PRINT_WP(coordenada,2,"9");}
  2370  0379  3009               	movlw	9
  2371  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2372  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2373  037C  063E               	xorwf	VAL@valor,w
  2374  037D  1D03               	btfss	3,2
  2375  037E  2B80               	goto	u1231
  2376  037F  2B81               	goto	u1230
  2377  0380                     u1231:	
  2378  0380  2B95               	goto	l1602
  2379  0381                     u1230:	
  2380  0381                     l1600:	
  2381  0381  083F               	movf	VAL@coordenada,w
  2382  0382  00A9               	movwf	??_VAL
  2383  0383  01AA               	clrf	??_VAL+1
  2384  0384  0829               	movf	??_VAL,w
  2385  0385  00A0               	movwf	LCD_PRINT_WP@x
  2386  0386  082A               	movf	??_VAL+1,w
  2387  0387  00A1               	movwf	LCD_PRINT_WP@x+1
  2388  0388  3002               	movlw	2
  2389  0389  00A2               	movwf	LCD_PRINT_WP@y
  2390  038A  3000               	movlw	0
  2391  038B  00A3               	movwf	LCD_PRINT_WP@y+1
  2392  038C  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2393  038D  00AB               	movwf	??_VAL+2
  2394  038E  082B               	movf	??_VAL+2,w
  2395  038F  00A4               	movwf	LCD_PRINT_WP@frase
  2396  0390  120A  118A  26EB  120A  118A  	fcall	_LCD_PRINT_WP
  2397  0395                     l1602:	
  2398                           
  2399                           ;LCD.c: 113:         }}
  2400  0395  3001               	movlw	1
  2401  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0398  07BB               	addwf	VAL@i_371,f
  2404  0399  1803               	skipnc
  2405  039A  0ABC               	incf	VAL@i_371+1,f
  2406  039B  3000               	movlw	0
  2407  039C  07BC               	addwf	VAL@i_371+1,f
  2408  039D                     l1604:	
  2409  039D  083C               	movf	VAL@i_371+1,w
  2410  039E  3A80               	xorlw	128
  2411  039F  00FF               	movwf	btemp+1
  2412  03A0  3080               	movlw	128
  2413  03A1  027F               	subwf	btemp+1,w
  2414  03A2  1D03               	skipz
  2415  03A3  2BA6               	goto	u1245
  2416  03A4  3003               	movlw	3
  2417  03A5  023B               	subwf	VAL@i_371,w
  2418  03A6                     u1245:	
  2419  03A6  1C03               	skipc
  2420  03A7  2BA9               	goto	u1241
  2421  03A8  2BAA               	goto	u1240
  2422  03A9                     u1241:	
  2423  03A9  2A56               	goto	l1548
  2424  03AA                     u1240:	
  2425  03AA                     l194:	
  2426  03AA  0008               	return
  2427  03AB                     __end_of_VAL:	
  2428                           
  2429                           	psect	text3
  2430  05E5                     __ptext3:	
  2431 ;; *************** function ___awmod *****************
  2432 ;; Defined at:
  2433 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  divisor         2    3[COMMON] int 
  2436 ;;  dividend        2    5[COMMON] int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  sign            1    9[COMMON] unsigned char 
  2439 ;;  counter         1    8[COMMON] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    3[COMMON] int 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         4       0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0
  2451 ;;      Temps:          1       0       0       0       0
  2452 ;;      Totals:         7       0       0       0       0
  2453 ;;Total ram usage:        7 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_VAL
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function ___awmod
  2465  05E5                     ___awmod:	
  2466  05E5                     l1348:	
  2467                           ;incstack = 0
  2468                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2469                           
  2470  05E5  01F9               	clrf	___awmod@sign
  2471  05E6                     l1350:	
  2472  05E6  1FF6               	btfss	___awmod@dividend+1,7
  2473  05E7  2DE9               	goto	u841
  2474  05E8  2DEA               	goto	u840
  2475  05E9                     u841:	
  2476  05E9  2DF1               	goto	l1356
  2477  05EA                     u840:	
  2478  05EA                     l1352:	
  2479  05EA  09F5               	comf	___awmod@dividend,f
  2480  05EB  09F6               	comf	___awmod@dividend+1,f
  2481  05EC  0AF5               	incf	___awmod@dividend,f
  2482  05ED  1903               	skipnz
  2483  05EE  0AF6               	incf	___awmod@dividend+1,f
  2484  05EF                     l1354:	
  2485  05EF  01F9               	clrf	___awmod@sign
  2486  05F0  0AF9               	incf	___awmod@sign,f
  2487  05F1                     l1356:	
  2488  05F1  1FF4               	btfss	___awmod@divisor+1,7
  2489  05F2  2DF4               	goto	u851
  2490  05F3  2DF5               	goto	u850
  2491  05F4                     u851:	
  2492  05F4  2DFA               	goto	l1360
  2493  05F5                     u850:	
  2494  05F5                     l1358:	
  2495  05F5  09F3               	comf	___awmod@divisor,f
  2496  05F6  09F4               	comf	___awmod@divisor+1,f
  2497  05F7  0AF3               	incf	___awmod@divisor,f
  2498  05F8  1903               	skipnz
  2499  05F9  0AF4               	incf	___awmod@divisor+1,f
  2500  05FA                     l1360:	
  2501  05FA  0873               	movf	___awmod@divisor,w
  2502  05FB  0474               	iorwf	___awmod@divisor+1,w
  2503  05FC  1903               	btfsc	3,2
  2504  05FD  2DFF               	goto	u861
  2505  05FE  2E00               	goto	u860
  2506  05FF                     u861:	
  2507  05FF  2E2F               	goto	l1378
  2508  0600                     u860:	
  2509  0600                     l1362:	
  2510  0600  01F8               	clrf	___awmod@counter
  2511  0601  0AF8               	incf	___awmod@counter,f
  2512  0602  2E0E               	goto	l1368
  2513  0603                     l1364:	
  2514  0603  3001               	movlw	1
  2515  0604                     u875:	
  2516  0604  1003               	clrc
  2517  0605  0DF3               	rlf	___awmod@divisor,f
  2518  0606  0DF4               	rlf	___awmod@divisor+1,f
  2519  0607  3EFF               	addlw	-1
  2520  0608  1D03               	skipz
  2521  0609  2E04               	goto	u875
  2522  060A                     l1366:	
  2523  060A  3001               	movlw	1
  2524  060B  00F7               	movwf	??___awmod
  2525  060C  0877               	movf	??___awmod,w
  2526  060D  07F8               	addwf	___awmod@counter,f
  2527  060E                     l1368:	
  2528  060E  1FF4               	btfss	___awmod@divisor+1,7
  2529  060F  2E11               	goto	u881
  2530  0610  2E12               	goto	u880
  2531  0611                     u881:	
  2532  0611  2E03               	goto	l1364
  2533  0612                     u880:	
  2534  0612                     l1370:	
  2535  0612  0874               	movf	___awmod@divisor+1,w
  2536  0613  0276               	subwf	___awmod@dividend+1,w
  2537  0614  1D03               	skipz
  2538  0615  2E18               	goto	u895
  2539  0616  0873               	movf	___awmod@divisor,w
  2540  0617  0275               	subwf	___awmod@dividend,w
  2541  0618                     u895:	
  2542  0618  1C03               	skipc
  2543  0619  2E1B               	goto	u891
  2544  061A  2E1C               	goto	u890
  2545  061B                     u891:	
  2546  061B  2E22               	goto	l1374
  2547  061C                     u890:	
  2548  061C                     l1372:	
  2549  061C  0873               	movf	___awmod@divisor,w
  2550  061D  02F5               	subwf	___awmod@dividend,f
  2551  061E  0874               	movf	___awmod@divisor+1,w
  2552  061F  1C03               	skipc
  2553  0620  03F6               	decf	___awmod@dividend+1,f
  2554  0621  02F6               	subwf	___awmod@dividend+1,f
  2555  0622                     l1374:	
  2556  0622  3001               	movlw	1
  2557  0623                     u905:	
  2558  0623  1003               	clrc
  2559  0624  0CF4               	rrf	___awmod@divisor+1,f
  2560  0625  0CF3               	rrf	___awmod@divisor,f
  2561  0626  3EFF               	addlw	-1
  2562  0627  1D03               	skipz
  2563  0628  2E23               	goto	u905
  2564  0629                     l1376:	
  2565  0629  3001               	movlw	1
  2566  062A  02F8               	subwf	___awmod@counter,f
  2567  062B  1D03               	btfss	3,2
  2568  062C  2E2E               	goto	u911
  2569  062D  2E2F               	goto	u910
  2570  062E                     u911:	
  2571  062E  2E12               	goto	l1370
  2572  062F                     u910:	
  2573  062F                     l1378:	
  2574  062F  0879               	movf	___awmod@sign,w
  2575  0630  1903               	btfsc	3,2
  2576  0631  2E33               	goto	u921
  2577  0632  2E34               	goto	u920
  2578  0633                     u921:	
  2579  0633  2E39               	goto	l1382
  2580  0634                     u920:	
  2581  0634                     l1380:	
  2582  0634  09F5               	comf	___awmod@dividend,f
  2583  0635  09F6               	comf	___awmod@dividend+1,f
  2584  0636  0AF5               	incf	___awmod@dividend,f
  2585  0637  1903               	skipnz
  2586  0638  0AF6               	incf	___awmod@dividend+1,f
  2587  0639                     l1382:	
  2588  0639  0876               	movf	___awmod@dividend+1,w
  2589  063A  00F4               	movwf	?___awmod+1
  2590  063B  0875               	movf	___awmod@dividend,w
  2591  063C  00F3               	movwf	?___awmod
  2592  063D                     l446:	
  2593  063D  0008               	return
  2594  063E                     __end_of___awmod:	
  2595                           
  2596                           	psect	text4
  2597  057C                     __ptext4:	
  2598 ;; *************** function ___awdiv *****************
  2599 ;; Defined at:
  2600 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  divisor         2    0[BANK0 ] int 
  2603 ;;  dividend        2    2[BANK0 ] int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  quotient        2    6[BANK0 ] int 
  2606 ;;  sign            1    5[BANK0 ] unsigned char 
  2607 ;;  counter         1    4[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2    0[BANK0 ] int 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       4       0       0       0
  2618 ;;      Locals:         0       4       0       0       0
  2619 ;;      Temps:          1       0       0       0       0
  2620 ;;      Totals:         1       8       0       0       0
  2621 ;;Total ram usage:        9 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_VAL
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function ___awdiv
  2633  057C                     ___awdiv:	
  2634  057C                     l1304:	
  2635                           ;incstack = 0
  2636                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2637                           
  2638  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2639  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2640  057E  01A5               	clrf	___awdiv@sign
  2641  057F                     l1306:	
  2642  057F  1FA1               	btfss	___awdiv@divisor+1,7
  2643  0580  2D82               	goto	u741
  2644  0581  2D83               	goto	u740
  2645  0582                     u741:	
  2646  0582  2D8A               	goto	l1312
  2647  0583                     u740:	
  2648  0583                     l1308:	
  2649  0583  09A0               	comf	___awdiv@divisor,f
  2650  0584  09A1               	comf	___awdiv@divisor+1,f
  2651  0585  0AA0               	incf	___awdiv@divisor,f
  2652  0586  1903               	skipnz
  2653  0587  0AA1               	incf	___awdiv@divisor+1,f
  2654  0588                     l1310:	
  2655  0588  01A5               	clrf	___awdiv@sign
  2656  0589  0AA5               	incf	___awdiv@sign,f
  2657  058A                     l1312:	
  2658  058A  1FA3               	btfss	___awdiv@dividend+1,7
  2659  058B  2D8D               	goto	u751
  2660  058C  2D8E               	goto	u750
  2661  058D                     u751:	
  2662  058D  2D97               	goto	l1318
  2663  058E                     u750:	
  2664  058E                     l1314:	
  2665  058E  09A2               	comf	___awdiv@dividend,f
  2666  058F  09A3               	comf	___awdiv@dividend+1,f
  2667  0590  0AA2               	incf	___awdiv@dividend,f
  2668  0591  1903               	skipnz
  2669  0592  0AA3               	incf	___awdiv@dividend+1,f
  2670  0593                     l1316:	
  2671  0593  3001               	movlw	1
  2672  0594  00FA               	movwf	??___awdiv
  2673  0595  087A               	movf	??___awdiv,w
  2674  0596  06A5               	xorwf	___awdiv@sign,f
  2675  0597                     l1318:	
  2676  0597  01A6               	clrf	___awdiv@quotient
  2677  0598  01A7               	clrf	___awdiv@quotient+1
  2678  0599                     l1320:	
  2679  0599  0820               	movf	___awdiv@divisor,w
  2680  059A  0421               	iorwf	___awdiv@divisor+1,w
  2681  059B  1903               	btfsc	3,2
  2682  059C  2D9E               	goto	u761
  2683  059D  2D9F               	goto	u760
  2684  059E                     u761:	
  2685  059E  2DD6               	goto	l1340
  2686  059F                     u760:	
  2687  059F                     l1322:	
  2688  059F  01A4               	clrf	___awdiv@counter
  2689  05A0  0AA4               	incf	___awdiv@counter,f
  2690  05A1  2DAD               	goto	l1328
  2691  05A2                     l1324:	
  2692  05A2  3001               	movlw	1
  2693  05A3                     u775:	
  2694  05A3  1003               	clrc
  2695  05A4  0DA0               	rlf	___awdiv@divisor,f
  2696  05A5  0DA1               	rlf	___awdiv@divisor+1,f
  2697  05A6  3EFF               	addlw	-1
  2698  05A7  1D03               	skipz
  2699  05A8  2DA3               	goto	u775
  2700  05A9                     l1326:	
  2701  05A9  3001               	movlw	1
  2702  05AA  00FA               	movwf	??___awdiv
  2703  05AB  087A               	movf	??___awdiv,w
  2704  05AC  07A4               	addwf	___awdiv@counter,f
  2705  05AD                     l1328:	
  2706  05AD  1FA1               	btfss	___awdiv@divisor+1,7
  2707  05AE  2DB0               	goto	u781
  2708  05AF  2DB1               	goto	u780
  2709  05B0                     u781:	
  2710  05B0  2DA2               	goto	l1324
  2711  05B1                     u780:	
  2712  05B1                     l1330:	
  2713  05B1  3001               	movlw	1
  2714  05B2                     u795:	
  2715  05B2  1003               	clrc
  2716  05B3  0DA6               	rlf	___awdiv@quotient,f
  2717  05B4  0DA7               	rlf	___awdiv@quotient+1,f
  2718  05B5  3EFF               	addlw	-1
  2719  05B6  1D03               	skipz
  2720  05B7  2DB2               	goto	u795
  2721  05B8  0821               	movf	___awdiv@divisor+1,w
  2722  05B9  0223               	subwf	___awdiv@dividend+1,w
  2723  05BA  1D03               	skipz
  2724  05BB  2DBE               	goto	u805
  2725  05BC  0820               	movf	___awdiv@divisor,w
  2726  05BD  0222               	subwf	___awdiv@dividend,w
  2727  05BE                     u805:	
  2728  05BE  1C03               	skipc
  2729  05BF  2DC1               	goto	u801
  2730  05C0  2DC2               	goto	u800
  2731  05C1                     u801:	
  2732  05C1  2DC9               	goto	l1336
  2733  05C2                     u800:	
  2734  05C2                     l1332:	
  2735  05C2  0820               	movf	___awdiv@divisor,w
  2736  05C3  02A2               	subwf	___awdiv@dividend,f
  2737  05C4  0821               	movf	___awdiv@divisor+1,w
  2738  05C5  1C03               	skipc
  2739  05C6  03A3               	decf	___awdiv@dividend+1,f
  2740  05C7  02A3               	subwf	___awdiv@dividend+1,f
  2741  05C8                     l1334:	
  2742  05C8  1426               	bsf	___awdiv@quotient,0
  2743  05C9                     l1336:	
  2744  05C9  3001               	movlw	1
  2745  05CA                     u815:	
  2746  05CA  1003               	clrc
  2747  05CB  0CA1               	rrf	___awdiv@divisor+1,f
  2748  05CC  0CA0               	rrf	___awdiv@divisor,f
  2749  05CD  3EFF               	addlw	-1
  2750  05CE  1D03               	skipz
  2751  05CF  2DCA               	goto	u815
  2752  05D0                     l1338:	
  2753  05D0  3001               	movlw	1
  2754  05D1  02A4               	subwf	___awdiv@counter,f
  2755  05D2  1D03               	btfss	3,2
  2756  05D3  2DD5               	goto	u821
  2757  05D4  2DD6               	goto	u820
  2758  05D5                     u821:	
  2759  05D5  2DB1               	goto	l1330
  2760  05D6                     u820:	
  2761  05D6                     l1340:	
  2762  05D6  0825               	movf	___awdiv@sign,w
  2763  05D7  1903               	btfsc	3,2
  2764  05D8  2DDA               	goto	u831
  2765  05D9  2DDB               	goto	u830
  2766  05DA                     u831:	
  2767  05DA  2DE0               	goto	l1344
  2768  05DB                     u830:	
  2769  05DB                     l1342:	
  2770  05DB  09A6               	comf	___awdiv@quotient,f
  2771  05DC  09A7               	comf	___awdiv@quotient+1,f
  2772  05DD  0AA6               	incf	___awdiv@quotient,f
  2773  05DE  1903               	skipnz
  2774  05DF  0AA7               	incf	___awdiv@quotient+1,f
  2775  05E0                     l1344:	
  2776  05E0  0827               	movf	___awdiv@quotient+1,w
  2777  05E1  00A1               	movwf	?___awdiv+1
  2778  05E2  0826               	movf	___awdiv@quotient,w
  2779  05E3  00A0               	movwf	?___awdiv
  2780  05E4                     l433:	
  2781  05E4  0008               	return
  2782  05E5                     __end_of___awdiv:	
  2783                           
  2784                           	psect	text5
  2785  06EB                     __ptext5:	
  2786 ;; *************** function _LCD_PRINT_WP *****************
  2787 ;; Defined at:
  2788 ;;		line 63 in file "LCD.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  x               2    0[BANK0 ] int 
  2791 ;;  y               2    2[BANK0 ] int 
  2792 ;;  frase           1    4[BANK0 ] PTR unsigned char 
  2793 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2794 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2795 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2796 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2797 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2798 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2799 ;;		 -> STR_2(17), STR_1(17), 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  location        1    5[BANK0 ] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         0       5       0       0       0
  2812 ;;      Locals:         0       1       0       0       0
  2813 ;;      Temps:          1       0       0       0       0
  2814 ;;      Totals:         1       6       0       0       0
  2815 ;;Total ram usage:        7 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    5
  2818 ;; This function calls:
  2819 ;;		_LCD_CONTROL
  2820 ;;		_LCD_PRINT
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;;		_VAL
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _LCD_PRINT_WP
  2829  06EB                     _LCD_PRINT_WP:	
  2830  06EB                     l1290:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2833                           
  2834                           
  2835                           ;LCD.c: 64:     char location;;LCD.c: 65:     if (y == 1){location = 0x80 + x;}
  2836  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2837  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2838  06ED  0322               	decf	LCD_PRINT_WP@y,w
  2839  06EE  0423               	iorwf	LCD_PRINT_WP@y+1,w
  2840  06EF  1D03               	btfss	3,2
  2841  06F0  2EF2               	goto	u731
  2842  06F1  2EF3               	goto	u730
  2843  06F2                     u731:	
  2844  06F2  2EF9               	goto	l1294
  2845  06F3                     u730:	
  2846  06F3                     l1292:	
  2847  06F3  0820               	movf	LCD_PRINT_WP@x,w
  2848  06F4  3E80               	addlw	128
  2849  06F5  00FA               	movwf	??_LCD_PRINT_WP
  2850  06F6  087A               	movf	??_LCD_PRINT_WP,w
  2851  06F7  00A5               	movwf	LCD_PRINT_WP@location
  2852  06F8  2EFE               	goto	l1300
  2853  06F9                     l1294:	
  2854  06F9                     l1296:	
  2855  06F9  0820               	movf	LCD_PRINT_WP@x,w
  2856  06FA  3EC0               	addlw	192
  2857  06FB  00FA               	movwf	??_LCD_PRINT_WP
  2858  06FC  087A               	movf	??_LCD_PRINT_WP,w
  2859  06FD  00A5               	movwf	LCD_PRINT_WP@location
  2860  06FE                     l1300:	
  2861                           
  2862                           ;LCD.c: 68:     LCD_CONTROL(location);
  2863  06FE  0825               	movf	LCD_PRINT_WP@location,w
  2864  06FF  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  2865  0704                     l1302:	
  2866                           
  2867                           ;LCD.c: 69:     LCD_PRINT(frase);
  2868  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0706  0824               	movf	LCD_PRINT_WP@frase,w
  2871  0707  120A  118A  270D  120A  118A  	fcall	_LCD_PRINT
  2872  070C                     l156:	
  2873  070C  0008               	return
  2874  070D                     __end_of_LCD_PRINT_WP:	
  2875                           
  2876                           	psect	text6
  2877  070D                     __ptext6:	
  2878 ;; *************** function _LCD_PRINT *****************
  2879 ;; Defined at:
  2880 ;;		line 56 in file "LCD.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  data            1    wreg     PTR unsigned char 
  2883 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2884 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2885 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2886 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2887 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2888 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2889 ;;		 -> STR_2(17), STR_1(17), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  data            1    9[COMMON] PTR unsigned char 
  2892 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2893 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2894 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2895 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2896 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2897 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2898 ;;		 -> STR_2(17), STR_1(17), 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         1       0       0       0       0
  2910 ;;      Temps:          1       0       0       0       0
  2911 ;;      Totals:         2       0       0       0       0
  2912 ;;Total ram usage:        2 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    4
  2915 ;; This function calls:
  2916 ;;		_LCD_DATO
  2917 ;; This function is called by:
  2918 ;;		_LCD_PRINT_WP
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _LCD_PRINT
  2924  070D                     _LCD_PRINT:	
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2928                           ;LCD_PRINT@data stored from wreg
  2929  070D  00F9               	movwf	LCD_PRINT@data
  2930  070E                     l1282:	
  2931                           
  2932                           ;LCD.c: 57:     while(*data){
  2933  070E  2F1F               	goto	l1288
  2934  070F                     l1284:	
  2935                           
  2936                           ;LCD.c: 58:         LCD_DATO (*data);
  2937  070F  0879               	movf	LCD_PRINT@data,w
  2938  0710  0084               	movwf	4
  2939  0711  120A  118A  2500  120A  118A  	fcall	stringdir
  2940  0716  120A  118A  2758  120A  118A  	fcall	_LCD_DATO
  2941  071B                     l1286:	
  2942                           
  2943                           ;LCD.c: 59:         data++;}}
  2944  071B  3001               	movlw	1
  2945  071C  00F8               	movwf	??_LCD_PRINT
  2946  071D  0878               	movf	??_LCD_PRINT,w
  2947  071E  07F9               	addwf	LCD_PRINT@data,f
  2948  071F                     l1288:	
  2949                           
  2950                           ;LCD.c: 57:     while(*data){
  2951  071F  0879               	movf	LCD_PRINT@data,w
  2952  0720  0084               	movwf	4
  2953  0721  120A  118A  2500  120A  118A  	fcall	stringdir
  2954  0726  3A00               	xorlw	0
  2955  0727  1D03               	skipz
  2956  0728  2F2A               	goto	u721
  2957  0729  2F2B               	goto	u720
  2958  072A                     u721:	
  2959  072A  2F0F               	goto	l1284
  2960  072B                     u720:	
  2961  072B                     l146:	
  2962  072B  0008               	return
  2963  072C                     __end_of_LCD_PRINT:	
  2964                           
  2965                           	psect	text7
  2966  0758                     __ptext7:	
  2967 ;; *************** function _LCD_DATO *****************
  2968 ;; Defined at:
  2969 ;;		line 45 in file "LCD.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  comando         1    wreg     unsigned char 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  comando         1    7[COMMON] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         0       0       0       0       0
  2984 ;;      Locals:         1       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0
  2986 ;;      Totals:         1       0       0       0       0
  2987 ;;Total ram usage:        1 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    3
  2990 ;; This function calls:
  2991 ;;		_LCD_PULSE
  2992 ;;		_delay_us
  2993 ;; This function is called by:
  2994 ;;		_LCD_PRINT
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _LCD_DATO
  3000  0758                     _LCD_DATO:	
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  3004                           ;LCD_DATO@comando stored from wreg
  3005  0758  00F7               	movwf	LCD_DATO@comando
  3006  0759                     l1266:	
  3007                           
  3008                           ;LCD.c: 46:     PORTEbits.RE0 = 1;
  3009  0759  1283               	bcf	3,5	;RP0=0, select bank0
  3010  075A  1303               	bcf	3,6	;RP1=0, select bank0
  3011  075B  1409               	bsf	9,0	;volatile
  3012  075C                     l1268:	
  3013                           
  3014                           ;LCD.c: 47:     PORTD = comando;
  3015  075C  0877               	movf	LCD_DATO@comando,w
  3016  075D  0088               	movwf	8	;volatile
  3017  075E                     l1270:	
  3018                           
  3019                           ;LCD.c: 48:     LCD_PULSE();
  3020  075E  120A  118A  2745  120A  118A  	fcall	_LCD_PULSE
  3021  0763                     l1272:	
  3022                           
  3023                           ;LCD.c: 49:     delay_us(50);
  3024  0763  3032               	movlw	50
  3025  0764  120A  118A  272C  120A  118A  	fcall	_delay_us
  3026  0769                     l137:	
  3027  0769  0008               	return
  3028  076A                     __end_of_LCD_DATO:	
  3029                           
  3030                           	psect	text8
  3031  078B                     __ptext8:	
  3032 ;; *************** function _LCD_RH *****************
  3033 ;; Defined at:
  3034 ;;		line 61 in file "LCD.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0       0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    4
  3055 ;; This function calls:
  3056 ;;		_LCD_CONTROL
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           
  3063                           ;psect for function _LCD_RH
  3064  078B                     _LCD_RH:	
  3065  078B                     l1444:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3068                           
  3069  078B  3002               	movlw	2
  3070  078C  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  3071  0791                     l149:	
  3072  0791  0008               	return
  3073  0792                     __end_of_LCD_RH:	
  3074                           
  3075                           	psect	text9
  3076  0792                     __ptext9:	
  3077 ;; *************** function _LCD_CLEAR *****************
  3078 ;; Defined at:
  3079 ;;		line 52 in file "LCD.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    4
  3100 ;; This function calls:
  3101 ;;		_LCD_CONTROL
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _LCD_CLEAR
  3109  0792                     _LCD_CLEAR:	
  3110  0792                     l1442:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3113                           
  3114                           
  3115                           ;LCD.c: 53:     LCD_CONTROL(0x01);}
  3116  0792  3001               	movlw	1
  3117  0793  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  3118  0798                     l140:	
  3119  0798  0008               	return
  3120  0799                     __end_of_LCD_CLEAR:	
  3121                           
  3122                           	psect	text10
  3123  069E                     __ptext10:	
  3124 ;; *************** function _INIT_LCD *****************
  3125 ;; Defined at:
  3126 ;;		line 20 in file "LCD.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    4
  3147 ;; This function calls:
  3148 ;;		_LCD_CONTROL
  3149 ;;		_delay_ms
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _INIT_LCD
  3157  069E                     _INIT_LCD:	
  3158  069E                     l1424:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3161                           
  3162                           
  3163                           ;LCD.c: 21:     TRISEbits.TRISE0 = 0;
  3164  069E  1683               	bsf	3,5	;RP0=1, select bank1
  3165  069F  1303               	bcf	3,6	;RP1=0, select bank1
  3166  06A0  1009               	bcf	9,0	;volatile
  3167                           
  3168                           ;LCD.c: 22:     TRISEbits.TRISE1 = 0;
  3169  06A1  1089               	bcf	9,1	;volatile
  3170  06A2                     l1426:	
  3171                           
  3172                           ;LCD.c: 23:     TRISD = 0b00000000;
  3173  06A2  0188               	clrf	8	;volatile
  3174  06A3                     l1428:	
  3175                           
  3176                           ;LCD.c: 24:     PORTEbits.RE0 = 0;
  3177  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3178  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3179  06A5  1009               	bcf	9,0	;volatile
  3180  06A6                     l1430:	
  3181                           
  3182                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  3183  06A6  1089               	bcf	9,1	;volatile
  3184                           
  3185                           ;LCD.c: 26:     PORTD = 0;
  3186  06A7  0188               	clrf	8	;volatile
  3187  06A8                     l1432:	
  3188                           
  3189                           ;LCD.c: 27:     delay_ms(50);
  3190  06A8  3032               	movlw	50
  3191  06A9  120A  118A  2671  120A  118A  	fcall	_delay_ms
  3192  06AE                     l1434:	
  3193                           
  3194                           ;LCD.c: 28:     LCD_CONTROL(0x02);
  3195  06AE  3002               	movlw	2
  3196  06AF  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  3197  06B4                     l1436:	
  3198                           
  3199                           ;LCD.c: 29:     LCD_CONTROL(0x38);
  3200  06B4  3038               	movlw	56
  3201  06B5  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  3202  06BA                     l1438:	
  3203                           
  3204                           ;LCD.c: 30:     LCD_CONTROL(0x0C);
  3205  06BA  300C               	movlw	12
  3206  06BB  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  3207  06C0                     l1440:	
  3208                           
  3209                           ;LCD.c: 31:     LCD_CONTROL(0x06);}
  3210  06C0  3006               	movlw	6
  3211  06C1  120A  118A  276A  120A  118A  	fcall	_LCD_CONTROL
  3212  06C6                     l128:	
  3213  06C6  0008               	return
  3214  06C7                     __end_of_INIT_LCD:	
  3215                           
  3216                           	psect	text11
  3217  076A                     __ptext11:	
  3218 ;; *************** function _LCD_CONTROL *****************
  3219 ;; Defined at:
  3220 ;;		line 33 in file "LCD.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  dato            1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  dato            1    9[COMMON] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         1       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         1       0       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    3
  3241 ;; This function calls:
  3242 ;;		_LCD_PULSE
  3243 ;;		_delay_ms
  3244 ;; This function is called by:
  3245 ;;		_INIT_LCD
  3246 ;;		_LCD_CLEAR
  3247 ;;		_LCD_RH
  3248 ;;		_LCD_PRINT_WP
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _LCD_CONTROL
  3254  076A                     _LCD_CONTROL:	
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3258                           ;LCD_CONTROL@dato stored from wreg
  3259  076A  00F9               	movwf	LCD_CONTROL@dato
  3260  076B                     l1274:	
  3261                           
  3262                           ;LCD.c: 34:     PORTEbits.RE0 = 0;
  3263  076B  1283               	bcf	3,5	;RP0=0, select bank0
  3264  076C  1303               	bcf	3,6	;RP1=0, select bank0
  3265  076D  1009               	bcf	9,0	;volatile
  3266  076E                     l1276:	
  3267                           
  3268                           ;LCD.c: 35:     PORTD = dato;
  3269  076E  0879               	movf	LCD_CONTROL@dato,w
  3270  076F  0088               	movwf	8	;volatile
  3271  0770                     l1278:	
  3272                           
  3273                           ;LCD.c: 36:     LCD_PULSE();
  3274  0770  120A  118A  2745  120A  118A  	fcall	_LCD_PULSE
  3275  0775                     l1280:	
  3276                           
  3277                           ;LCD.c: 37:     delay_ms(2);}
  3278  0775  3002               	movlw	2
  3279  0776  120A  118A  2671  120A  118A  	fcall	_delay_ms
  3280  077B                     l131:	
  3281  077B  0008               	return
  3282  077C                     __end_of_LCD_CONTROL:	
  3283                           
  3284                           	psect	text12
  3285  0671                     __ptext12:	
  3286 ;; *************** function _delay_ms *****************
  3287 ;; Defined at:
  3288 ;;		line 17 in file "DELAYS.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  dms             1    wreg     unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  dms             1    4[COMMON] unsigned char 
  3293 ;;  j               2    7[COMMON] int 
  3294 ;;  i               2    5[COMMON] int 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, btemp+1
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         5       0       0       0       0
  3306 ;;      Temps:          1       0       0       0       0
  3307 ;;      Totals:         6       0       0       0       0
  3308 ;;Total ram usage:        6 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;;		_INIT_LCD
  3316 ;;		_LCD_CONTROL
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _delay_ms
  3322  0671                     _delay_ms:	
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  3326                           ;delay_ms@dms stored from wreg
  3327  0671  00F4               	movwf	delay_ms@dms
  3328  0672                     l1252:	
  3329                           
  3330                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++)
  3331  0672  01F5               	clrf	delay_ms@i
  3332  0673  01F6               	clrf	delay_ms@i+1
  3333  0674  2E90               	goto	l91
  3334  0675                     l1254:	
  3335                           
  3336                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}}
  3337  0675  01F7               	clrf	delay_ms@j
  3338  0676  01F8               	clrf	delay_ms@j+1
  3339  0677                     l1260:	
  3340  0677  3001               	movlw	1
  3341  0678  07F7               	addwf	delay_ms@j,f
  3342  0679  1803               	skipnc
  3343  067A  0AF8               	incf	delay_ms@j+1,f
  3344  067B  3000               	movlw	0
  3345  067C  07F8               	addwf	delay_ms@j+1,f
  3346  067D                     l1262:	
  3347  067D  0878               	movf	delay_ms@j+1,w
  3348  067E  3A80               	xorlw	128
  3349  067F  00FF               	movwf	btemp+1
  3350  0680  3080               	movlw	128
  3351  0681  027F               	subwf	btemp+1,w
  3352  0682  1D03               	skipz
  3353  0683  2E86               	goto	u705
  3354  0684  30FF               	movlw	255
  3355  0685  0277               	subwf	delay_ms@j,w
  3356  0686                     u705:	
  3357  0686  1C03               	skipc
  3358  0687  2E89               	goto	u701
  3359  0688  2E8A               	goto	u700
  3360  0689                     u701:	
  3361  0689  2E77               	goto	l1260
  3362  068A                     u700:	
  3363  068A                     l1264:	
  3364  068A  3001               	movlw	1
  3365  068B  07F5               	addwf	delay_ms@i,f
  3366  068C  1803               	skipnc
  3367  068D  0AF6               	incf	delay_ms@i+1,f
  3368  068E  3000               	movlw	0
  3369  068F  07F6               	addwf	delay_ms@i+1,f
  3370  0690                     l91:	
  3371  0690  0876               	movf	delay_ms@i+1,w
  3372  0691  3A80               	xorlw	128
  3373  0692  00F3               	movwf	??_delay_ms
  3374  0693  3080               	movlw	128
  3375  0694  0273               	subwf	??_delay_ms,w
  3376  0695  1D03               	skipz
  3377  0696  2E99               	goto	u715
  3378  0697  0874               	movf	delay_ms@dms,w
  3379  0698  0275               	subwf	delay_ms@i,w
  3380  0699                     u715:	
  3381  0699  1C03               	skipc
  3382  069A  2E9C               	goto	u711
  3383  069B  2E9D               	goto	u710
  3384  069C                     u711:	
  3385  069C  2E75               	goto	l1254
  3386  069D                     u710:	
  3387  069D                     l96:	
  3388  069D  0008               	return
  3389  069E                     __end_of_delay_ms:	
  3390                           
  3391                           	psect	text13
  3392  0745                     __ptext13:	
  3393 ;; *************** function _LCD_PULSE *****************
  3394 ;; Defined at:
  3395 ;;		line 39 in file "LCD.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    2
  3416 ;; This function calls:
  3417 ;;		_delay_us
  3418 ;; This function is called by:
  3419 ;;		_LCD_CONTROL
  3420 ;;		_LCD_DATO
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _LCD_PULSE
  3426  0745                     _LCD_PULSE:	
  3427  0745                     l1246:	
  3428                           ;incstack = 0
  3429                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  3430                           
  3431                           
  3432                           ;LCD.c: 40:     PORTEbits.RE1 = 1;
  3433  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0747  1489               	bsf	9,1	;volatile
  3436  0748                     l1248:	
  3437                           
  3438                           ;LCD.c: 41:     delay_us(5);
  3439  0748  3005               	movlw	5
  3440  0749  120A  118A  272C  120A  118A  	fcall	_delay_us
  3441  074E                     l1250:	
  3442                           
  3443                           ;LCD.c: 42:     PORTEbits.RE1 = 0;
  3444  074E  1283               	bcf	3,5	;RP0=0, select bank0
  3445  074F  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0750  1089               	bcf	9,1	;volatile
  3447                           
  3448                           ;LCD.c: 43:     delay_us(5);}
  3449  0751  3005               	movlw	5
  3450  0752  120A  118A  272C  120A  118A  	fcall	_delay_us
  3451  0757                     l134:	
  3452  0757  0008               	return
  3453  0758                     __end_of_LCD_PULSE:	
  3454                           
  3455                           	psect	text14
  3456  072C                     __ptext14:	
  3457 ;; *************** function _delay_us *****************
  3458 ;; Defined at:
  3459 ;;		line 22 in file "DELAYS.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  ams             1    wreg     unsigned char 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  ams             1    4[COMMON] unsigned char 
  3464 ;;  j               2    5[COMMON] int 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       0       0       0
  3475 ;;      Locals:         3       0       0       0       0
  3476 ;;      Temps:          1       0       0       0       0
  3477 ;;      Totals:         4       0       0       0       0
  3478 ;;Total ram usage:        4 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_LCD_PULSE
  3485 ;;		_LCD_DATO
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           
  3490                           ;psect for function _delay_us
  3491  072C                     _delay_us:	
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _delay_us: [wreg+status,2]
  3495                           ;delay_us@ams stored from wreg
  3496  072C  00F4               	movwf	delay_us@ams
  3497  072D                     l1242:	
  3498                           
  3499                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){
  3500  072D  01F5               	clrf	delay_us@j
  3501  072E  01F6               	clrf	delay_us@j+1
  3502  072F  2F37               	goto	l99
  3503  0730                     l100:	
  3504  0730  0000               	nop	;# 
  3505  0731                     l1244:	
  3506  0731  3001               	movlw	1
  3507  0732  07F5               	addwf	delay_us@j,f
  3508  0733  1803               	skipnc
  3509  0734  0AF6               	incf	delay_us@j+1,f
  3510  0735  3000               	movlw	0
  3511  0736  07F6               	addwf	delay_us@j+1,f
  3512  0737                     l99:	
  3513  0737  0876               	movf	delay_us@j+1,w
  3514  0738  3A80               	xorlw	128
  3515  0739  00F3               	movwf	??_delay_us
  3516  073A  3080               	movlw	128
  3517  073B  0273               	subwf	??_delay_us,w
  3518  073C  1D03               	skipz
  3519  073D  2F40               	goto	u695
  3520  073E  0874               	movf	delay_us@ams,w
  3521  073F  0275               	subwf	delay_us@j,w
  3522  0740                     u695:	
  3523  0740  1C03               	skipc
  3524  0741  2F43               	goto	u691
  3525  0742  2F44               	goto	u690
  3526  0743                     u691:	
  3527  0743  2F30               	goto	l100
  3528  0744                     u690:	
  3529  0744                     l102:	
  3530  0744  0008               	return
  3531  0745                     __end_of_delay_us:	
  3532                           
  3533                           	psect	text15
  3534  077C                     __ptext15:	
  3535 ;; *************** function _CONFIG_ADC *****************
  3536 ;; Defined at:
  3537 ;;		line 15 in file "ADC.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		None
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           
  3566                           ;psect for function _CONFIG_ADC
  3567  077C                     _CONFIG_ADC:	
  3568  077C                     l1446:	
  3569                           ;incstack = 0
  3570                           ; Regs used in _CONFIG_ADC: []
  3571                           
  3572                           
  3573                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  3574  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3575  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3576  077E  139F               	bcf	31,7	;volatile
  3577                           
  3578                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  3579  077F  129F               	bcf	31,5	;volatile
  3580                           
  3581                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  3582  0780  121F               	bcf	31,4	;volatile
  3583                           
  3584                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  3585  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0783  139F               	bcf	31,7	;volatile
  3588                           
  3589                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  3590  0784  171F               	bsf	31,6	;volatile
  3591                           
  3592                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  3593  0785  129F               	bcf	31,5	;volatile
  3594                           
  3595                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  3596  0786  121F               	bcf	31,4	;volatile
  3597                           
  3598                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  3599  0787  119F               	bcf	31,3	;volatile
  3600                           
  3601                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  3602  0788  111F               	bcf	31,2	;volatile
  3603                           
  3604                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  3605  0789  141F               	bsf	31,0	;volatile
  3606  078A                     l109:	
  3607                           ;ADC.c: 26:     return;
  3608                           
  3609  078A  0008               	return
  3610  078B                     __end_of_CONFIG_ADC:	
  3611                           
  3612                           	psect	text16
  3613  063E                     __ptext16:	
  3614 ;; *************** function _isr *****************
  3615 ;; Defined at:
  3616 ;;		line 31 in file "main.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0
  3632 ;;      Temps:          3       0       0       0       0
  3633 ;;      Totals:         3       0       0       0       0
  3634 ;;Total ram usage:        3 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		Interrupt level 1
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function _isr
  3645  063E                     _isr:	
  3646  063E                     i1l1606:	
  3647                           
  3648                           ;main.c: 32:     if (INTCONbits.T0IF == 1){
  3649  063E  1D0B               	btfss	11,2	;volatile
  3650  063F  2E41               	goto	u125_21
  3651  0640  2E42               	goto	u125_20
  3652  0641                     u125_21:	
  3653  0641  2E6A               	goto	i1l70
  3654  0642                     u125_20:	
  3655  0642                     i1l1608:	
  3656                           
  3657                           ;main.c: 33:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  3658  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3660  0644  084C               	movf	_cambiante,w
  3661  0645  1D03               	btfss	3,2
  3662  0646  2E48               	goto	u126_21
  3663  0647  2E49               	goto	u126_20
  3664  0648                     u126_21:	
  3665  0648  2E4A               	goto	i1l1612
  3666  0649                     u126_20:	
  3667  0649                     i1l1610:	
  3668  0649  151F               	bsf	31,2	;volatile
  3669  064A                     i1l1612:	
  3670                           
  3671                           ;main.c: 34:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  3672  064A  034C               	decf	_cambiante,w
  3673  064B  1D03               	btfss	3,2
  3674  064C  2E4E               	goto	u127_21
  3675  064D  2E4F               	goto	u127_20
  3676  064E                     u127_21:	
  3677  064E  2E50               	goto	i1l1616
  3678  064F                     u127_20:	
  3679  064F                     i1l1614:	
  3680  064F  111F               	bcf	31,2	;volatile
  3681  0650                     i1l1616:	
  3682                           
  3683                           ;main.c: 35:         cambiante++;
  3684  0650  3001               	movlw	1
  3685  0651  00F0               	movwf	??_isr
  3686  0652  0870               	movf	??_isr,w
  3687  0653  07CC               	addwf	_cambiante,f
  3688                           
  3689                           ;main.c: 36:         sensor++;
  3690  0654  3001               	movlw	1
  3691  0655  00F0               	movwf	??_isr
  3692  0656  0870               	movf	??_isr,w
  3693  0657  07C8               	addwf	_sensor,f
  3694  0658                     i1l1618:	
  3695                           
  3696                           ;main.c: 37:         if (cambiante > 1){cambiante = 0;}
  3697  0658  3002               	movlw	2
  3698  0659  024C               	subwf	_cambiante,w
  3699  065A  1C03               	skipc
  3700  065B  2E5D               	goto	u128_21
  3701  065C  2E5E               	goto	u128_20
  3702  065D                     u128_21:	
  3703  065D  2E5F               	goto	i1l1622
  3704  065E                     u128_20:	
  3705  065E                     i1l1620:	
  3706  065E  01CC               	clrf	_cambiante
  3707  065F                     i1l1622:	
  3708                           
  3709                           ;main.c: 38:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  3710  065F  189F               	btfsc	31,1	;volatile
  3711  0660  2E62               	goto	u129_21
  3712  0661  2E63               	goto	u129_20
  3713  0662                     u129_21:	
  3714  0662  2E65               	goto	i1l69
  3715  0663                     u129_20:	
  3716  0663                     i1l1624:	
  3717  0663  01CB               	clrf	_eADC
  3718  0664  0ACB               	incf	_eADC,f
  3719  0665                     i1l69:	
  3720                           
  3721                           ;main.c: 39:         INTCONbits.T0IF = 0;
  3722  0665  110B               	bcf	11,2	;volatile
  3723  0666                     i1l1626:	
  3724                           
  3725                           ;main.c: 40:         TMR0 = 130;
  3726  0666  3082               	movlw	130
  3727  0667  0081               	movwf	1	;volatile
  3728  0668                     i1l1628:	
  3729                           
  3730                           ;main.c: 41:         eADC = 1;
  3731  0668  01CB               	clrf	_eADC
  3732  0669  0ACB               	incf	_eADC,f
  3733  066A                     i1l70:	
  3734  066A  0872               	movf	??_isr+2,w
  3735  066B  008A               	movwf	10
  3736  066C  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  3737  066D  0083               	movwf	3
  3738  066E  0EFE               	swapf	btemp,f
  3739  066F  0E7E               	swapf	btemp,w
  3740  0670  0009               	retfie
  3741  0671                     __end_of_isr:	
  3742  007E                     btemp	set	126	;btemp
  3743  007E                     wtemp0	set	126
  3744                           
  3745                           	psect	intentry
  3746  0004                     __pintentry:	
  3747                           ;incstack = 0
  3748                           ; Regs used in _isr: [wreg+status,2+status,0]
  3749                           
  3750  0004                     interrupt_function:	
  3751  007E                     saved_w	set	btemp
  3752  0004  00FE               	movwf	btemp
  3753  0005  0E03               	swapf	3,w
  3754  0006  00F1               	movwf	??_isr+1
  3755  0007  080A               	movf	10,w
  3756  0008  00F2               	movwf	??_isr+2
  3757  0009  120A  118A  2E3E   	ljmp	_isr


Data Sizes:
    Strings     118
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     33      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_PRINT_WP
    _VAL->_LCD_PRINT_WP
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_RH->_LCD_CONTROL
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VAL
    _VAL->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17048
                                             32 BANK0      1     1      0
                         _CONFIG_ADC
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                                _VAL
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VAL                                                 24    23      1    9947
                                              8 BANK0     24    23      1
                       _LCD_PRINT_WP
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT_WP                                         7     2      5    6437
                                             10 COMMON     1     1      0
                                              0 BANK0      6     1      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (3) _LCD_PRINT                                            2     2      0     192
                                              8 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (4) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     252
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_CONTROL                                          1     1      0     160
                                              9 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0      92
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _VAL
     _LCD_PRINT_WP
       _LCD_CONTROL
         _LCD_PULSE
           _delay_us
         _delay_ms
       _LCD_PRINT
         _LCD_DATO
           _LCD_PULSE
             _delay_us
           _delay_us
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 11:20:34 2020

                       pc 0002               __CFG_CP$OFF 0000                        l82 04A5  
                      l91 0690                        l96 069D                        l88 06EA  
                      l99 0737              ___awdiv@sign 0025                        fsr 0004  
                     l100 0730                       l102 0744                       l131 077B  
                     l140 0798                       l109 078A                       l134 0757  
                     l128 06C6                       l137 0769                       l146 072B  
                     l156 070C                       l149 0791                       l433 05E4  
                     l194 03AA                       l446 063D              __CFG_CPD$OFF 0000  
                     u700 068A                       u701 0689                       u710 069D  
                     u711 069C                       u720 072B                       u800 05C2  
                     u705 0686                       u721 072A                       u801 05C1  
                     u730 06F3                       u715 0699                       u731 06F2  
                     u820 05D6                       u740 0583                       u821 05D5  
                     u805 05BE                       u741 0582                       u830 05DB  
                     u750 058E                       u910 062F                       _VAL 0021  
                     u831 05DA                       u815 05CA                       u751 058D  
                     u911 062E                       u760 059F                       u920 0634  
                     u840 05EA                       u761 059E                       u921 0633  
                     u905 0623                       u841 05E9                       u690 0744  
                     u850 05F5                       u930 002A                       u691 0743  
                     u851 05F4                       u931 0029                       u780 05B1  
                     u860 0600                       u940 00DA                       u781 05B0  
                     u861 05FF                       u950 00F9                       u695 0740  
                     u775 05A3                       u951 00F8                       u880 0612  
                     u960 010D                       u881 0611                       u961 010C  
                     u890 061C                       u970 0115                       u795 05B2  
                     u891 061B                       u875 0604                       u971 0114  
                     u980 0120                       u981 011F                       u990 0129  
                     u895 0618                       u991 0128                       _isr 063E  
                     _sen 0047                       fsr0 0004                       indf 0000  
            ___awmod@sign 0079              __CFG_LVP$OFF 0000                      ?_VAL 0028  
                    VAL@i 0039                      l1300 06FE                      l1302 0704  
                    l1310 0588                      l1320 0599                      l1312 058A  
                    l1304 057C                      l1400 06D9                      l1242 072D  
                    l1250 074E                      l1330 05B1                      l1322 059F  
                    l1314 058E                      l1306 057F                      l1410 06E0  
                    l1402 06DA                      l1244 0731                      l1260 0677  
                    l1252 0672                      l1332 05C2                      l1324 05A2  
                    l1340 05D6                      l1316 0593                      l1308 0583  
                    l1500 013D                      l1420 06E5                      l1412 06E1  
                    l1404 06DB                      l1246 0745                      l1262 067D  
                    l1254 0675                      l1430 06A6                      l1270 075E  
                    l1342 05DB                      l1334 05C8                      l1326 05A9  
                    l1318 0597                      l1350 05E6                      l1510 017C  
                    l1502 0144                      l1422 06E6                      l1414 06E2  
                    l1406 06DC                      l1248 0748                      l1264 068A  
                    l1280 0775                      l1440 06C0                      l1432 06A8  
                    l1424 069E                      l1272 0763                      l1344 05E0  
                    l1336 05C9                      l1328 05AD                      l1360 05FA  
                    l1352 05EA                      l1600 0381                      l1520 01C8  
                    l1512 0190                      l1504 0158                      l1416 06E3  
                    l1408 06DF                      l1274 076B                      l1434 06AE  
                    l1426 06A2                      l1442 0792                      l1266 0759  
                    l1282 070E                      l1290 06EB                      l1338 05D0  
                    l1370 0612                      l1362 0600                      l1354 05EF  
                    l1602 0395                      l1530 0208                      l1522 01D0  
                    l1514 0198                      l1506 0160                      l1450 002A  
                    l1418 06E4                      l1276 076E                      l1436 06B4  
                    l1428 06A3                      l1444 078B                      l1268 075C  
                    l1284 070F                      l1292 06F3                      l1380 0634  
                    l1372 061C                      l1364 0603                      l1356 05F1  
                    l1348 05E5                      l1604 039D                      l1532 021C  
                    l1524 01E4                      l1516 01AC                      l1508 0174  
                    l1540 024D                      l1460 006F                      l1452 002E  
                    l1446 077C                      l1278 0770                      l1438 06BA  
                    l1286 071B                      l1294 06F9                      l1382 0639  
                    l1374 0622                      l1366 060A                      l1358 05F5  
                    l1550 0262                      l1542 0254                      l1534 0224  
                    l1526 01EC                      l1518 01B4                      l1470 00E6  
                    l1462 00AB                      l1454 002E                      l1390 06D0  
                    l1630 03AB                      l1288 071F                      l1296 06F9  
                    l1376 0629                      l1368 060E                      l1560 027D  
                    l1552 0268                      l1536 0238                      l1528 0200  
                    l1472 00ED                      l1464 00C1                      l1456 002F  
                    l1448 0024                      l1392 06D3                      l1640 03D1  
                    l1632 03B0                      l1378 062F                      l1570 02B5  
                    l1562 0281                      l1554 026C                      l1538 0240  
                    l1490 0115                      l1482 00FB                      l1474 00F4  
                    l1466 00D6                      l1458 0059                      l1394 06D4  
                    l1386 06C7                      l1650 03F9                      l1642 03D7  
                    l1634 03B5                      l1580 02F5                      l1572 02BD  
                    l1564 0286                      l1556 0272                      l1548 0256  
                    l1492 0119                      l1484 0107                      l1476 00F9  
                    l1468 00DF                      l1396 06D5                      l1388 06CF  
                    l1660 042E                      l1652 040B                      l1644 03E9  
                    l1636 03BA                      l1590 0341                      l1582 0309  
                    l1574 02D1                      l1566 029A                      l1558 0276  
                    l1494 0120                      l1486 010D                      l1398 06D6  
                    l1670 0463                      l1662 0433                      l1654 0411  
                    l1646 03EF                      l1638 03BF                      l1592 0349  
                    l1584 0311                      l1576 02D9                      l1568 02A1  
                    l1496 0124                      l1488 010F                      l1680 0476  
                    l1672 0464                      l1664 0445                      l1656 0423  
                    l1648 03F4                      l1594 035D                      l1586 0325  
                    l1578 02ED                      l1498 0129                      l1690 0490  
                    l1674 0469                      l1682 0477                      l1666 0457  
                    l1658 0429                      l1596 0365                      l1588 032D  
                    l1692 0498                      l1684 047D                      l1676 046D  
                    l1668 045C                      l1598 0379                      l1694 049E  
                    l1686 0482                      l1678 0472                      l1696 04A4  
                    l1688 0489                      ?_isr 0070                      STR_1 0528  
                    STR_2 054A                      STR_3 0539                      STR_4 0506  
                    STR_5 055B                      STR_6 0517                      STR_7 0526  
                    STR_8 056C                      STR_9 056E                      u1000 0144  
                    u1001 0143                      u1010 0160                      u1011 015F  
                    u1100 0254                      u1020 017C                      u1101 0253  
                    u1021 017B                      u1110 0268                      u1030 0198  
                    u1111 0267                      u1031 0197                      u1200 032D  
                    u1120 0272                      u1040 01B4                      u1201 032C  
                    u1121 0271                      u1041 01B3                      u1210 0349  
                    u1130 027D                      u1050 01D0                      u1211 0348  
                    u1131 027C                      u1051 01CF                      u1220 0365  
                    u1140 0286                      u1060 01EC                      u1300 0463  
                    u1221 0364                      u1141 0285                      u1061 01EB  
                    u1301 0462                      u1230 0381                      u1150 02A1  
                    u1070 0208                      u1310 0469                      u1231 0380  
                    u1151 02A0                      u1071 0207                      u1311 0468  
                    u1240 03AA                      u1160 02BD                      u1080 0224  
                    u1320 0472                      u1241 03A9                      u1161 02BC  
                    u1081 0223                      u1321 0471                      u1170 02D9  
                    u1090 024D                      u1330 047D                      u1171 02D8  
                    u1091 024C                      u1331 047C                      u1180 02F5  
                    u1340 0482                      u1245 03A6                      u1181 02F4  
                    u1341 0481                      u1190 0311                      u1350 0490  
                    u1191 0310                      u1095 0249                      u1351 048F  
                    u1360 04A4                      u1361 04A3                      i1l70 066A  
                    i1l69 0665        __size_of_LCD_CLEAR 0007                      _TMR0 0001  
                    _eADC 004B              __CFG_WRT$OFF 0000            ??_LCD_PRINT_WP 007A  
      __size_of_LCD_PRINT 001F        __size_of_LCD_PULSE 0013                      _main 03AB  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
     __size_of_CONFIG_ADC 000F                     ??_VAL 0029          __end_of_LCD_DATO 076A  
                   ??_isr 0070          __end_of_INIT_LCD 06C7                     ?_main 0070  
         __end_of___awdiv 05E5                     STR_10 0537                     STR_11 0570  
                   STR_20 0537                     STR_12 0572                     STR_21 0570  
                   STR_13 0574                     STR_22 0572                     STR_14 0576  
                   STR_23 0574                     STR_15 0578                     STR_24 0576  
                   STR_16 057A                     STR_17 0526                     STR_25 0578  
           __CFG_WDTE$OFF 0000                     STR_18 056C                     STR_26 057A  
                   STR_19 056E           __end_of___awmod 063E             LCD_PRINT@data 0079  
                   _ANSEL 0188           ___awdiv@divisor 0020           ___awdiv@counter 0024  
           LCD_PRINT_WP@x 0020             LCD_PRINT_WP@y 0022                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
                   _setup 06C7            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 04AA         __end_of_LCD_CLEAR 0799  
       __end_of_LCD_PRINT 072C                    ??_main 0040         __end_of_LCD_PULSE 0758  
                  _ADCAN0 004A                    _ADCAN1 0049                    _ADRESH 001E  
        ___awdiv@dividend 0022                    ?_setup 0070                    _ANSELH 0189  
                  _LCD_RH 078B                    i1l1610 0649                    i1l1620 065E  
                  i1l1612 064A                    i1l1622 065F                    i1l1614 064F  
                  i1l1606 063E                    i1l1624 0663                    i1l1616 0650  
                  i1l1608 0642                    i1l1626 0666                    i1l1618 0658  
                  i1l1628 0668                    u125_20 0642                    u125_21 0641  
                  u126_20 0649                    u126_21 0648                    u127_20 064F  
                  u127_21 064E                    u128_20 065E                    u128_21 065D  
                  u129_20 0663                    u129_21 0662      __size_of_LCD_CONTROL 0012  
        __end_of_delay_ms 069E          __end_of_delay_us 0745            __CFG_PWRTE$OFF 0000  
               ??___awdiv 007A                 ??___awmod 0077          ___awdiv@quotient 0026  
         ___awmod@divisor 0073                    _sensor 0048           ___awmod@counter 0078  
    __end_of_LCD_PRINT_WP 070D              ??_CONFIG_ADC 0073                    saved_w 007E  
               ?_LCD_DATO 0070   __end_of__initialization 001D                 ?_INIT_LCD 0070  
          __pcstackCOMMON 0070        __end_of_CONFIG_ADC 078B             __end_of_setup 06EB  
          _OPTION_REGbits 0081                   ??_setup 0073                __pbssBANK0 0041  
                 ?_LCD_RH 0070                ??_LCD_DATO 0077                ??_INIT_LCD 007A  
              __pmaintext 03AB                 VAL@column 0028                __pintentry 0004  
               VAL@result 003D                 VAL@numero 0031                   _VAL$969 0037  
               ?_delay_ms 0070                 ?_delay_us 0070                __stringtab 0500  
         __size_of_LCD_RH 0007               VAL@unidades 002E     __size_of_LCD_PRINT_WP 0022  
                 ___awdiv 057C                   ___awmod 05E5                   __ptext1 06C7  
                 __ptext2 0021                   __ptext3 05E5                   __ptext4 057C  
                 __ptext5 06EB                   __ptext6 070D                   __ptext7 0758  
                 __ptext8 078B                   __ptext9 0792              __size_of_VAL 038A  
            __size_of_isr 0033                 _LCD_CLEAR 0792          ___awmod@dividend 0075  
               _LCD_PRINT 070D                ??_delay_ms 0073                 _LCD_PULSE 0745  
              ??_delay_us 0073             VAL@centesimas 0030      end_of_initialization 001D  
            _LCD_PRINT_WP 06EB         LCD_PRINT_WP@frase 0024             VAL@coordenada 003F  
               _PORTEbits 0009                ?_LCD_CLEAR 0070                ?_LCD_PRINT 0070  
              ?_LCD_PULSE 0070                 _TRISEbits 0089             ??_LCD_CONTROL 0079  
          __end_of_LCD_RH 0792         __size_of_LCD_DATO 0012         __size_of_INIT_LCD 0029  
     start_initialization 000F               __end_of_VAL 03AB               __end_of_isr 0671  
                ??_LCD_RH 007A  __CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_LCD_CONTROL 077C  
             ??_LCD_CLEAR 007A                 ___latbits 0002               ??_LCD_PRINT 0078  
             ??_LCD_PULSE 0077             __pcstackBANK0 0020         __size_of_delay_ms 002D  
       __size_of_delay_us 0019                  VAL@F1517 0041                 _cambiante 004C  
                VAL@i_371 003B                  ?___awdiv 0020                  ?___awmod 0073  
                VAL@valor 003E                VAL@decimas 002F                 __pstrings 0500  
          __size_of_setup 0024                  _LCD_DATO 0758               _LCD_CONTROL 076A  
       interrupt_function 0004                 delay_ms@i 0075                 delay_ms@j 0077  
                _INIT_LCD 069E                 delay_us@j 0075                _ADCON0bits 001F  
             __stringbase 0505                _ADCON1bits 009F           LCD_DATO@comando 0077  
    LCD_PRINT_WP@location 0025          __size_of___awdiv 0069          __size_of___awmod 0059  
      __end_of__stringtab 0506                _CONFIG_ADC 077C                  _delay_ms 0671  
                _delay_us 072C                  __ptext10 069E                  __ptext11 076A  
                __ptext12 0671                  __ptext13 0745                  __ptext14 072C  
                __ptext15 077C                  __ptext16 063E         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 00FF               delay_ms@dms 0074               delay_us@ams 0074  
              _INTCONbits 000B                  intlevel1 0000           LCD_CONTROL@dato 0079  
               stringcode 0500               ?_CONFIG_ADC 0070                  stringdir 0500  
                stringtab 0500              ?_LCD_CONTROL 0070             ?_LCD_PRINT_WP 0020  
