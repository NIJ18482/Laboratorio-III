

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 08:27:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0009                     _PORTEbits	set	9
   454  0009                     _PORTE	set	9
   455  0008                     _PORTD	set	8
   456  0007                     _PORTC	set	7
   457  0006                     _PORTB	set	6
   458  001E                     _ADRESH	set	30
   459  0001                     _TMR0	set	1
   460  001F                     _ADCON0bits	set	31
   461  000B                     _INTCONbits	set	11
   462  0089                     _TRISEbits	set	137
   463  009F                     _ADCON1bits	set	159
   464  0081                     _OPTION_REGbits	set	129
   465  0089                     _TRISE	set	137
   466  0088                     _TRISD	set	136
   467  0087                     _TRISC	set	135
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  0189                     _ANSELH	set	393
   471  0188                     _ANSEL	set	392
   472                           
   473                           	psect	strings
   474  0268                     __pstrings:	
   475  0268                     stringtab:	
   476  0268                     __stringtab:	
   477  0268                     stringcode:	
   478                           ;	String table - string pointers are 1 byte each
   479                           
   480  0268                     stringdir:	
   481  0268  3002               	movlw	high stringdir
   482  0269  008A               	movwf	10
   483  026A  0804               	movf	4,w
   484  026B  0A84               	incf	4,f
   485  026C  0782               	addwf	2,f
   486  026D                     __stringbase:	
   487  026D  3400               	retlw	0
   488  026E                     __end_of__stringtab:	
   489  026E                     STR_5:	
   490  026E  3420               	retlw	32	;' '
   491  026F  3453               	retlw	83	;'S'
   492  0270  3445               	retlw	69	;'E'
   493  0271  344E               	retlw	78	;'N'
   494  0272  342E               	retlw	46	;'.'
   495  0273  3431               	retlw	49	;'1'
   496  0274  3420               	retlw	32	;' '
   497  0275  3453               	retlw	83	;'S'
   498  0276  3445               	retlw	69	;'E'
   499  0277  344E               	retlw	78	;'N'
   500  0278  342E               	retlw	46	;'.'
   501  0279  3432               	retlw	50	;'2'
   502  027A  3420               	retlw	32	;' '
   503  027B  3443               	retlw	67	;'C'
   504  027C  3454               	retlw	84	;'T'
   505  027D  3420               	retlw	32	;' '
   506  027E  3400               	retlw	0
   507  027F                     STR_4:	
   508  027F  342D               	retlw	45	;'-'
   509  0280  344D               	retlw	77	;'M'
   510  0281  3450               	retlw	80	;'P'
   511  0282  344C               	retlw	76	;'L'
   512  0283  3441               	retlw	65	;'A'
   513  0284  3442               	retlw	66	;'B'
   514  0285  3458               	retlw	88	;'X'
   515  0286  342D               	retlw	45	;'-'
   516  0287  3458               	retlw	88	;'X'
   517  0288  3443               	retlw	67	;'C'
   518  0289  3438               	retlw	56	;'8'
   519  028A  342D               	retlw	45	;'-'
   520  028B  3450               	retlw	80	;'P'
   521  028C  3449               	retlw	73	;'I'
   522  028D  3443               	retlw	67	;'C'
   523  028E  342D               	retlw	45	;'-'
   524  028F  3400               	retlw	0
   525  0290                     STR_6:	
   526  0290  342D               	retlw	45	;'-'
   527  0291  3430               	retlw	48	;'0'
   528  0292  342E               	retlw	46	;'.'
   529  0293  3430               	retlw	48	;'0'
   530  0294  3430               	retlw	48	;'0'
   531  0295  3456               	retlw	86	;'V'
   532  0296  342D               	retlw	45	;'-'
   533  0297  3430               	retlw	48	;'0'
   534  0298  342E               	retlw	46	;'.'
   535  0299  3430               	retlw	48	;'0'
   536  029A  3430               	retlw	48	;'0'
   537  029B  3456               	retlw	86	;'V'
   538  029C  342D               	retlw	45	;'-'
   539  029D  3430               	retlw	48	;'0'
   540  029E  3430               	retlw	48	;'0'
   541  029F  3430               	retlw	48	;'0'
   542  02A0  3400               	retlw	0
   543  02A1                     STR_1:	
   544  02A1  344C               	retlw	76	;'L'
   545  02A2  3441               	retlw	65	;'A'
   546  02A3  3442               	retlw	66	;'B'
   547  02A4  344F               	retlw	79	;'O'
   548  02A5  3452               	retlw	82	;'R'
   549  02A6  3441               	retlw	65	;'A'
   550  02A7  3454               	retlw	84	;'T'
   551  02A8  344F               	retlw	79	;'O'
   552  02A9  3452               	retlw	82	;'R'
   553  02AA  3449               	retlw	73	;'I'
   554  02AB  344F               	retlw	79	;'O'
   555  02AC  3420               	retlw	32	;' '
   556  02AD  344E               	retlw	78	;'N'
   557  02AE  346F               	retlw	111	;'o'
   558  02AF  342E               	retlw	46	;'.'
   559  02B0  3433               	retlw	51	;'3'
   560  02B1  3400               	retlw	0
   561  02B2                     STR_3:	
   562  02B2  344D               	retlw	77	;'M'
   563  02B3  3441               	retlw	65	;'A'
   564  02B4  344E               	retlw	78	;'N'
   565  02B5  3445               	retlw	69	;'E'
   566  02B6  344A               	retlw	74	;'J'
   567  02B7  344F               	retlw	79	;'O'
   568  02B8  3420               	retlw	32	;' '
   569  02B9  3450               	retlw	80	;'P'
   570  02BA  3441               	retlw	65	;'A'
   571  02BB  344E               	retlw	78	;'N'
   572  02BC  3445               	retlw	69	;'E'
   573  02BD  344C               	retlw	76	;'L'
   574  02BE  3420               	retlw	32	;' '
   575  02BF  344C               	retlw	76	;'L'
   576  02C0  3443               	retlw	67	;'C'
   577  02C1  3444               	retlw	68	;'D'
   578  02C2  3400               	retlw	0
   579  02C3                     STR_2:	
   580  02C3  344C               	retlw	76	;'L'
   581  02C4  3475               	retlw	117	;'u'
   582  02C5  3469               	retlw	105	;'i'
   583  02C6  3473               	retlw	115	;'s'
   584  02C7  3420               	retlw	32	;' '
   585  02C8  344E               	retlw	78	;'N'
   586  02C9  342E               	retlw	46	;'.'
   587  02CA  3420               	retlw	32	;' '
   588  02CB  3431               	retlw	49	;'1'
   589  02CC  3438               	retlw	56	;'8'
   590  02CD  3434               	retlw	52	;'4'
   591  02CE  3438               	retlw	56	;'8'
   592  02CF  3432               	retlw	50	;'2'
   593  02D0  3455               	retlw	85	;'U'
   594  02D1  3456               	retlw	86	;'V'
   595  02D2  3447               	retlw	71	;'G'
   596  02D3  3400               	retlw	0
   597  02D4                     STR_7:	
   598  02D4  342D               	retlw	45	;'-'
   599  02D5  3430               	retlw	48	;'0'
   600  02D6  342E               	retlw	46	;'.'
   601  02D7  3430               	retlw	48	;'0'
   602  02D8  3430               	retlw	48	;'0'
   603  02D9  3456               	retlw	86	;'V'
   604  02DA  3400               	retlw	0
   605  02DB                     STR_8:	
   606  02DB  342D               	retlw	45	;'-'
   607  02DC  3431               	retlw	49	;'1'
   608  02DD  342E               	retlw	46	;'.'
   609  02DE  3430               	retlw	48	;'0'
   610  02DF  3430               	retlw	48	;'0'
   611  02E0  3456               	retlw	86	;'V'
   612  02E1  3400               	retlw	0
   613  02E2                     STR_9:	
   614  02E2  342D               	retlw	45	;'-'
   615  02E3  3432               	retlw	50	;'2'
   616  02E4  342E               	retlw	46	;'.'
   617  02E5  3430               	retlw	48	;'0'
   618  02E6  3430               	retlw	48	;'0'
   619  02E7  3456               	retlw	86	;'V'
   620  02E8  3400               	retlw	0
   621  02E9                     STR_10:	
   622  02E9  342D               	retlw	45	;'-'
   623  02EA  3433               	retlw	51	;'3'
   624  02EB  342E               	retlw	46	;'.'
   625  02EC  3430               	retlw	48	;'0'
   626  02ED  3430               	retlw	48	;'0'
   627  02EE  3456               	retlw	86	;'V'
   628  02EF  3400               	retlw	0
   629  02F0                     STR_11:	
   630  02F0  342D               	retlw	45	;'-'
   631  02F1  3434               	retlw	52	;'4'
   632  02F2  342E               	retlw	46	;'.'
   633  02F3  3430               	retlw	48	;'0'
   634  02F4  3430               	retlw	48	;'0'
   635  02F5  3456               	retlw	86	;'V'
   636  02F6  3400               	retlw	0
   637  02F7                     STR_12:	
   638  02F7  342D               	retlw	45	;'-'
   639  02F8  3435               	retlw	53	;'5'
   640  02F9  342E               	retlw	46	;'.'
   641  02FA  3430               	retlw	48	;'0'
   642  02FB  3430               	retlw	48	;'0'
   643  02FC  3456               	retlw	86	;'V'
   644  02FD  3400               	retlw	0
   645  02D4                     
   646                           ; #config settings
   647  0000                     
   648                           	psect	cinit
   649  000F                     start_initialization:	
   650  000F                     __initialization:	
   651                           
   652                           ; Clear objects allocated to BANK0
   653  000F  1283               	bcf	3,5	;RP0=0, select bank0
   654  0010  1303               	bcf	3,6	;RP1=0, select bank0
   655  0011  01B0               	clrf	__pbssBANK0& (0+127)
   656  0012  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   657  0013  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   658  0014  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   659  0015  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   660  0016  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   661  0017                     end_of_initialization:	
   662                           ;End of C runtime variable initialization code
   663                           
   664  0017                     __end_of__initialization:	
   665  0017  0183               	clrf	3
   666  0018  120A  118A  2969   	ljmp	_main	;jump to C main() function
   667                           
   668                           	psect	bssBANK0
   669  0030                     __pbssBANK0:	
   670  0030                     _sen:	
   671  0030                     	ds	1
   672  0031                     _sensor:	
   673  0031                     	ds	1
   674  0032                     _ADCAN1:	
   675  0032                     	ds	1
   676  0033                     _ADCAN0:	
   677  0033                     	ds	1
   678  0034                     _eADC:	
   679  0034                     	ds	1
   680  0035                     _cambiante:	
   681  0035                     	ds	1
   682                           
   683                           	psect	cstackCOMMON
   684  0070                     __pcstackCOMMON:	
   685  0070                     ?_setup:	
   686  0070                     ?_INIT_LCD:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_LCD_CLEAR:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_LCD_RH:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_delay_ms:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_CONFIG_ADC:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_LCD_CONTROL:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_LCD_PULSE:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_isr:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_isr:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_main:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_delay_us:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_LCD_DATO:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_LCD_PRINT:	
   723                           ; 1 bytes @ 0x0
   724                           
   725                           
   726                           ; 1 bytes @ 0x0
   727  0070                     	ds	3
   728  0073                     ??_setup:	
   729  0073                     ??_delay_ms:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     ??_CONFIG_ADC:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     ??_delay_us:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0073                     ?___awmod:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ___awmod@divisor:	
   742                           ; 2 bytes @ 0x3
   743                           
   744                           
   745                           ; 2 bytes @ 0x3
   746  0073                     	ds	1
   747  0074                     delay_ms@dms:	
   748  0074                     delay_us@ams:	
   749                           ; 1 bytes @ 0x4
   750                           
   751                           
   752                           ; 1 bytes @ 0x4
   753  0074                     	ds	1
   754  0075                     delay_ms@i:	
   755  0075                     delay_us@j:	
   756                           ; 2 bytes @ 0x5
   757                           
   758  0075                     ___awmod@dividend:	
   759                           ; 2 bytes @ 0x5
   760                           
   761                           
   762                           ; 2 bytes @ 0x5
   763  0075                     	ds	2
   764  0077                     ??_LCD_PULSE:	
   765  0077                     ??_LCD_DATO:	
   766                           ; 1 bytes @ 0x7
   767                           
   768  0077                     ??___awmod:	
   769                           ; 1 bytes @ 0x7
   770                           
   771  0077                     LCD_DATO@comando:	
   772                           ; 1 bytes @ 0x7
   773                           
   774  0077                     delay_ms@j:	
   775                           ; 1 bytes @ 0x7
   776                           
   777                           
   778                           ; 2 bytes @ 0x7
   779  0077                     	ds	1
   780  0078                     ??_LCD_PRINT:	
   781  0078                     ___awmod@counter:	
   782                           ; 1 bytes @ 0x8
   783                           
   784                           
   785                           ; 1 bytes @ 0x8
   786  0078                     	ds	1
   787  0079                     ??_LCD_CONTROL:	
   788  0079                     LCD_CONTROL@dato:	
   789                           ; 1 bytes @ 0x9
   790                           
   791  0079                     LCD_PRINT@data:	
   792                           ; 1 bytes @ 0x9
   793                           
   794  0079                     ___awmod@sign:	
   795                           ; 1 bytes @ 0x9
   796                           
   797                           
   798                           ; 1 bytes @ 0x9
   799  0079                     	ds	1
   800  007A                     ??_INIT_LCD:	
   801  007A                     ??_LCD_CLEAR:	
   802                           ; 1 bytes @ 0xA
   803                           
   804  007A                     ??_LCD_RH:	
   805                           ; 1 bytes @ 0xA
   806                           
   807  007A                     ??_LCD_PRINT_WP:	
   808                           ; 1 bytes @ 0xA
   809                           
   810  007A                     ??___awdiv:	
   811                           ; 1 bytes @ 0xA
   812                           
   813                           
   814                           ; 1 bytes @ 0xA
   815  007A                     	ds	1
   816                           
   817                           	psect	cstackBANK0
   818  0020                     __pcstackBANK0:	
   819  0020                     ?_LCD_PRINT_WP:	
   820  0020                     ?___awdiv:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0020                     LCD_PRINT_WP@x:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0020                     ___awdiv@divisor:	
   827                           ; 2 bytes @ 0x0
   828                           
   829                           
   830                           ; 2 bytes @ 0x0
   831  0020                     	ds	2
   832  0022                     LCD_PRINT_WP@y:	
   833  0022                     ___awdiv@dividend:	
   834                           ; 2 bytes @ 0x2
   835                           
   836                           
   837                           ; 2 bytes @ 0x2
   838  0022                     	ds	2
   839  0024                     LCD_PRINT_WP@frase:	
   840  0024                     ___awdiv@counter:	
   841                           ; 1 bytes @ 0x4
   842                           
   843                           
   844                           ; 1 bytes @ 0x4
   845  0024                     	ds	1
   846  0025                     LCD_PRINT_WP@location:	
   847  0025                     ___awdiv@sign:	
   848                           ; 1 bytes @ 0x5
   849                           
   850                           
   851                           ; 1 bytes @ 0x5
   852  0025                     	ds	1
   853  0026                     ___awdiv@quotient:	
   854                           
   855                           ; 2 bytes @ 0x6
   856  0026                     	ds	2
   857  0028                     ?_VAL:	
   858  0028                     VAL@column:	
   859                           ; 1 bytes @ 0x8
   860                           
   861                           
   862                           ; 1 bytes @ 0x8
   863  0028                     	ds	1
   864  0029                     ??_VAL:	
   865                           
   866                           ; 1 bytes @ 0x9
   867  0029                     	ds	4
   868  002D                     VAL@result:	
   869                           
   870                           ; 1 bytes @ 0xD
   871  002D                     	ds	1
   872  002E                     VAL@unidades:	
   873                           
   874                           ; 1 bytes @ 0xE
   875  002E                     	ds	1
   876  002F                     ??_main:	
   877                           
   878                           ; 1 bytes @ 0xF
   879  002F                     	ds	1
   880                           
   881                           	psect	maintext
   882  0169                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 44 in file "main.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : B00/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          0       1       0       0       0
   905 ;;      Totals:         0       1       0       0       0
   906 ;;Total ram usage:        1 bytes
   907 ;; Hardware stack levels required when called:    7
   908 ;; This function calls:
   909 ;;		_CONFIG_ADC
   910 ;;		_INIT_LCD
   911 ;;		_LCD_CLEAR
   912 ;;		_LCD_PRINT_WP
   913 ;;		_LCD_RH
   914 ;;		_VAL
   915 ;;		_delay_ms
   916 ;;		_setup
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _main
   924  0169                     _main:	
   925  0169                     l1416:	
   926                           ;incstack = 0
   927                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   928                           
   929                           
   930                           ;main.c: 45:     setup();
   931  0169  120A  118A  2449  120A  118A  	fcall	_setup
   932  016E                     l1418:	
   933                           
   934                           ;main.c: 46:     INIT_LCD();
   935  016E  120A  118A  2420  120A  118A  	fcall	_INIT_LCD
   936  0173                     l1420:	
   937                           
   938                           ;main.c: 47:     LCD_CLEAR();
   939  0173  120A  118A  2514  120A  118A  	fcall	_LCD_CLEAR
   940  0178                     l1422:	
   941                           
   942                           ;main.c: 48:     LCD_RH();
   943  0178  120A  118A  250D  120A  118A  	fcall	_LCD_RH
   944  017D                     l1424:	
   945                           
   946                           ;main.c: 49:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
   947  017D  3000               	movlw	0
   948  017E  1283               	bcf	3,5	;RP0=0, select bank0
   949  017F  1303               	bcf	3,6	;RP1=0, select bank0
   950  0180  00A0               	movwf	LCD_PRINT_WP@x
   951  0181  00A1               	movwf	LCD_PRINT_WP@x+1
   952  0182  3001               	movlw	1
   953  0183  00A2               	movwf	LCD_PRINT_WP@y
   954  0184  3000               	movlw	0
   955  0185  00A3               	movwf	LCD_PRINT_WP@y+1
   956  0186  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   957  0187  00AF               	movwf	??_main
   958  0188  082F               	movf	??_main,w
   959  0189  00A4               	movwf	LCD_PRINT_WP@frase
   960  018A  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
   961  018F                     l1426:	
   962                           
   963                           ;main.c: 50:     delay_ms(150);
   964  018F  3096               	movlw	150
   965  0190  120A  118A  23F3  120A  118A  	fcall	_delay_ms
   966  0195                     l1428:	
   967                           
   968                           ;main.c: 51:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
   969  0195  3000               	movlw	0
   970  0196  1283               	bcf	3,5	;RP0=0, select bank0
   971  0197  1303               	bcf	3,6	;RP1=0, select bank0
   972  0198  00A0               	movwf	LCD_PRINT_WP@x
   973  0199  00A1               	movwf	LCD_PRINT_WP@x+1
   974  019A  3002               	movlw	2
   975  019B  00A2               	movwf	LCD_PRINT_WP@y
   976  019C  3000               	movlw	0
   977  019D  00A3               	movwf	LCD_PRINT_WP@y+1
   978  019E  3056               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   979  019F  00AF               	movwf	??_main
   980  01A0  082F               	movf	??_main,w
   981  01A1  00A4               	movwf	LCD_PRINT_WP@frase
   982  01A2  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
   983  01A7                     l1430:	
   984                           
   985                           ;main.c: 52:     delay_ms(150);
   986  01A7  3096               	movlw	150
   987  01A8  120A  118A  23F3  120A  118A  	fcall	_delay_ms
   988  01AD                     l1432:	
   989                           
   990                           ;main.c: 53:     LCD_CLEAR();
   991  01AD  120A  118A  2514  120A  118A  	fcall	_LCD_CLEAR
   992  01B2                     l1434:	
   993                           
   994                           ;main.c: 54:     LCD_RH();
   995  01B2  120A  118A  250D  120A  118A  	fcall	_LCD_RH
   996  01B7                     l1436:	
   997                           
   998                           ;main.c: 55:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
   999  01B7  3000               	movlw	0
  1000  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1001  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1002  01BA  00A0               	movwf	LCD_PRINT_WP@x
  1003  01BB  00A1               	movwf	LCD_PRINT_WP@x+1
  1004  01BC  3001               	movlw	1
  1005  01BD  00A2               	movwf	LCD_PRINT_WP@y
  1006  01BE  3000               	movlw	0
  1007  01BF  00A3               	movwf	LCD_PRINT_WP@y+1
  1008  01C0  3045               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1009  01C1  00AF               	movwf	??_main
  1010  01C2  082F               	movf	??_main,w
  1011  01C3  00A4               	movwf	LCD_PRINT_WP@frase
  1012  01C4  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1013  01C9                     l1438:	
  1014                           
  1015                           ;main.c: 56:     delay_ms(150);
  1016  01C9  3096               	movlw	150
  1017  01CA  120A  118A  23F3  120A  118A  	fcall	_delay_ms
  1018  01CF                     l1440:	
  1019                           
  1020                           ;main.c: 57:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
  1021  01CF  3000               	movlw	0
  1022  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1023  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1024  01D2  00A0               	movwf	LCD_PRINT_WP@x
  1025  01D3  00A1               	movwf	LCD_PRINT_WP@x+1
  1026  01D4  3002               	movlw	2
  1027  01D5  00A2               	movwf	LCD_PRINT_WP@y
  1028  01D6  3000               	movlw	0
  1029  01D7  00A3               	movwf	LCD_PRINT_WP@y+1
  1030  01D8  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1031  01D9  00AF               	movwf	??_main
  1032  01DA  082F               	movf	??_main,w
  1033  01DB  00A4               	movwf	LCD_PRINT_WP@frase
  1034  01DC  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1035  01E1                     l1442:	
  1036                           
  1037                           ;main.c: 58:     delay_ms(150);
  1038  01E1  3096               	movlw	150
  1039  01E2  120A  118A  23F3  120A  118A  	fcall	_delay_ms
  1040  01E7                     l1444:	
  1041                           
  1042                           ;main.c: 59:     LCD_CLEAR();
  1043  01E7  120A  118A  2514  120A  118A  	fcall	_LCD_CLEAR
  1044  01EC                     l1446:	
  1045                           
  1046                           ;main.c: 60:     LCD_RH();
  1047  01EC  120A  118A  250D  120A  118A  	fcall	_LCD_RH
  1048  01F1                     l1448:	
  1049                           
  1050                           ;main.c: 61:     LCD_PRINT_WP(0,1," SEN.1 SEN.2 CT ");
  1051  01F1  3000               	movlw	0
  1052  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1053  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1054  01F4  00A0               	movwf	LCD_PRINT_WP@x
  1055  01F5  00A1               	movwf	LCD_PRINT_WP@x+1
  1056  01F6  3001               	movlw	1
  1057  01F7  00A2               	movwf	LCD_PRINT_WP@y
  1058  01F8  3000               	movlw	0
  1059  01F9  00A3               	movwf	LCD_PRINT_WP@y+1
  1060  01FA  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1061  01FB  00AF               	movwf	??_main
  1062  01FC  082F               	movf	??_main,w
  1063  01FD  00A4               	movwf	LCD_PRINT_WP@frase
  1064  01FE  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1065  0203                     l1450:	
  1066                           
  1067                           ;main.c: 62:     LCD_PRINT_WP(0,2,"-0.00V-0.00V-000");
  1068  0203  3000               	movlw	0
  1069  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0206  00A0               	movwf	LCD_PRINT_WP@x
  1072  0207  00A1               	movwf	LCD_PRINT_WP@x+1
  1073  0208  3002               	movlw	2
  1074  0209  00A2               	movwf	LCD_PRINT_WP@y
  1075  020A  3000               	movlw	0
  1076  020B  00A3               	movwf	LCD_PRINT_WP@y+1
  1077  020C  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1078  020D  00AF               	movwf	??_main
  1079  020E  082F               	movf	??_main,w
  1080  020F  00A4               	movwf	LCD_PRINT_WP@frase
  1081  0210  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1082  0215                     l1452:	
  1083                           
  1084                           ;main.c: 63:     CONFIG_ADC();
  1085  0215  120A  118A  24FE  120A  118A  	fcall	_CONFIG_ADC
  1086  021A                     l1454:	
  1087                           
  1088                           ;main.c: 66:         if (eADC == 1){
  1089  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1090  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1091  021C  0334               	decf	_eADC,w
  1092  021D  1D03               	btfss	3,2
  1093  021E  2A20               	goto	u941
  1094  021F  2A21               	goto	u940
  1095  0220                     u941:	
  1096  0220  2A35               	goto	l1468
  1097  0221                     u940:	
  1098  0221                     l1456:	
  1099                           
  1100                           ;main.c: 67:             eADC = 0;
  1101  0221  01B4               	clrf	_eADC
  1102  0222                     l1458:	
  1103                           
  1104                           ;main.c: 68:             if (cambiante == 0){ADCAN0 = ADRESH;}
  1105  0222  0835               	movf	_cambiante,w
  1106  0223  1D03               	btfss	3,2
  1107  0224  2A26               	goto	u951
  1108  0225  2A27               	goto	u950
  1109  0226                     u951:	
  1110  0226  2A2B               	goto	l1462
  1111  0227                     u950:	
  1112  0227                     l1460:	
  1113  0227  081E               	movf	30,w	;volatile
  1114  0228  00AF               	movwf	??_main
  1115  0229  082F               	movf	??_main,w
  1116  022A  00B3               	movwf	_ADCAN0
  1117  022B                     l1462:	
  1118                           
  1119                           ;main.c: 69:             if (cambiante == 1){ADCAN1 = ADRESH;}
  1120  022B  0335               	decf	_cambiante,w
  1121  022C  1D03               	btfss	3,2
  1122  022D  2A2F               	goto	u961
  1123  022E  2A30               	goto	u960
  1124  022F                     u961:	
  1125  022F  2A34               	goto	l1466
  1126  0230                     u960:	
  1127  0230                     l1464:	
  1128  0230  081E               	movf	30,w	;volatile
  1129  0231  00AF               	movwf	??_main
  1130  0232  082F               	movf	??_main,w
  1131  0233  00B2               	movwf	_ADCAN1
  1132  0234                     l1466:	
  1133                           
  1134                           ;main.c: 70:             ADCON0bits.GO_DONE = 1;}
  1135  0234  149F               	bsf	31,1	;volatile
  1136  0235                     l1468:	
  1137                           
  1138                           ;main.c: 71:         if (sensor == 20){
  1139  0235  3014               	movlw	20
  1140  0236  0631               	xorwf	_sensor,w
  1141  0237  1D03               	btfss	3,2
  1142  0238  2A3A               	goto	u971
  1143  0239  2A3B               	goto	u970
  1144  023A                     u971:	
  1145  023A  2A1A               	goto	l1454
  1146  023B                     u970:	
  1147  023B                     l1470:	
  1148                           
  1149                           ;main.c: 72:             if (sen == 0){VAL(ADCAN0,0);}
  1150  023B  0830               	movf	_sen,w
  1151  023C  1D03               	btfss	3,2
  1152  023D  2A3F               	goto	u981
  1153  023E  2A40               	goto	u980
  1154  023F                     u981:	
  1155  023F  2A47               	goto	l1474
  1156  0240                     u980:	
  1157  0240                     l1472:	
  1158  0240  01A8               	clrf	VAL@column
  1159  0241  0833               	movf	_ADCAN0,w
  1160  0242  120A  118A  201B  120A  118A  	fcall	_VAL
  1161  0247                     l1474:	
  1162                           
  1163                           ;main.c: 73:             if (sen == 1){VAL(ADCAN1,1);}
  1164  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0249  0330               	decf	_sen,w
  1167  024A  1D03               	btfss	3,2
  1168  024B  2A4D               	goto	u991
  1169  024C  2A4E               	goto	u990
  1170  024D                     u991:	
  1171  024D  2A56               	goto	l1478
  1172  024E                     u990:	
  1173  024E                     l1476:	
  1174  024E  01A8               	clrf	VAL@column
  1175  024F  0AA8               	incf	VAL@column,f
  1176  0250  0832               	movf	_ADCAN1,w
  1177  0251  120A  118A  201B  120A  118A  	fcall	_VAL
  1178  0256                     l1478:	
  1179                           
  1180                           ;main.c: 74:             sen++;
  1181  0256  3001               	movlw	1
  1182  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0259  00AF               	movwf	??_main
  1185  025A  082F               	movf	??_main,w
  1186  025B  07B0               	addwf	_sen,f
  1187  025C                     l1480:	
  1188                           
  1189                           ;main.c: 75:             if (sen > 1){sen = 0;}
  1190  025C  3002               	movlw	2
  1191  025D  0230               	subwf	_sen,w
  1192  025E  1C03               	skipc
  1193  025F  2A61               	goto	u1001
  1194  0260  2A62               	goto	u1000
  1195  0261                     u1001:	
  1196  0261  2A63               	goto	l82
  1197  0262                     u1000:	
  1198  0262                     l1482:	
  1199  0262  01B0               	clrf	_sen
  1200  0263                     l82:	
  1201                           
  1202                           ;main.c: 76:             sensor = 0;}
  1203  0263  01B1               	clrf	_sensor
  1204  0264  2A1A               	goto	l1454
  1205  0265  120A  118A  280C   	ljmp	start
  1206  0268                     __end_of_main:	
  1207                           
  1208                           	psect	text1
  1209  0449                     __ptext1:	
  1210 ;; *************** function _setup *****************
  1211 ;; Defined at:
  1212 ;;		line 81 in file "main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _setup
  1242  0449                     _setup:	
  1243  0449                     l1274:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _setup: [wreg+status,2]
  1246                           
  1247                           
  1248                           ;main.c: 83:     TRISA = 0b00000011;
  1249  0449  3003               	movlw	3
  1250  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1251  044B  1303               	bcf	3,6	;RP1=0, select bank1
  1252  044C  0085               	movwf	5	;volatile
  1253                           
  1254                           ;main.c: 84:     ANSEL = 0b00000011;
  1255  044D  3003               	movlw	3
  1256  044E  1683               	bsf	3,5	;RP0=1, select bank3
  1257  044F  1703               	bsf	3,6	;RP1=1, select bank3
  1258  0450  0088               	movwf	8	;volatile
  1259  0451                     l1276:	
  1260                           
  1261                           ;main.c: 85:     ANSELH = 0b00000000;
  1262  0451  0189               	clrf	9	;volatile
  1263  0452                     l1278:	
  1264                           
  1265                           ;main.c: 86:     TRISB = 0b00000000;
  1266  0452  1683               	bsf	3,5	;RP0=1, select bank1
  1267  0453  1303               	bcf	3,6	;RP1=0, select bank1
  1268  0454  0186               	clrf	6	;volatile
  1269  0455                     l1280:	
  1270                           
  1271                           ;main.c: 87:     TRISC = 0b00000000;
  1272  0455  0187               	clrf	7	;volatile
  1273  0456                     l1282:	
  1274                           
  1275                           ;main.c: 88:     TRISD = 0b00000000;
  1276  0456  0188               	clrf	8	;volatile
  1277  0457                     l1284:	
  1278                           
  1279                           ;main.c: 89:     TRISE = 0b0000;
  1280  0457  0189               	clrf	9	;volatile
  1281  0458                     l1286:	
  1282                           
  1283                           ;main.c: 90:     PORTB = 0b00000000;
  1284  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1286  045A  0186               	clrf	6	;volatile
  1287  045B                     l1288:	
  1288                           
  1289                           ;main.c: 91:     PORTC = 0b00000000;
  1290  045B  0187               	clrf	7	;volatile
  1291  045C                     l1290:	
  1292                           
  1293                           ;main.c: 92:     PORTD = 0b00000000;
  1294  045C  0188               	clrf	8	;volatile
  1295  045D                     l1292:	
  1296                           
  1297                           ;main.c: 93:     PORTE = 0b0000;
  1298  045D  0189               	clrf	9	;volatile
  1299  045E                     l1294:	
  1300                           
  1301                           ;main.c: 96:     OPTION_REGbits.T0CS = 0;
  1302  045E  1683               	bsf	3,5	;RP0=1, select bank1
  1303  045F  1303               	bcf	3,6	;RP1=0, select bank1
  1304  0460  1281               	bcf	1,5	;volatile
  1305  0461                     l1296:	
  1306                           
  1307                           ;main.c: 97:     OPTION_REGbits.PSA = 0;
  1308  0461  1181               	bcf	1,3	;volatile
  1309  0462                     l1298:	
  1310                           
  1311                           ;main.c: 98:     OPTION_REGbits.PS0 = 0;
  1312  0462  1001               	bcf	1,0	;volatile
  1313  0463                     l1300:	
  1314                           
  1315                           ;main.c: 99:     OPTION_REGbits.PS1 = 1;
  1316  0463  1481               	bsf	1,1	;volatile
  1317  0464                     l1302:	
  1318                           
  1319                           ;main.c: 100:     OPTION_REGbits.PS2 = 0;
  1320  0464  1101               	bcf	1,2	;volatile
  1321  0465                     l1304:	
  1322                           
  1323                           ;main.c: 101:     INTCONbits.T0IE = 1;
  1324  0465  168B               	bsf	11,5	;volatile
  1325  0466                     l1306:	
  1326                           
  1327                           ;main.c: 102:     INTCONbits.T0IF = 0;
  1328  0466  110B               	bcf	11,2	;volatile
  1329  0467                     l1308:	
  1330                           
  1331                           ;main.c: 103:     INTCONbits.GIE = 1;
  1332  0467  178B               	bsf	11,7	;volatile
  1333  0468                     l1310:	
  1334                           
  1335                           ;main.c: 104:     TMR0 = 130;
  1336  0468  3082               	movlw	130
  1337  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1338  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1339  046B  0081               	movwf	1	;volatile
  1340  046C                     l88:	
  1341  046C  0008               	return
  1342  046D                     __end_of_setup:	
  1343                           
  1344                           	psect	text2
  1345  001B                     __ptext2:	
  1346 ;; *************** function _VAL *****************
  1347 ;; Defined at:
  1348 ;;		line 72 in file "LCD.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  result          1    wreg     unsigned char 
  1351 ;;  column          1    8[BANK0 ] unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  result          1   13[BANK0 ] unsigned char 
  1354 ;;  unidades        1   14[BANK0 ] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       1       0       0       0
  1365 ;;      Locals:         0       2       0       0       0
  1366 ;;      Temps:          0       4       0       0       0
  1367 ;;      Totals:         0       7       0       0       0
  1368 ;;Total ram usage:        7 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    6
  1371 ;; This function calls:
  1372 ;;		_LCD_PRINT_WP
  1373 ;;		___awdiv
  1374 ;;		___awmod
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _VAL
  1382  001B                     _VAL:	
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _VAL: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1386                           ;VAL@result stored from wreg
  1387  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1388  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1389  001D  00AD               	movwf	VAL@result
  1390  001E                     l1336:	
  1391  001E                     l1338:	
  1392                           
  1393                           ;LCD.c: 74:     unidades = (result - (result % 51))/51;
  1394  001E  3033               	movlw	51
  1395  001F  00A0               	movwf	___awdiv@divisor
  1396  0020  3000               	movlw	0
  1397  0021  00A1               	movwf	___awdiv@divisor+1
  1398  0022  3033               	movlw	51
  1399  0023  00F3               	movwf	___awmod@divisor
  1400  0024  3000               	movlw	0
  1401  0025  00F4               	movwf	___awmod@divisor+1
  1402  0026  082D               	movf	VAL@result,w
  1403  0027  00A9               	movwf	??_VAL
  1404  0028  01AA               	clrf	??_VAL+1
  1405  0029  0829               	movf	??_VAL,w
  1406  002A  00F5               	movwf	___awmod@dividend
  1407  002B  082A               	movf	??_VAL+1,w
  1408  002C  00F6               	movwf	___awmod@dividend+1
  1409  002D  120A  118A  2367  120A  118A  	fcall	___awmod
  1410  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0034  082D               	movf	VAL@result,w
  1413  0035  00AB               	movwf	??_VAL+2
  1414  0036  0873               	movf	?___awmod,w
  1415  0037  022B               	subwf	??_VAL+2,w
  1416  0038  00A2               	movwf	___awdiv@dividend
  1417  0039  0974               	comf	?___awmod+1,w
  1418  003A  1803               	skipnc
  1419  003B  3E01               	addlw	1
  1420  003C  00A3               	movwf	___awdiv@dividend+1
  1421  003D  120A  118A  22FE  120A  118A  	fcall	___awdiv
  1422  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0044  0820               	movf	?___awdiv,w
  1425  0045  00AC               	movwf	??_VAL+3
  1426  0046  082C               	movf	??_VAL+3,w
  1427  0047  00AE               	movwf	VAL@unidades
  1428  0048                     l1340:	
  1429                           
  1430                           ;LCD.c: 75:     if (column == 0) {
  1431  0048  0828               	movf	VAL@column,w
  1432  0049  1D03               	btfss	3,2
  1433  004A  284C               	goto	u751
  1434  004B  284D               	goto	u750
  1435  004C                     u751:	
  1436  004C  28D6               	goto	l1366
  1437  004D                     u750:	
  1438  004D                     l1342:	
  1439                           
  1440                           ;LCD.c: 76:         if (unidades == 0){LCD_PRINT_WP(0,2,"-0.00V");}
  1441  004D  082E               	movf	VAL@unidades,w
  1442  004E  1D03               	btfss	3,2
  1443  004F  2851               	goto	u761
  1444  0050  2852               	goto	u760
  1445  0051                     u761:	
  1446  0051  2863               	goto	l1346
  1447  0052                     u760:	
  1448  0052                     l1344:	
  1449  0052  3000               	movlw	0
  1450  0053  00A0               	movwf	LCD_PRINT_WP@x
  1451  0054  00A1               	movwf	LCD_PRINT_WP@x+1
  1452  0055  3002               	movlw	2
  1453  0056  00A2               	movwf	LCD_PRINT_WP@y
  1454  0057  3000               	movlw	0
  1455  0058  00A3               	movwf	LCD_PRINT_WP@y+1
  1456  0059  3067               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1457  005A  00A9               	movwf	??_VAL
  1458  005B  0829               	movf	??_VAL,w
  1459  005C  00A4               	movwf	LCD_PRINT_WP@frase
  1460  005D  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1461  0062  2968               	goto	l184
  1462  0063                     l1346:	
  1463  0063  032E               	decf	VAL@unidades,w
  1464  0064  1D03               	btfss	3,2
  1465  0065  2867               	goto	u771
  1466  0066  2868               	goto	u770
  1467  0067                     u771:	
  1468  0067  2879               	goto	l1350
  1469  0068                     u770:	
  1470  0068                     l1348:	
  1471  0068  3000               	movlw	0
  1472  0069  00A0               	movwf	LCD_PRINT_WP@x
  1473  006A  00A1               	movwf	LCD_PRINT_WP@x+1
  1474  006B  3002               	movlw	2
  1475  006C  00A2               	movwf	LCD_PRINT_WP@y
  1476  006D  3000               	movlw	0
  1477  006E  00A3               	movwf	LCD_PRINT_WP@y+1
  1478  006F  306E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1479  0070  00A9               	movwf	??_VAL
  1480  0071  0829               	movf	??_VAL,w
  1481  0072  00A4               	movwf	LCD_PRINT_WP@frase
  1482  0073  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1483  0078  2968               	goto	l184
  1484  0079                     l1350:	
  1485  0079  3002               	movlw	2
  1486  007A  062E               	xorwf	VAL@unidades,w
  1487  007B  1D03               	btfss	3,2
  1488  007C  287E               	goto	u781
  1489  007D  287F               	goto	u780
  1490  007E                     u781:	
  1491  007E  2890               	goto	l1354
  1492  007F                     u780:	
  1493  007F                     l1352:	
  1494  007F  3000               	movlw	0
  1495  0080  00A0               	movwf	LCD_PRINT_WP@x
  1496  0081  00A1               	movwf	LCD_PRINT_WP@x+1
  1497  0082  3002               	movlw	2
  1498  0083  00A2               	movwf	LCD_PRINT_WP@y
  1499  0084  3000               	movlw	0
  1500  0085  00A3               	movwf	LCD_PRINT_WP@y+1
  1501  0086  3075               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1502  0087  00A9               	movwf	??_VAL
  1503  0088  0829               	movf	??_VAL,w
  1504  0089  00A4               	movwf	LCD_PRINT_WP@frase
  1505  008A  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1506  008F  2968               	goto	l184
  1507  0090                     l1354:	
  1508  0090  3003               	movlw	3
  1509  0091  062E               	xorwf	VAL@unidades,w
  1510  0092  1D03               	btfss	3,2
  1511  0093  2895               	goto	u791
  1512  0094  2896               	goto	u790
  1513  0095                     u791:	
  1514  0095  28A7               	goto	l1358
  1515  0096                     u790:	
  1516  0096                     l1356:	
  1517  0096  3000               	movlw	0
  1518  0097  00A0               	movwf	LCD_PRINT_WP@x
  1519  0098  00A1               	movwf	LCD_PRINT_WP@x+1
  1520  0099  3002               	movlw	2
  1521  009A  00A2               	movwf	LCD_PRINT_WP@y
  1522  009B  3000               	movlw	0
  1523  009C  00A3               	movwf	LCD_PRINT_WP@y+1
  1524  009D  307C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1525  009E  00A9               	movwf	??_VAL
  1526  009F  0829               	movf	??_VAL,w
  1527  00A0  00A4               	movwf	LCD_PRINT_WP@frase
  1528  00A1  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1529  00A6  2968               	goto	l184
  1530  00A7                     l1358:	
  1531  00A7  3004               	movlw	4
  1532  00A8  062E               	xorwf	VAL@unidades,w
  1533  00A9  1D03               	btfss	3,2
  1534  00AA  28AC               	goto	u801
  1535  00AB  28AD               	goto	u800
  1536  00AC                     u801:	
  1537  00AC  28BE               	goto	l1362
  1538  00AD                     u800:	
  1539  00AD                     l1360:	
  1540  00AD  3000               	movlw	0
  1541  00AE  00A0               	movwf	LCD_PRINT_WP@x
  1542  00AF  00A1               	movwf	LCD_PRINT_WP@x+1
  1543  00B0  3002               	movlw	2
  1544  00B1  00A2               	movwf	LCD_PRINT_WP@y
  1545  00B2  3000               	movlw	0
  1546  00B3  00A3               	movwf	LCD_PRINT_WP@y+1
  1547  00B4  3083               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1548  00B5  00A9               	movwf	??_VAL
  1549  00B6  0829               	movf	??_VAL,w
  1550  00B7  00A4               	movwf	LCD_PRINT_WP@frase
  1551  00B8  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1552  00BD  2968               	goto	l184
  1553  00BE                     l1362:	
  1554  00BE  3005               	movlw	5
  1555  00BF  062E               	xorwf	VAL@unidades,w
  1556  00C0  1D03               	btfss	3,2
  1557  00C1  28C3               	goto	u811
  1558  00C2  28C4               	goto	u810
  1559  00C3                     u811:	
  1560  00C3  28D5               	goto	l165
  1561  00C4                     u810:	
  1562  00C4                     l1364:	
  1563  00C4  3000               	movlw	0
  1564  00C5  00A0               	movwf	LCD_PRINT_WP@x
  1565  00C6  00A1               	movwf	LCD_PRINT_WP@x+1
  1566  00C7  3002               	movlw	2
  1567  00C8  00A2               	movwf	LCD_PRINT_WP@y
  1568  00C9  3000               	movlw	0
  1569  00CA  00A3               	movwf	LCD_PRINT_WP@y+1
  1570  00CB  308A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1571  00CC  00A9               	movwf	??_VAL
  1572  00CD  0829               	movf	??_VAL,w
  1573  00CE  00A4               	movwf	LCD_PRINT_WP@frase
  1574  00CF  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1575  00D4  2968               	goto	l184
  1576  00D5                     l165:	
  1577  00D5  2968               	goto	l184
  1578  00D6                     l1366:	
  1579  00D6  0328               	decf	VAL@column,w
  1580  00D7  1D03               	btfss	3,2
  1581  00D8  28DA               	goto	u821
  1582  00D9  28DB               	goto	u820
  1583  00DA                     u821:	
  1584  00DA  2968               	goto	l184
  1585  00DB                     u820:	
  1586  00DB                     l1368:	
  1587                           
  1588                           ;LCD.c: 83:         if (unidades == 0){LCD_PRINT_WP(6,2,"-0.00V");}
  1589  00DB  082E               	movf	VAL@unidades,w
  1590  00DC  1D03               	btfss	3,2
  1591  00DD  28DF               	goto	u831
  1592  00DE  28E0               	goto	u830
  1593  00DF                     u831:	
  1594  00DF  28F2               	goto	l1372
  1595  00E0                     u830:	
  1596  00E0                     l1370:	
  1597  00E0  3006               	movlw	6
  1598  00E1  00A0               	movwf	LCD_PRINT_WP@x
  1599  00E2  3000               	movlw	0
  1600  00E3  00A1               	movwf	LCD_PRINT_WP@x+1
  1601  00E4  3002               	movlw	2
  1602  00E5  00A2               	movwf	LCD_PRINT_WP@y
  1603  00E6  3000               	movlw	0
  1604  00E7  00A3               	movwf	LCD_PRINT_WP@y+1
  1605  00E8  3067               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1606  00E9  00A9               	movwf	??_VAL
  1607  00EA  0829               	movf	??_VAL,w
  1608  00EB  00A4               	movwf	LCD_PRINT_WP@frase
  1609  00EC  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1610  00F1  2968               	goto	l184
  1611  00F2                     l1372:	
  1612  00F2  032E               	decf	VAL@unidades,w
  1613  00F3  1D03               	btfss	3,2
  1614  00F4  28F6               	goto	u841
  1615  00F5  28F7               	goto	u840
  1616  00F6                     u841:	
  1617  00F6  2909               	goto	l1376
  1618  00F7                     u840:	
  1619  00F7                     l1374:	
  1620  00F7  3006               	movlw	6
  1621  00F8  00A0               	movwf	LCD_PRINT_WP@x
  1622  00F9  3000               	movlw	0
  1623  00FA  00A1               	movwf	LCD_PRINT_WP@x+1
  1624  00FB  3002               	movlw	2
  1625  00FC  00A2               	movwf	LCD_PRINT_WP@y
  1626  00FD  3000               	movlw	0
  1627  00FE  00A3               	movwf	LCD_PRINT_WP@y+1
  1628  00FF  306E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1629  0100  00A9               	movwf	??_VAL
  1630  0101  0829               	movf	??_VAL,w
  1631  0102  00A4               	movwf	LCD_PRINT_WP@frase
  1632  0103  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1633  0108  2968               	goto	l184
  1634  0109                     l1376:	
  1635  0109  3002               	movlw	2
  1636  010A  062E               	xorwf	VAL@unidades,w
  1637  010B  1D03               	btfss	3,2
  1638  010C  290E               	goto	u851
  1639  010D  290F               	goto	u850
  1640  010E                     u851:	
  1641  010E  2921               	goto	l1380
  1642  010F                     u850:	
  1643  010F                     l1378:	
  1644  010F  3006               	movlw	6
  1645  0110  00A0               	movwf	LCD_PRINT_WP@x
  1646  0111  3000               	movlw	0
  1647  0112  00A1               	movwf	LCD_PRINT_WP@x+1
  1648  0113  3002               	movlw	2
  1649  0114  00A2               	movwf	LCD_PRINT_WP@y
  1650  0115  3000               	movlw	0
  1651  0116  00A3               	movwf	LCD_PRINT_WP@y+1
  1652  0117  3075               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1653  0118  00A9               	movwf	??_VAL
  1654  0119  0829               	movf	??_VAL,w
  1655  011A  00A4               	movwf	LCD_PRINT_WP@frase
  1656  011B  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1657  0120  2968               	goto	l184
  1658  0121                     l1380:	
  1659  0121  3003               	movlw	3
  1660  0122  062E               	xorwf	VAL@unidades,w
  1661  0123  1D03               	btfss	3,2
  1662  0124  2926               	goto	u861
  1663  0125  2927               	goto	u860
  1664  0126                     u861:	
  1665  0126  2939               	goto	l1384
  1666  0127                     u860:	
  1667  0127                     l1382:	
  1668  0127  3006               	movlw	6
  1669  0128  00A0               	movwf	LCD_PRINT_WP@x
  1670  0129  3000               	movlw	0
  1671  012A  00A1               	movwf	LCD_PRINT_WP@x+1
  1672  012B  3002               	movlw	2
  1673  012C  00A2               	movwf	LCD_PRINT_WP@y
  1674  012D  3000               	movlw	0
  1675  012E  00A3               	movwf	LCD_PRINT_WP@y+1
  1676  012F  307C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1677  0130  00A9               	movwf	??_VAL
  1678  0131  0829               	movf	??_VAL,w
  1679  0132  00A4               	movwf	LCD_PRINT_WP@frase
  1680  0133  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1681  0138  2968               	goto	l184
  1682  0139                     l1384:	
  1683  0139  3004               	movlw	4
  1684  013A  062E               	xorwf	VAL@unidades,w
  1685  013B  1D03               	btfss	3,2
  1686  013C  293E               	goto	u871
  1687  013D  293F               	goto	u870
  1688  013E                     u871:	
  1689  013E  2951               	goto	l1388
  1690  013F                     u870:	
  1691  013F                     l1386:	
  1692  013F  3006               	movlw	6
  1693  0140  00A0               	movwf	LCD_PRINT_WP@x
  1694  0141  3000               	movlw	0
  1695  0142  00A1               	movwf	LCD_PRINT_WP@x+1
  1696  0143  3002               	movlw	2
  1697  0144  00A2               	movwf	LCD_PRINT_WP@y
  1698  0145  3000               	movlw	0
  1699  0146  00A3               	movwf	LCD_PRINT_WP@y+1
  1700  0147  3083               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1701  0148  00A9               	movwf	??_VAL
  1702  0149  0829               	movf	??_VAL,w
  1703  014A  00A4               	movwf	LCD_PRINT_WP@frase
  1704  014B  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1705  0150  2968               	goto	l184
  1706  0151                     l1388:	
  1707  0151  3005               	movlw	5
  1708  0152  062E               	xorwf	VAL@unidades,w
  1709  0153  1D03               	btfss	3,2
  1710  0154  2956               	goto	u881
  1711  0155  2957               	goto	u880
  1712  0156                     u881:	
  1713  0156  28D5               	goto	l165
  1714  0157                     u880:	
  1715  0157                     l1390:	
  1716  0157  3006               	movlw	6
  1717  0158  00A0               	movwf	LCD_PRINT_WP@x
  1718  0159  3000               	movlw	0
  1719  015A  00A1               	movwf	LCD_PRINT_WP@x+1
  1720  015B  3002               	movlw	2
  1721  015C  00A2               	movwf	LCD_PRINT_WP@y
  1722  015D  3000               	movlw	0
  1723  015E  00A3               	movwf	LCD_PRINT_WP@y+1
  1724  015F  308A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1725  0160  00A9               	movwf	??_VAL
  1726  0161  0829               	movf	??_VAL,w
  1727  0162  00A4               	movwf	LCD_PRINT_WP@frase
  1728  0163  120A  118A  246D  120A  118A  	fcall	_LCD_PRINT_WP
  1729  0168                     l184:	
  1730  0168  0008               	return
  1731  0169                     __end_of_VAL:	
  1732                           
  1733                           	psect	text3
  1734  0367                     __ptext3:	
  1735 ;; *************** function ___awmod *****************
  1736 ;; Defined at:
  1737 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  divisor         2    3[COMMON] int 
  1740 ;;  dividend        2    5[COMMON] int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  sign            1    9[COMMON] unsigned char 
  1743 ;;  counter         1    8[COMMON] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2    3[COMMON] int 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         4       0       0       0       0
  1754 ;;      Locals:         2       0       0       0       0
  1755 ;;      Temps:          1       0       0       0       0
  1756 ;;      Totals:         7       0       0       0       0
  1757 ;;Total ram usage:        7 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_VAL
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function ___awmod
  1769  0367                     ___awmod:	
  1770  0367                     l1236:	
  1771                           ;incstack = 0
  1772                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1773                           
  1774  0367  01F9               	clrf	___awmod@sign
  1775  0368                     l1238:	
  1776  0368  1FF6               	btfss	___awmod@dividend+1,7
  1777  0369  2B6B               	goto	u661
  1778  036A  2B6C               	goto	u660
  1779  036B                     u661:	
  1780  036B  2B73               	goto	l1244
  1781  036C                     u660:	
  1782  036C                     l1240:	
  1783  036C  09F5               	comf	___awmod@dividend,f
  1784  036D  09F6               	comf	___awmod@dividend+1,f
  1785  036E  0AF5               	incf	___awmod@dividend,f
  1786  036F  1903               	skipnz
  1787  0370  0AF6               	incf	___awmod@dividend+1,f
  1788  0371                     l1242:	
  1789  0371  01F9               	clrf	___awmod@sign
  1790  0372  0AF9               	incf	___awmod@sign,f
  1791  0373                     l1244:	
  1792  0373  1FF4               	btfss	___awmod@divisor+1,7
  1793  0374  2B76               	goto	u671
  1794  0375  2B77               	goto	u670
  1795  0376                     u671:	
  1796  0376  2B7C               	goto	l1248
  1797  0377                     u670:	
  1798  0377                     l1246:	
  1799  0377  09F3               	comf	___awmod@divisor,f
  1800  0378  09F4               	comf	___awmod@divisor+1,f
  1801  0379  0AF3               	incf	___awmod@divisor,f
  1802  037A  1903               	skipnz
  1803  037B  0AF4               	incf	___awmod@divisor+1,f
  1804  037C                     l1248:	
  1805  037C  0873               	movf	___awmod@divisor,w
  1806  037D  0474               	iorwf	___awmod@divisor+1,w
  1807  037E  1903               	btfsc	3,2
  1808  037F  2B81               	goto	u681
  1809  0380  2B82               	goto	u680
  1810  0381                     u681:	
  1811  0381  2BB1               	goto	l1266
  1812  0382                     u680:	
  1813  0382                     l1250:	
  1814  0382  01F8               	clrf	___awmod@counter
  1815  0383  0AF8               	incf	___awmod@counter,f
  1816  0384  2B90               	goto	l1256
  1817  0385                     l1252:	
  1818  0385  3001               	movlw	1
  1819  0386                     u695:	
  1820  0386  1003               	clrc
  1821  0387  0DF3               	rlf	___awmod@divisor,f
  1822  0388  0DF4               	rlf	___awmod@divisor+1,f
  1823  0389  3EFF               	addlw	-1
  1824  038A  1D03               	skipz
  1825  038B  2B86               	goto	u695
  1826  038C                     l1254:	
  1827  038C  3001               	movlw	1
  1828  038D  00F7               	movwf	??___awmod
  1829  038E  0877               	movf	??___awmod,w
  1830  038F  07F8               	addwf	___awmod@counter,f
  1831  0390                     l1256:	
  1832  0390  1FF4               	btfss	___awmod@divisor+1,7
  1833  0391  2B93               	goto	u701
  1834  0392  2B94               	goto	u700
  1835  0393                     u701:	
  1836  0393  2B85               	goto	l1252
  1837  0394                     u700:	
  1838  0394                     l1258:	
  1839  0394  0874               	movf	___awmod@divisor+1,w
  1840  0395  0276               	subwf	___awmod@dividend+1,w
  1841  0396  1D03               	skipz
  1842  0397  2B9A               	goto	u715
  1843  0398  0873               	movf	___awmod@divisor,w
  1844  0399  0275               	subwf	___awmod@dividend,w
  1845  039A                     u715:	
  1846  039A  1C03               	skipc
  1847  039B  2B9D               	goto	u711
  1848  039C  2B9E               	goto	u710
  1849  039D                     u711:	
  1850  039D  2BA4               	goto	l1262
  1851  039E                     u710:	
  1852  039E                     l1260:	
  1853  039E  0873               	movf	___awmod@divisor,w
  1854  039F  02F5               	subwf	___awmod@dividend,f
  1855  03A0  0874               	movf	___awmod@divisor+1,w
  1856  03A1  1C03               	skipc
  1857  03A2  03F6               	decf	___awmod@dividend+1,f
  1858  03A3  02F6               	subwf	___awmod@dividend+1,f
  1859  03A4                     l1262:	
  1860  03A4  3001               	movlw	1
  1861  03A5                     u725:	
  1862  03A5  1003               	clrc
  1863  03A6  0CF4               	rrf	___awmod@divisor+1,f
  1864  03A7  0CF3               	rrf	___awmod@divisor,f
  1865  03A8  3EFF               	addlw	-1
  1866  03A9  1D03               	skipz
  1867  03AA  2BA5               	goto	u725
  1868  03AB                     l1264:	
  1869  03AB  3001               	movlw	1
  1870  03AC  02F8               	subwf	___awmod@counter,f
  1871  03AD  1D03               	btfss	3,2
  1872  03AE  2BB0               	goto	u731
  1873  03AF  2BB1               	goto	u730
  1874  03B0                     u731:	
  1875  03B0  2B94               	goto	l1258
  1876  03B1                     u730:	
  1877  03B1                     l1266:	
  1878  03B1  0879               	movf	___awmod@sign,w
  1879  03B2  1903               	btfsc	3,2
  1880  03B3  2BB5               	goto	u741
  1881  03B4  2BB6               	goto	u740
  1882  03B5                     u741:	
  1883  03B5  2BBB               	goto	l1270
  1884  03B6                     u740:	
  1885  03B6                     l1268:	
  1886  03B6  09F5               	comf	___awmod@dividend,f
  1887  03B7  09F6               	comf	___awmod@dividend+1,f
  1888  03B8  0AF5               	incf	___awmod@dividend,f
  1889  03B9  1903               	skipnz
  1890  03BA  0AF6               	incf	___awmod@dividend+1,f
  1891  03BB                     l1270:	
  1892  03BB  0876               	movf	___awmod@dividend+1,w
  1893  03BC  00F4               	movwf	?___awmod+1
  1894  03BD  0875               	movf	___awmod@dividend,w
  1895  03BE  00F3               	movwf	?___awmod
  1896  03BF                     l436:	
  1897  03BF  0008               	return
  1898  03C0                     __end_of___awmod:	
  1899                           
  1900                           	psect	text4
  1901  02FE                     __ptext4:	
  1902 ;; *************** function ___awdiv *****************
  1903 ;; Defined at:
  1904 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  divisor         2    0[BANK0 ] int 
  1907 ;;  dividend        2    2[BANK0 ] int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  quotient        2    6[BANK0 ] int 
  1910 ;;  sign            1    5[BANK0 ] unsigned char 
  1911 ;;  counter         1    4[BANK0 ] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    0[BANK0 ] int 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       4       0       0       0
  1922 ;;      Locals:         0       4       0       0       0
  1923 ;;      Temps:          1       0       0       0       0
  1924 ;;      Totals:         1       8       0       0       0
  1925 ;;Total ram usage:        9 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_VAL
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function ___awdiv
  1937  02FE                     ___awdiv:	
  1938  02FE                     l1192:	
  1939                           ;incstack = 0
  1940                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1941                           
  1942  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1943  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0300  01A5               	clrf	___awdiv@sign
  1945  0301                     l1194:	
  1946  0301  1FA1               	btfss	___awdiv@divisor+1,7
  1947  0302  2B04               	goto	u561
  1948  0303  2B05               	goto	u560
  1949  0304                     u561:	
  1950  0304  2B0C               	goto	l1200
  1951  0305                     u560:	
  1952  0305                     l1196:	
  1953  0305  09A0               	comf	___awdiv@divisor,f
  1954  0306  09A1               	comf	___awdiv@divisor+1,f
  1955  0307  0AA0               	incf	___awdiv@divisor,f
  1956  0308  1903               	skipnz
  1957  0309  0AA1               	incf	___awdiv@divisor+1,f
  1958  030A                     l1198:	
  1959  030A  01A5               	clrf	___awdiv@sign
  1960  030B  0AA5               	incf	___awdiv@sign,f
  1961  030C                     l1200:	
  1962  030C  1FA3               	btfss	___awdiv@dividend+1,7
  1963  030D  2B0F               	goto	u571
  1964  030E  2B10               	goto	u570
  1965  030F                     u571:	
  1966  030F  2B19               	goto	l1206
  1967  0310                     u570:	
  1968  0310                     l1202:	
  1969  0310  09A2               	comf	___awdiv@dividend,f
  1970  0311  09A3               	comf	___awdiv@dividend+1,f
  1971  0312  0AA2               	incf	___awdiv@dividend,f
  1972  0313  1903               	skipnz
  1973  0314  0AA3               	incf	___awdiv@dividend+1,f
  1974  0315                     l1204:	
  1975  0315  3001               	movlw	1
  1976  0316  00FA               	movwf	??___awdiv
  1977  0317  087A               	movf	??___awdiv,w
  1978  0318  06A5               	xorwf	___awdiv@sign,f
  1979  0319                     l1206:	
  1980  0319  01A6               	clrf	___awdiv@quotient
  1981  031A  01A7               	clrf	___awdiv@quotient+1
  1982  031B                     l1208:	
  1983  031B  0820               	movf	___awdiv@divisor,w
  1984  031C  0421               	iorwf	___awdiv@divisor+1,w
  1985  031D  1903               	btfsc	3,2
  1986  031E  2B20               	goto	u581
  1987  031F  2B21               	goto	u580
  1988  0320                     u581:	
  1989  0320  2B58               	goto	l1228
  1990  0321                     u580:	
  1991  0321                     l1210:	
  1992  0321  01A4               	clrf	___awdiv@counter
  1993  0322  0AA4               	incf	___awdiv@counter,f
  1994  0323  2B2F               	goto	l1216
  1995  0324                     l1212:	
  1996  0324  3001               	movlw	1
  1997  0325                     u595:	
  1998  0325  1003               	clrc
  1999  0326  0DA0               	rlf	___awdiv@divisor,f
  2000  0327  0DA1               	rlf	___awdiv@divisor+1,f
  2001  0328  3EFF               	addlw	-1
  2002  0329  1D03               	skipz
  2003  032A  2B25               	goto	u595
  2004  032B                     l1214:	
  2005  032B  3001               	movlw	1
  2006  032C  00FA               	movwf	??___awdiv
  2007  032D  087A               	movf	??___awdiv,w
  2008  032E  07A4               	addwf	___awdiv@counter,f
  2009  032F                     l1216:	
  2010  032F  1FA1               	btfss	___awdiv@divisor+1,7
  2011  0330  2B32               	goto	u601
  2012  0331  2B33               	goto	u600
  2013  0332                     u601:	
  2014  0332  2B24               	goto	l1212
  2015  0333                     u600:	
  2016  0333                     l1218:	
  2017  0333  3001               	movlw	1
  2018  0334                     u615:	
  2019  0334  1003               	clrc
  2020  0335  0DA6               	rlf	___awdiv@quotient,f
  2021  0336  0DA7               	rlf	___awdiv@quotient+1,f
  2022  0337  3EFF               	addlw	-1
  2023  0338  1D03               	skipz
  2024  0339  2B34               	goto	u615
  2025  033A  0821               	movf	___awdiv@divisor+1,w
  2026  033B  0223               	subwf	___awdiv@dividend+1,w
  2027  033C  1D03               	skipz
  2028  033D  2B40               	goto	u625
  2029  033E  0820               	movf	___awdiv@divisor,w
  2030  033F  0222               	subwf	___awdiv@dividend,w
  2031  0340                     u625:	
  2032  0340  1C03               	skipc
  2033  0341  2B43               	goto	u621
  2034  0342  2B44               	goto	u620
  2035  0343                     u621:	
  2036  0343  2B4B               	goto	l1224
  2037  0344                     u620:	
  2038  0344                     l1220:	
  2039  0344  0820               	movf	___awdiv@divisor,w
  2040  0345  02A2               	subwf	___awdiv@dividend,f
  2041  0346  0821               	movf	___awdiv@divisor+1,w
  2042  0347  1C03               	skipc
  2043  0348  03A3               	decf	___awdiv@dividend+1,f
  2044  0349  02A3               	subwf	___awdiv@dividend+1,f
  2045  034A                     l1222:	
  2046  034A  1426               	bsf	___awdiv@quotient,0
  2047  034B                     l1224:	
  2048  034B  3001               	movlw	1
  2049  034C                     u635:	
  2050  034C  1003               	clrc
  2051  034D  0CA1               	rrf	___awdiv@divisor+1,f
  2052  034E  0CA0               	rrf	___awdiv@divisor,f
  2053  034F  3EFF               	addlw	-1
  2054  0350  1D03               	skipz
  2055  0351  2B4C               	goto	u635
  2056  0352                     l1226:	
  2057  0352  3001               	movlw	1
  2058  0353  02A4               	subwf	___awdiv@counter,f
  2059  0354  1D03               	btfss	3,2
  2060  0355  2B57               	goto	u641
  2061  0356  2B58               	goto	u640
  2062  0357                     u641:	
  2063  0357  2B33               	goto	l1218
  2064  0358                     u640:	
  2065  0358                     l1228:	
  2066  0358  0825               	movf	___awdiv@sign,w
  2067  0359  1903               	btfsc	3,2
  2068  035A  2B5C               	goto	u651
  2069  035B  2B5D               	goto	u650
  2070  035C                     u651:	
  2071  035C  2B62               	goto	l1232
  2072  035D                     u650:	
  2073  035D                     l1230:	
  2074  035D  09A6               	comf	___awdiv@quotient,f
  2075  035E  09A7               	comf	___awdiv@quotient+1,f
  2076  035F  0AA6               	incf	___awdiv@quotient,f
  2077  0360  1903               	skipnz
  2078  0361  0AA7               	incf	___awdiv@quotient+1,f
  2079  0362                     l1232:	
  2080  0362  0827               	movf	___awdiv@quotient+1,w
  2081  0363  00A1               	movwf	?___awdiv+1
  2082  0364  0826               	movf	___awdiv@quotient,w
  2083  0365  00A0               	movwf	?___awdiv
  2084  0366                     l423:	
  2085  0366  0008               	return
  2086  0367                     __end_of___awdiv:	
  2087                           
  2088                           	psect	text5
  2089  046D                     __ptext5:	
  2090 ;; *************** function _LCD_PRINT_WP *****************
  2091 ;; Defined at:
  2092 ;;		line 63 in file "LCD.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  x               2    0[BANK0 ] int 
  2095 ;;  y               2    2[BANK0 ] int 
  2096 ;;  frase           1    4[BANK0 ] PTR unsigned char 
  2097 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  2098 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  2099 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  2100 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2101 ;;		 -> STR_2(17), STR_1(17), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  location        1    5[BANK0 ] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         0       5       0       0       0
  2114 ;;      Locals:         0       1       0       0       0
  2115 ;;      Temps:          1       0       0       0       0
  2116 ;;      Totals:         1       6       0       0       0
  2117 ;;Total ram usage:        7 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    5
  2120 ;; This function calls:
  2121 ;;		_LCD_CONTROL
  2122 ;;		_LCD_PRINT
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;;		_VAL
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _LCD_PRINT_WP
  2131  046D                     _LCD_PRINT_WP:	
  2132  046D                     l1178:	
  2133                           ;incstack = 0
  2134                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2135                           
  2136                           
  2137                           ;LCD.c: 64:     char location;;LCD.c: 65:     if (y == 1){location = 0x80 + x;}
  2138  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2139  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2140  046F  0322               	decf	LCD_PRINT_WP@y,w
  2141  0470  0423               	iorwf	LCD_PRINT_WP@y+1,w
  2142  0471  1D03               	btfss	3,2
  2143  0472  2C74               	goto	u551
  2144  0473  2C75               	goto	u550
  2145  0474                     u551:	
  2146  0474  2C7B               	goto	l1182
  2147  0475                     u550:	
  2148  0475                     l1180:	
  2149  0475  0820               	movf	LCD_PRINT_WP@x,w
  2150  0476  3E80               	addlw	128
  2151  0477  00FA               	movwf	??_LCD_PRINT_WP
  2152  0478  087A               	movf	??_LCD_PRINT_WP,w
  2153  0479  00A5               	movwf	LCD_PRINT_WP@location
  2154  047A  2C80               	goto	l1188
  2155  047B                     l1182:	
  2156  047B                     l1184:	
  2157  047B  0820               	movf	LCD_PRINT_WP@x,w
  2158  047C  3EC0               	addlw	192
  2159  047D  00FA               	movwf	??_LCD_PRINT_WP
  2160  047E  087A               	movf	??_LCD_PRINT_WP,w
  2161  047F  00A5               	movwf	LCD_PRINT_WP@location
  2162  0480                     l1188:	
  2163                           
  2164                           ;LCD.c: 68:     LCD_CONTROL(location);
  2165  0480  0825               	movf	LCD_PRINT_WP@location,w
  2166  0481  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2167  0486                     l1190:	
  2168                           
  2169                           ;LCD.c: 69:     LCD_PRINT(frase);
  2170  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0488  0824               	movf	LCD_PRINT_WP@frase,w
  2173  0489  120A  118A  248F  120A  118A  	fcall	_LCD_PRINT
  2174  048E                     l156:	
  2175  048E  0008               	return
  2176  048F                     __end_of_LCD_PRINT_WP:	
  2177                           
  2178                           	psect	text6
  2179  048F                     __ptext6:	
  2180 ;; *************** function _LCD_PRINT *****************
  2181 ;; Defined at:
  2182 ;;		line 56 in file "LCD.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  data            1    wreg     PTR unsigned char 
  2185 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  2186 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  2187 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  2188 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2189 ;;		 -> STR_2(17), STR_1(17), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  data            1    9[COMMON] PTR unsigned char 
  2192 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  2193 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  2194 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  2195 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2196 ;;		 -> STR_2(17), STR_1(17), 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         1       0       0       0       0
  2208 ;;      Temps:          1       0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    4
  2213 ;; This function calls:
  2214 ;;		_LCD_DATO
  2215 ;; This function is called by:
  2216 ;;		_LCD_PRINT_WP
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _LCD_PRINT
  2222  048F                     _LCD_PRINT:	
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2226                           ;LCD_PRINT@data stored from wreg
  2227  048F  00F9               	movwf	LCD_PRINT@data
  2228  0490                     l1170:	
  2229                           
  2230                           ;LCD.c: 57:     while(*data){
  2231  0490  2CA1               	goto	l1176
  2232  0491                     l1172:	
  2233                           
  2234                           ;LCD.c: 58:         LCD_DATO (*data);
  2235  0491  0879               	movf	LCD_PRINT@data,w
  2236  0492  0084               	movwf	4
  2237  0493  120A  118A  2268  120A  118A  	fcall	stringdir
  2238  0498  120A  118A  24DA  120A  118A  	fcall	_LCD_DATO
  2239  049D                     l1174:	
  2240                           
  2241                           ;LCD.c: 59:         data++;}}
  2242  049D  3001               	movlw	1
  2243  049E  00F8               	movwf	??_LCD_PRINT
  2244  049F  0878               	movf	??_LCD_PRINT,w
  2245  04A0  07F9               	addwf	LCD_PRINT@data,f
  2246  04A1                     l1176:	
  2247                           
  2248                           ;LCD.c: 57:     while(*data){
  2249  04A1  0879               	movf	LCD_PRINT@data,w
  2250  04A2  0084               	movwf	4
  2251  04A3  120A  118A  2268  120A  118A  	fcall	stringdir
  2252  04A8  3A00               	xorlw	0
  2253  04A9  1D03               	skipz
  2254  04AA  2CAC               	goto	u541
  2255  04AB  2CAD               	goto	u540
  2256  04AC                     u541:	
  2257  04AC  2C91               	goto	l1172
  2258  04AD                     u540:	
  2259  04AD                     l146:	
  2260  04AD  0008               	return
  2261  04AE                     __end_of_LCD_PRINT:	
  2262                           
  2263                           	psect	text7
  2264  04DA                     __ptext7:	
  2265 ;; *************** function _LCD_DATO *****************
  2266 ;; Defined at:
  2267 ;;		line 45 in file "LCD.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  comando         1    wreg     unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  comando         1    7[COMMON] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       0       0       0       0
  2282 ;;      Locals:         1       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0
  2284 ;;      Totals:         1       0       0       0       0
  2285 ;;Total ram usage:        1 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    3
  2288 ;; This function calls:
  2289 ;;		_LCD_PULSE
  2290 ;;		_delay_us
  2291 ;; This function is called by:
  2292 ;;		_LCD_PRINT
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _LCD_DATO
  2298  04DA                     _LCD_DATO:	
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  2302                           ;LCD_DATO@comando stored from wreg
  2303  04DA  00F7               	movwf	LCD_DATO@comando
  2304  04DB                     l1154:	
  2305                           
  2306                           ;LCD.c: 46:     PORTEbits.RE0 = 1;
  2307  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2308  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2309  04DD  1409               	bsf	9,0	;volatile
  2310  04DE                     l1156:	
  2311                           
  2312                           ;LCD.c: 47:     PORTD = comando;
  2313  04DE  0877               	movf	LCD_DATO@comando,w
  2314  04DF  0088               	movwf	8	;volatile
  2315  04E0                     l1158:	
  2316                           
  2317                           ;LCD.c: 48:     LCD_PULSE();
  2318  04E0  120A  118A  24C7  120A  118A  	fcall	_LCD_PULSE
  2319  04E5                     l1160:	
  2320                           
  2321                           ;LCD.c: 49:     delay_us(50);
  2322  04E5  3032               	movlw	50
  2323  04E6  120A  118A  24AE  120A  118A  	fcall	_delay_us
  2324  04EB                     l137:	
  2325  04EB  0008               	return
  2326  04EC                     __end_of_LCD_DATO:	
  2327                           
  2328                           	psect	text8
  2329  050D                     __ptext8:	
  2330 ;; *************** function _LCD_RH *****************
  2331 ;; Defined at:
  2332 ;;		line 61 in file "LCD.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    4
  2353 ;; This function calls:
  2354 ;;		_LCD_CONTROL
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _LCD_RH
  2362  050D                     _LCD_RH:	
  2363  050D                     l1332:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2366                           
  2367  050D  3002               	movlw	2
  2368  050E  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2369  0513                     l149:	
  2370  0513  0008               	return
  2371  0514                     __end_of_LCD_RH:	
  2372                           
  2373                           	psect	text9
  2374  0514                     __ptext9:	
  2375 ;; *************** function _LCD_CLEAR *****************
  2376 ;; Defined at:
  2377 ;;		line 52 in file "LCD.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    4
  2398 ;; This function calls:
  2399 ;;		_LCD_CONTROL
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _LCD_CLEAR
  2407  0514                     _LCD_CLEAR:	
  2408  0514                     l1330:	
  2409                           ;incstack = 0
  2410                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2411                           
  2412                           
  2413                           ;LCD.c: 53:     LCD_CONTROL(0x01);}
  2414  0514  3001               	movlw	1
  2415  0515  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2416  051A                     l140:	
  2417  051A  0008               	return
  2418  051B                     __end_of_LCD_CLEAR:	
  2419                           
  2420                           	psect	text10
  2421  0420                     __ptext10:	
  2422 ;; *************** function _INIT_LCD *****************
  2423 ;; Defined at:
  2424 ;;		line 20 in file "LCD.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    4
  2445 ;; This function calls:
  2446 ;;		_LCD_CONTROL
  2447 ;;		_delay_ms
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _INIT_LCD
  2455  0420                     _INIT_LCD:	
  2456  0420                     l1312:	
  2457                           ;incstack = 0
  2458                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2459                           
  2460                           
  2461                           ;LCD.c: 21:     TRISEbits.TRISE0 = 0;
  2462  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0422  1009               	bcf	9,0	;volatile
  2465                           
  2466                           ;LCD.c: 22:     TRISEbits.TRISE1 = 0;
  2467  0423  1089               	bcf	9,1	;volatile
  2468  0424                     l1314:	
  2469                           
  2470                           ;LCD.c: 23:     TRISD = 0b00000000;
  2471  0424  0188               	clrf	8	;volatile
  2472  0425                     l1316:	
  2473                           
  2474                           ;LCD.c: 24:     PORTEbits.RE0 = 0;
  2475  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0427  1009               	bcf	9,0	;volatile
  2478  0428                     l1318:	
  2479                           
  2480                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  2481  0428  1089               	bcf	9,1	;volatile
  2482                           
  2483                           ;LCD.c: 26:     PORTD = 0;
  2484  0429  0188               	clrf	8	;volatile
  2485  042A                     l1320:	
  2486                           
  2487                           ;LCD.c: 27:     delay_ms(50);
  2488  042A  3032               	movlw	50
  2489  042B  120A  118A  23F3  120A  118A  	fcall	_delay_ms
  2490  0430                     l1322:	
  2491                           
  2492                           ;LCD.c: 28:     LCD_CONTROL(0x02);
  2493  0430  3002               	movlw	2
  2494  0431  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2495  0436                     l1324:	
  2496                           
  2497                           ;LCD.c: 29:     LCD_CONTROL(0x38);
  2498  0436  3038               	movlw	56
  2499  0437  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2500  043C                     l1326:	
  2501                           
  2502                           ;LCD.c: 30:     LCD_CONTROL(0x0C);
  2503  043C  300C               	movlw	12
  2504  043D  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2505  0442                     l1328:	
  2506                           
  2507                           ;LCD.c: 31:     LCD_CONTROL(0x06);}
  2508  0442  3006               	movlw	6
  2509  0443  120A  118A  24EC  120A  118A  	fcall	_LCD_CONTROL
  2510  0448                     l128:	
  2511  0448  0008               	return
  2512  0449                     __end_of_INIT_LCD:	
  2513                           
  2514                           	psect	text11
  2515  04EC                     __ptext11:	
  2516 ;; *************** function _LCD_CONTROL *****************
  2517 ;; Defined at:
  2518 ;;		line 33 in file "LCD.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  dato            1    wreg     unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  dato            1    9[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0
  2535 ;;      Totals:         1       0       0       0       0
  2536 ;;Total ram usage:        1 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    3
  2539 ;; This function calls:
  2540 ;;		_LCD_PULSE
  2541 ;;		_delay_ms
  2542 ;; This function is called by:
  2543 ;;		_INIT_LCD
  2544 ;;		_LCD_CLEAR
  2545 ;;		_LCD_RH
  2546 ;;		_LCD_PRINT_WP
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _LCD_CONTROL
  2552  04EC                     _LCD_CONTROL:	
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2556                           ;LCD_CONTROL@dato stored from wreg
  2557  04EC  00F9               	movwf	LCD_CONTROL@dato
  2558  04ED                     l1162:	
  2559                           
  2560                           ;LCD.c: 34:     PORTEbits.RE0 = 0;
  2561  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2562  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2563  04EF  1009               	bcf	9,0	;volatile
  2564  04F0                     l1164:	
  2565                           
  2566                           ;LCD.c: 35:     PORTD = dato;
  2567  04F0  0879               	movf	LCD_CONTROL@dato,w
  2568  04F1  0088               	movwf	8	;volatile
  2569  04F2                     l1166:	
  2570                           
  2571                           ;LCD.c: 36:     LCD_PULSE();
  2572  04F2  120A  118A  24C7  120A  118A  	fcall	_LCD_PULSE
  2573  04F7                     l1168:	
  2574                           
  2575                           ;LCD.c: 37:     delay_ms(2);}
  2576  04F7  3002               	movlw	2
  2577  04F8  120A  118A  23F3  120A  118A  	fcall	_delay_ms
  2578  04FD                     l131:	
  2579  04FD  0008               	return
  2580  04FE                     __end_of_LCD_CONTROL:	
  2581                           
  2582                           	psect	text12
  2583  03F3                     __ptext12:	
  2584 ;; *************** function _delay_ms *****************
  2585 ;; Defined at:
  2586 ;;		line 17 in file "DELAYS.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dms             1    wreg     unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  dms             1    4[COMMON] unsigned char 
  2591 ;;  j               2    7[COMMON] int 
  2592 ;;  i               2    5[COMMON] int 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, btemp+1
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         5       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0
  2605 ;;      Totals:         6       0       0       0       0
  2606 ;;Total ram usage:        6 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;;		_INIT_LCD
  2614 ;;		_LCD_CONTROL
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _delay_ms
  2620  03F3                     _delay_ms:	
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  2624                           ;delay_ms@dms stored from wreg
  2625  03F3  00F4               	movwf	delay_ms@dms
  2626  03F4                     l1140:	
  2627                           
  2628                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++)
  2629  03F4  01F5               	clrf	delay_ms@i
  2630  03F5  01F6               	clrf	delay_ms@i+1
  2631  03F6  2C12               	goto	l91
  2632  03F7                     l1142:	
  2633                           
  2634                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}}
  2635  03F7  01F7               	clrf	delay_ms@j
  2636  03F8  01F8               	clrf	delay_ms@j+1
  2637  03F9                     l1148:	
  2638  03F9  3001               	movlw	1
  2639  03FA  07F7               	addwf	delay_ms@j,f
  2640  03FB  1803               	skipnc
  2641  03FC  0AF8               	incf	delay_ms@j+1,f
  2642  03FD  3000               	movlw	0
  2643  03FE  07F8               	addwf	delay_ms@j+1,f
  2644  03FF                     l1150:	
  2645  03FF  0878               	movf	delay_ms@j+1,w
  2646  0400  3A80               	xorlw	128
  2647  0401  00FF               	movwf	btemp+1
  2648  0402  3080               	movlw	128
  2649  0403  027F               	subwf	btemp+1,w
  2650  0404  1D03               	skipz
  2651  0405  2C08               	goto	u525
  2652  0406  30FF               	movlw	255
  2653  0407  0277               	subwf	delay_ms@j,w
  2654  0408                     u525:	
  2655  0408  1C03               	skipc
  2656  0409  2C0B               	goto	u521
  2657  040A  2C0C               	goto	u520
  2658  040B                     u521:	
  2659  040B  2BF9               	goto	l1148
  2660  040C                     u520:	
  2661  040C                     l1152:	
  2662  040C  3001               	movlw	1
  2663  040D  07F5               	addwf	delay_ms@i,f
  2664  040E  1803               	skipnc
  2665  040F  0AF6               	incf	delay_ms@i+1,f
  2666  0410  3000               	movlw	0
  2667  0411  07F6               	addwf	delay_ms@i+1,f
  2668  0412                     l91:	
  2669  0412  0876               	movf	delay_ms@i+1,w
  2670  0413  3A80               	xorlw	128
  2671  0414  00F3               	movwf	??_delay_ms
  2672  0415  3080               	movlw	128
  2673  0416  0273               	subwf	??_delay_ms,w
  2674  0417  1D03               	skipz
  2675  0418  2C1B               	goto	u535
  2676  0419  0874               	movf	delay_ms@dms,w
  2677  041A  0275               	subwf	delay_ms@i,w
  2678  041B                     u535:	
  2679  041B  1C03               	skipc
  2680  041C  2C1E               	goto	u531
  2681  041D  2C1F               	goto	u530
  2682  041E                     u531:	
  2683  041E  2BF7               	goto	l1142
  2684  041F                     u530:	
  2685  041F                     l96:	
  2686  041F  0008               	return
  2687  0420                     __end_of_delay_ms:	
  2688                           
  2689                           	psect	text13
  2690  04C7                     __ptext13:	
  2691 ;; *************** function _LCD_PULSE *****************
  2692 ;; Defined at:
  2693 ;;		line 39 in file "LCD.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    2
  2714 ;; This function calls:
  2715 ;;		_delay_us
  2716 ;; This function is called by:
  2717 ;;		_LCD_CONTROL
  2718 ;;		_LCD_DATO
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _LCD_PULSE
  2724  04C7                     _LCD_PULSE:	
  2725  04C7                     l1134:	
  2726                           ;incstack = 0
  2727                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  2728                           
  2729                           
  2730                           ;LCD.c: 40:     PORTEbits.RE1 = 1;
  2731  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2732  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2733  04C9  1489               	bsf	9,1	;volatile
  2734  04CA                     l1136:	
  2735                           
  2736                           ;LCD.c: 41:     delay_us(5);
  2737  04CA  3005               	movlw	5
  2738  04CB  120A  118A  24AE  120A  118A  	fcall	_delay_us
  2739  04D0                     l1138:	
  2740                           
  2741                           ;LCD.c: 42:     PORTEbits.RE1 = 0;
  2742  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2743  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2744  04D2  1089               	bcf	9,1	;volatile
  2745                           
  2746                           ;LCD.c: 43:     delay_us(5);}
  2747  04D3  3005               	movlw	5
  2748  04D4  120A  118A  24AE  120A  118A  	fcall	_delay_us
  2749  04D9                     l134:	
  2750  04D9  0008               	return
  2751  04DA                     __end_of_LCD_PULSE:	
  2752                           
  2753                           	psect	text14
  2754  04AE                     __ptext14:	
  2755 ;; *************** function _delay_us *****************
  2756 ;; Defined at:
  2757 ;;		line 22 in file "DELAYS.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  ams             1    wreg     unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  ams             1    4[COMMON] unsigned char 
  2762 ;;  j               2    5[COMMON] int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         3       0       0       0       0
  2774 ;;      Temps:          1       0       0       0       0
  2775 ;;      Totals:         4       0       0       0       0
  2776 ;;Total ram usage:        4 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    1
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_LCD_PULSE
  2783 ;;		_LCD_DATO
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _delay_us
  2789  04AE                     _delay_us:	
  2790                           
  2791                           ;incstack = 0
  2792                           ; Regs used in _delay_us: [wreg+status,2]
  2793                           ;delay_us@ams stored from wreg
  2794  04AE  00F4               	movwf	delay_us@ams
  2795  04AF                     l1130:	
  2796                           
  2797                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){
  2798  04AF  01F5               	clrf	delay_us@j
  2799  04B0  01F6               	clrf	delay_us@j+1
  2800  04B1  2CB9               	goto	l99
  2801  04B2                     l100:	
  2802  04B2  0000               	nop	;# 
  2803  04B3                     l1132:	
  2804  04B3  3001               	movlw	1
  2805  04B4  07F5               	addwf	delay_us@j,f
  2806  04B5  1803               	skipnc
  2807  04B6  0AF6               	incf	delay_us@j+1,f
  2808  04B7  3000               	movlw	0
  2809  04B8  07F6               	addwf	delay_us@j+1,f
  2810  04B9                     l99:	
  2811  04B9  0876               	movf	delay_us@j+1,w
  2812  04BA  3A80               	xorlw	128
  2813  04BB  00F3               	movwf	??_delay_us
  2814  04BC  3080               	movlw	128
  2815  04BD  0273               	subwf	??_delay_us,w
  2816  04BE  1D03               	skipz
  2817  04BF  2CC2               	goto	u515
  2818  04C0  0874               	movf	delay_us@ams,w
  2819  04C1  0275               	subwf	delay_us@j,w
  2820  04C2                     u515:	
  2821  04C2  1C03               	skipc
  2822  04C3  2CC5               	goto	u511
  2823  04C4  2CC6               	goto	u510
  2824  04C5                     u511:	
  2825  04C5  2CB2               	goto	l100
  2826  04C6                     u510:	
  2827  04C6                     l102:	
  2828  04C6  0008               	return
  2829  04C7                     __end_of_delay_us:	
  2830                           
  2831                           	psect	text15
  2832  04FE                     __ptext15:	
  2833 ;; *************** function _CONFIG_ADC *****************
  2834 ;; Defined at:
  2835 ;;		line 15 in file "ADC.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		None
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2849 ;;      Params:         0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _CONFIG_ADC
  2865  04FE                     _CONFIG_ADC:	
  2866  04FE                     l1334:	
  2867                           ;incstack = 0
  2868                           ; Regs used in _CONFIG_ADC: []
  2869                           
  2870                           
  2871                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  2872  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2873  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2874  0500  139F               	bcf	31,7	;volatile
  2875                           
  2876                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  2877  0501  129F               	bcf	31,5	;volatile
  2878                           
  2879                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  2880  0502  121F               	bcf	31,4	;volatile
  2881                           
  2882                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  2883  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0505  139F               	bcf	31,7	;volatile
  2886                           
  2887                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  2888  0506  171F               	bsf	31,6	;volatile
  2889                           
  2890                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  2891  0507  129F               	bcf	31,5	;volatile
  2892                           
  2893                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  2894  0508  121F               	bcf	31,4	;volatile
  2895                           
  2896                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  2897  0509  119F               	bcf	31,3	;volatile
  2898                           
  2899                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  2900  050A  111F               	bcf	31,2	;volatile
  2901                           
  2902                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  2903  050B  141F               	bsf	31,0	;volatile
  2904  050C                     l109:	
  2905                           ;ADC.c: 26:     return;
  2906                           
  2907  050C  0008               	return
  2908  050D                     __end_of_CONFIG_ADC:	
  2909                           
  2910                           	psect	text16
  2911  03C0                     __ptext16:	
  2912 ;; *************** function _isr *****************
  2913 ;; Defined at:
  2914 ;;		line 31 in file "main.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0
  2930 ;;      Temps:          3       0       0       0       0
  2931 ;;      Totals:         3       0       0       0       0
  2932 ;;Total ram usage:        3 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		Interrupt level 1
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           
  2942                           ;psect for function _isr
  2943  03C0                     _isr:	
  2944  03C0                     i1l1392:	
  2945                           
  2946                           ;main.c: 32:     if (INTCONbits.T0IF == 1){
  2947  03C0  1D0B               	btfss	11,2	;volatile
  2948  03C1  2BC3               	goto	u89_21
  2949  03C2  2BC4               	goto	u89_20
  2950  03C3                     u89_21:	
  2951  03C3  2BEC               	goto	i1l70
  2952  03C4                     u89_20:	
  2953  03C4                     i1l1394:	
  2954                           
  2955                           ;main.c: 33:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  2956  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2957  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2958  03C6  0835               	movf	_cambiante,w
  2959  03C7  1D03               	btfss	3,2
  2960  03C8  2BCA               	goto	u90_21
  2961  03C9  2BCB               	goto	u90_20
  2962  03CA                     u90_21:	
  2963  03CA  2BCC               	goto	i1l1398
  2964  03CB                     u90_20:	
  2965  03CB                     i1l1396:	
  2966  03CB  151F               	bsf	31,2	;volatile
  2967  03CC                     i1l1398:	
  2968                           
  2969                           ;main.c: 34:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  2970  03CC  0335               	decf	_cambiante,w
  2971  03CD  1D03               	btfss	3,2
  2972  03CE  2BD0               	goto	u91_21
  2973  03CF  2BD1               	goto	u91_20
  2974  03D0                     u91_21:	
  2975  03D0  2BD2               	goto	i1l1402
  2976  03D1                     u91_20:	
  2977  03D1                     i1l1400:	
  2978  03D1  111F               	bcf	31,2	;volatile
  2979  03D2                     i1l1402:	
  2980                           
  2981                           ;main.c: 35:         cambiante++;
  2982  03D2  3001               	movlw	1
  2983  03D3  00F0               	movwf	??_isr
  2984  03D4  0870               	movf	??_isr,w
  2985  03D5  07B5               	addwf	_cambiante,f
  2986                           
  2987                           ;main.c: 36:         sensor++;
  2988  03D6  3001               	movlw	1
  2989  03D7  00F0               	movwf	??_isr
  2990  03D8  0870               	movf	??_isr,w
  2991  03D9  07B1               	addwf	_sensor,f
  2992  03DA                     i1l1404:	
  2993                           
  2994                           ;main.c: 37:         if (cambiante > 1){cambiante = 0;}
  2995  03DA  3002               	movlw	2
  2996  03DB  0235               	subwf	_cambiante,w
  2997  03DC  1C03               	skipc
  2998  03DD  2BDF               	goto	u92_21
  2999  03DE  2BE0               	goto	u92_20
  3000  03DF                     u92_21:	
  3001  03DF  2BE1               	goto	i1l1408
  3002  03E0                     u92_20:	
  3003  03E0                     i1l1406:	
  3004  03E0  01B5               	clrf	_cambiante
  3005  03E1                     i1l1408:	
  3006                           
  3007                           ;main.c: 38:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  3008  03E1  189F               	btfsc	31,1	;volatile
  3009  03E2  2BE4               	goto	u93_21
  3010  03E3  2BE5               	goto	u93_20
  3011  03E4                     u93_21:	
  3012  03E4  2BE7               	goto	i1l69
  3013  03E5                     u93_20:	
  3014  03E5                     i1l1410:	
  3015  03E5  01B4               	clrf	_eADC
  3016  03E6  0AB4               	incf	_eADC,f
  3017  03E7                     i1l69:	
  3018                           
  3019                           ;main.c: 39:         INTCONbits.T0IF = 0;
  3020  03E7  110B               	bcf	11,2	;volatile
  3021  03E8                     i1l1412:	
  3022                           
  3023                           ;main.c: 40:         TMR0 = 130;
  3024  03E8  3082               	movlw	130
  3025  03E9  0081               	movwf	1	;volatile
  3026  03EA                     i1l1414:	
  3027                           
  3028                           ;main.c: 41:         eADC = 1;
  3029  03EA  01B4               	clrf	_eADC
  3030  03EB  0AB4               	incf	_eADC,f
  3031  03EC                     i1l70:	
  3032  03EC  0872               	movf	??_isr+2,w
  3033  03ED  008A               	movwf	10
  3034  03EE  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  3035  03EF  0083               	movwf	3
  3036  03F0  0EFE               	swapf	btemp,f
  3037  03F1  0E7E               	swapf	btemp,w
  3038  03F2  0009               	retfie
  3039  03F3                     __end_of_isr:	
  3040  007E                     btemp	set	126	;btemp
  3041  007E                     wtemp0	set	126
  3042                           
  3043                           	psect	intentry
  3044  0004                     __pintentry:	
  3045                           ;incstack = 0
  3046                           ; Regs used in _isr: [wreg+status,2+status,0]
  3047                           
  3048  0004                     interrupt_function:	
  3049  007E                     saved_w	set	btemp
  3050  0004  00FE               	movwf	btemp
  3051  0005  0E03               	swapf	3,w
  3052  0006  00F1               	movwf	??_isr+1
  3053  0007  080A               	movf	10,w
  3054  0008  00F2               	movwf	??_isr+2
  3055  0009  120A  118A  2BC0   	ljmp	_isr


Data Sizes:
    Strings     144
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     16      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_PRINT_WP
    _VAL->_LCD_PRINT_WP
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _LCD_RH->_LCD_CONTROL
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VAL
    _VAL->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11296
                                             15 BANK0      1     1      0
                         _CONFIG_ADC
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                                _VAL
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  7     6      1    6019
                                              8 BANK0      7     6      1
                       _LCD_PRINT_WP
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT_WP                                         7     2      5    4613
                                             10 COMMON     1     1      0
                                              0 BANK0      6     1      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (3) _LCD_PRINT                                            2     2      0     192
                                              8 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (4) _LCD_DATO                                             1     1      0     114
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     160
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     252
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_CONTROL                                          1     1      0     160
                                              9 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0      92
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _LCD_PULSE                                            0     0      0      46
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     4      0      46
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _VAL
     _LCD_PRINT_WP
       _LCD_CONTROL
         _LCD_PULSE
           _delay_us
         _delay_ms
       _LCD_PRINT
         _LCD_DATO
           _LCD_PULSE
             _delay_us
           _delay_us
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 08:27:29 2020

                       pc 0002               __CFG_CP$OFF 0000                        l82 0263  
                      l91 0412                        l96 041F                        l88 046C  
                      l99 04B9              ___awdiv@sign 0025                        fsr 0004  
                     l100 04B2                       l102 04C6                       l131 04FD  
                     l140 051A                       l109 050C                       l134 04D9  
                     l128 0448                       l137 04EB                       l146 04AD  
                     l156 048E                       l149 0513                       l165 00D5  
                     l423 0366                       l184 0168                       l436 03BF  
                     u510 04C6                       u511 04C5                       u520 040C  
                     u600 0333                       u521 040B                       u601 0332  
                     u530 041F              __CFG_CPD$OFF 0000                       u515 04C2  
                     u531 041E                       u540 04AD                       u620 0344  
                     u700 0394                       u525 0408                       u541 04AC  
                     u621 0343                       u701 0393                       u550 0475  
                     u710 039E                       u535 041B                       u551 0474  
                     u615 0334                       u711 039D                       u640 0358  
                     u560 0305                       u800 00AD                       u641 0357  
                     u625 0340                       u561 0304                       u801 00AC  
                     u650 035D                       u570 0310                       u730 03B1  
                     u810 00C4                       u651 035C                       u635 034C  
                     u571 030F                       u731 03B0                       u715 039A  
                     u811 00C3                       u580 0321                       u740 03B6  
                     u660 036C                       u820 00DB                       u581 0320  
                     u741 03B5                       u725 03A5                       u661 036B  
                     u821 00DA                       u670 0377                       u830 00E0  
                     u750 004D                       _VAL 001B                       u671 0376  
                     u831 00DF                       u751 004C                       u680 0382  
                     u840 00F7                       u760 0052                       u681 0381  
                     u841 00F6                       u761 0051                       u850 010F  
                     u770 0068                       u595 0325                       u851 010E  
                     u771 0067                       u860 0127                       u780 007F  
                     u940 0221                       u861 0126                       u781 007E  
                     u941 0220                       u870 013F                       u790 0096  
                     u950 0227                       u695 0386                       u871 013E  
                     u791 0095                       u951 0226                       u880 0157  
                     u960 0230                       u881 0156                       u961 022F  
                     u970 023B                       u971 023A                       u980 0240  
                     u981 023F                       u990 024E                       u991 024D  
                     _isr 03C0                       _sen 0030                       fsr0 0004  
            ___awmod@sign 0079              __CFG_LVP$OFF 0000                      ?_VAL 0028  
                    l1200 030C                      l1130 04AF                      l1210 0321  
                    l1202 0310                      l1132 04B3                      l1140 03F4  
                    l1220 0344                      l1212 0324                      l1204 0315  
                    l1300 0463                      l1134 04C7                      l1150 03FF  
                    l1142 03F7                      l1230 035D                      l1222 034A  
                    l1214 032B                      l1206 0319                      l1310 0468  
                    l1302 0464                      l1136 04CA                      l1152 040C  
                    l1320 042A                      l1312 0420                      l1160 04E5  
                    l1232 0362                      l1224 034B                      l1216 032F  
                    l1208 031B                      l1240 036C                      l1304 0465  
                    l1138 04D0                      l1162 04ED                      l1322 0430  
                    l1314 0424                      l1330 0514                      l1154 04DB  
                    l1170 0490                      l1226 0352                      l1218 0333  
                    l1250 0382                      l1242 0371                      l1306 0466  
                    l1148 03F9                      l1164 04F0                      l1324 0436  
                    l1316 0425                      l1332 050D                      l1156 04DE  
                    l1172 0491                      l1180 0475                      l1228 0358  
                    l1260 039E                      l1252 0385                      l1244 0373  
                    l1236 0367                      l1340 0048                      l1308 0467  
                    l1420 0173                      l1334 04FE                      l1166 04F2  
                    l1326 043C                      l1318 0428                      l1158 04E0  
                    l1174 049D                      l1190 0486                      l1182 047B  
                    l1270 03BB                      l1262 03A4                      l1254 038C  
                    l1246 0377                      l1238 0368                      l1350 0079  
                    l1342 004D                      l1430 01A7                      l1422 0178  
                    l1168 04F7                      l1328 0442                      l1176 04A1  
                    l1184 047B                      l1192 02FE                      l1264 03AB  
                    l1256 0390                      l1248 037C                      l1360 00AD  
                    l1352 007F                      l1344 0052                      l1336 001E  
                    l1280 0455                      l1440 01CF                      l1432 01AD  
                    l1424 017D                      l1416 0169                      l1178 046D  
                    l1194 0301                      l1258 0394                      l1266 03B1  
                    l1370 00E0                      l1362 00BE                      l1354 0090  
                    l1346 0063                      l1338 001E                      l1290 045C  
                    l1282 0456                      l1274 0449                      l1450 0203  
                    l1442 01E1                      l1434 01B2                      l1426 018F  
                    l1418 016E                      l1188 0480                      l1196 0305  
                    l1268 03B6                      l1380 0121                      l1372 00F2  
                    l1364 00C4                      l1356 0096                      l1348 0068  
                    l1292 045D                      l1284 0457                      l1276 0451  
                    l1460 0227                      l1452 0215                      l1444 01E7  
                    l1436 01B7                      l1428 0195                      l1198 030A  
                    l1390 0157                      l1382 0127                      l1374 00F7  
                    l1358 00A7                      l1366 00D6                      l1294 045E  
                    l1286 0458                      l1278 0452                      l1470 023B  
                    l1462 022B                      l1454 021A                      l1446 01EC  
                    l1438 01C9                      l1384 0139                      l1376 0109  
                    l1368 00DB                      l1296 0461                      l1288 045B  
                    l1480 025C                      l1472 0240                      l1464 0230  
                    l1456 0221                      l1448 01F1                      l1386 013F  
                    l1378 010F                      l1298 0462                      l1482 0262  
                    l1474 0247                      l1466 0234                      l1458 0222  
                    l1388 0151                      l1476 024E                      l1468 0235  
                    l1478 0256                      ?_isr 0070                      STR_1 02A1  
                    STR_2 02C3                      STR_3 02B2                      STR_4 027F  
                    STR_5 026E                      STR_6 0290                      STR_7 02D4  
                    STR_8 02DB                      STR_9 02E2                      u1000 0262  
                    u1001 0261                      i1l70 03EC                      i1l69 03E7  
      __size_of_LCD_CLEAR 0007                      _TMR0 0001                      _eADC 0034  
            __CFG_WRT$OFF 0000            ??_LCD_PRINT_WP 007A        __size_of_LCD_PRINT 001F  
      __size_of_LCD_PULSE 0013                      _main 0169                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F  
                   ??_VAL 0029          __end_of_LCD_DATO 04EC                     ??_isr 0070  
        __end_of_INIT_LCD 0449                     ?_main 0070           __end_of___awdiv 0367  
                   STR_10 02E9                     STR_11 02F0                     STR_12 02F7  
                   STR_13 02D4                     STR_14 02DB                     STR_15 02E2  
                   STR_16 02E9                     STR_17 02F0             __CFG_WDTE$OFF 0000  
                   STR_18 02F7           __end_of___awmod 03C0             LCD_PRINT@data 0079  
                   _ANSEL 0188           ___awdiv@divisor 0020           ___awdiv@counter 0024  
           LCD_PRINT_WP@x 0020             LCD_PRINT_WP@y 0022                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     u90_20 03CB  
                   u90_21 03CA                     u91_20 03D1                     u91_21 03D0  
                   u92_20 03E0                     u92_21 03DF                     u93_20 03E5  
                   u93_21 03E4                     u89_20 03C4                     u89_21 03C3  
          __CFG_FCMEN$OFF 0000                     _setup 0449            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0268  
       __end_of_LCD_CLEAR 051B         __end_of_LCD_PRINT 04AE                    ??_main 002F  
       __end_of_LCD_PULSE 04DA                    _ADCAN0 0033                    _ADCAN1 0032  
                  _ADRESH 001E          ___awdiv@dividend 0022                    ?_setup 0070  
                  _ANSELH 0189                    _LCD_RH 050D                    i1l1400 03D1  
                  i1l1410 03E5                    i1l1402 03D2                    i1l1412 03E8  
                  i1l1404 03DA                    i1l1414 03EA                    i1l1406 03E0  
                  i1l1408 03E1                    i1l1392 03C0                    i1l1394 03C4  
                  i1l1396 03CB                    i1l1398 03CC      __size_of_LCD_CONTROL 0012  
        __end_of_delay_ms 0420          __end_of_delay_us 04C7            __CFG_PWRTE$OFF 0000  
               ??___awdiv 007A                 ??___awmod 0077          ___awdiv@quotient 0026  
         ___awmod@divisor 0073                    _sensor 0031           ___awmod@counter 0078  
    __end_of_LCD_PRINT_WP 048F              ??_CONFIG_ADC 0073                    saved_w 007E  
               ?_LCD_DATO 0070   __end_of__initialization 0017                 ?_INIT_LCD 0070  
          __pcstackCOMMON 0070        __end_of_CONFIG_ADC 050D             __end_of_setup 046D  
          _OPTION_REGbits 0081                   ??_setup 0073                __pbssBANK0 0030  
                 ?_LCD_RH 0070                ??_LCD_DATO 0077                ??_INIT_LCD 007A  
              __pmaintext 0169                 VAL@column 0028                __pintentry 0004  
               VAL@result 002D                 ?_delay_ms 0070                 ?_delay_us 0070  
              __stringtab 0268           __size_of_LCD_RH 0007               VAL@unidades 002E  
   __size_of_LCD_PRINT_WP 0022                   ___awdiv 02FE                   ___awmod 0367  
                 __ptext1 0449                   __ptext2 001B                   __ptext3 0367  
                 __ptext4 02FE                   __ptext5 046D                   __ptext6 048F  
                 __ptext7 04DA                   __ptext8 050D                   __ptext9 0514  
            __size_of_VAL 014E              __size_of_isr 0033                 _LCD_CLEAR 0514  
        ___awmod@dividend 0075                 _LCD_PRINT 048F                ??_delay_ms 0073  
               _LCD_PULSE 04C7                ??_delay_us 0073      end_of_initialization 0017  
            _LCD_PRINT_WP 046D         LCD_PRINT_WP@frase 0024                 _PORTEbits 0009  
              ?_LCD_CLEAR 0070                ?_LCD_PRINT 0070                ?_LCD_PULSE 0070  
               _TRISEbits 0089             ??_LCD_CONTROL 0079            __end_of_LCD_RH 0514  
       __size_of_LCD_DATO 0012         __size_of_INIT_LCD 0029       start_initialization 000F  
             __end_of_VAL 0169               __end_of_isr 03F3                  ??_LCD_RH 007A  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_LCD_CONTROL 04FE               ??_LCD_CLEAR 007A  
               ___latbits 0002               ??_LCD_PRINT 0078               ??_LCD_PULSE 0077  
           __pcstackBANK0 0020         __size_of_delay_ms 002D         __size_of_delay_us 0019  
               _cambiante 0035                  ?___awdiv 0020                  ?___awmod 0073  
               __pstrings 0268            __size_of_setup 0024                  _LCD_DATO 04DA  
             _LCD_CONTROL 04EC         interrupt_function 0004                 delay_ms@i 0075  
               delay_ms@j 0077                  _INIT_LCD 0420                 delay_us@j 0075  
              _ADCON0bits 001F               __stringbase 026D                _ADCON1bits 009F  
         LCD_DATO@comando 0077      LCD_PRINT_WP@location 0025          __size_of___awdiv 0069  
        __size_of___awmod 0059        __end_of__stringtab 026E                _CONFIG_ADC 04FE  
                _delay_ms 03F3                  _delay_us 04AE                  __ptext10 0420  
                __ptext11 04EC                  __ptext12 03F3                  __ptext13 04C7  
                __ptext14 04AE                  __ptext15 04FE                  __ptext16 03C0  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 00FF               delay_ms@dms 0074  
             delay_us@ams 0074                _INTCONbits 000B                  intlevel1 0000  
         LCD_CONTROL@dato 0079                 stringcode 0268               ?_CONFIG_ADC 0070  
                stringdir 0268                  stringtab 0268              ?_LCD_CONTROL 0070  
           ?_LCD_PRINT_WP 0020  
