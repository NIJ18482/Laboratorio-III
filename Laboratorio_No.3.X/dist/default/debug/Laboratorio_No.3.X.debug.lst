

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 07:43:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0009                     _PORTEbits	set	9
   455  0009                     _PORTE	set	9
   456  0008                     _PORTD	set	8
   457  0007                     _PORTC	set	7
   458  0006                     _PORTB	set	6
   459  001E                     _ADRESH	set	30
   460  0001                     _TMR0	set	1
   461  001F                     _ADCON0bits	set	31
   462  000B                     _INTCONbits	set	11
   463  0089                     _TRISEbits	set	137
   464  009F                     _ADCON1bits	set	159
   465  0081                     _OPTION_REGbits	set	129
   466  0089                     _TRISE	set	137
   467  0088                     _TRISD	set	136
   468  0087                     _TRISC	set	135
   469  0086                     _TRISB	set	134
   470  0085                     _TRISA	set	133
   471  0189                     _ANSELH	set	393
   472  0188                     _ANSEL	set	392
   473                           
   474                           	psect	strings
   475  000F                     __pstrings:	
   476  000F                     stringtab:	
   477  000F                     __stringtab:	
   478  000F                     stringcode:	
   479                           ;	String table - string pointers are 1 byte each
   480                           
   481  000F                     stringdir:	
   482  000F  3000               	movlw	high stringdir
   483  0010  008A               	movwf	10
   484  0011  0804               	movf	4,w
   485  0012  0A84               	incf	4,f
   486  0013  0782               	addwf	2,f
   487  0014                     __stringbase:	
   488  0014  3400               	retlw	0
   489  0015                     __end_of__stringtab:	
   490  0015                     STR_5:	
   491  0015  3420               	retlw	32	;' '
   492  0016  3453               	retlw	83	;'S'
   493  0017  3445               	retlw	69	;'E'
   494  0018  344E               	retlw	78	;'N'
   495  0019  342E               	retlw	46	;'.'
   496  001A  3431               	retlw	49	;'1'
   497  001B  3420               	retlw	32	;' '
   498  001C  3453               	retlw	83	;'S'
   499  001D  3445               	retlw	69	;'E'
   500  001E  344E               	retlw	78	;'N'
   501  001F  342E               	retlw	46	;'.'
   502  0020  3432               	retlw	50	;'2'
   503  0021  3420               	retlw	32	;' '
   504  0022  3443               	retlw	67	;'C'
   505  0023  3454               	retlw	84	;'T'
   506  0024  3420               	retlw	32	;' '
   507  0025  3400               	retlw	0
   508  0026                     STR_4:	
   509  0026  342D               	retlw	45	;'-'
   510  0027  344D               	retlw	77	;'M'
   511  0028  3450               	retlw	80	;'P'
   512  0029  344C               	retlw	76	;'L'
   513  002A  3441               	retlw	65	;'A'
   514  002B  3442               	retlw	66	;'B'
   515  002C  3458               	retlw	88	;'X'
   516  002D  342D               	retlw	45	;'-'
   517  002E  3458               	retlw	88	;'X'
   518  002F  3443               	retlw	67	;'C'
   519  0030  3438               	retlw	56	;'8'
   520  0031  342D               	retlw	45	;'-'
   521  0032  3450               	retlw	80	;'P'
   522  0033  3449               	retlw	73	;'I'
   523  0034  3443               	retlw	67	;'C'
   524  0035  342D               	retlw	45	;'-'
   525  0036  3400               	retlw	0
   526  0037                     STR_6:	
   527  0037  342D               	retlw	45	;'-'
   528  0038  3430               	retlw	48	;'0'
   529  0039  342E               	retlw	46	;'.'
   530  003A  3430               	retlw	48	;'0'
   531  003B  3430               	retlw	48	;'0'
   532  003C  3456               	retlw	86	;'V'
   533  003D  342D               	retlw	45	;'-'
   534  003E  3430               	retlw	48	;'0'
   535  003F  342E               	retlw	46	;'.'
   536  0040  3430               	retlw	48	;'0'
   537  0041  3430               	retlw	48	;'0'
   538  0042  3456               	retlw	86	;'V'
   539  0043  342D               	retlw	45	;'-'
   540  0044  3430               	retlw	48	;'0'
   541  0045  3430               	retlw	48	;'0'
   542  0046  3430               	retlw	48	;'0'
   543  0047  3400               	retlw	0
   544  0048                     STR_1:	
   545  0048  344C               	retlw	76	;'L'
   546  0049  3441               	retlw	65	;'A'
   547  004A  3442               	retlw	66	;'B'
   548  004B  344F               	retlw	79	;'O'
   549  004C  3452               	retlw	82	;'R'
   550  004D  3441               	retlw	65	;'A'
   551  004E  3454               	retlw	84	;'T'
   552  004F  344F               	retlw	79	;'O'
   553  0050  3452               	retlw	82	;'R'
   554  0051  3449               	retlw	73	;'I'
   555  0052  344F               	retlw	79	;'O'
   556  0053  3420               	retlw	32	;' '
   557  0054  344E               	retlw	78	;'N'
   558  0055  346F               	retlw	111	;'o'
   559  0056  342E               	retlw	46	;'.'
   560  0057  3433               	retlw	51	;'3'
   561  0058  3400               	retlw	0
   562  0059                     STR_3:	
   563  0059  344D               	retlw	77	;'M'
   564  005A  3441               	retlw	65	;'A'
   565  005B  344E               	retlw	78	;'N'
   566  005C  3445               	retlw	69	;'E'
   567  005D  344A               	retlw	74	;'J'
   568  005E  344F               	retlw	79	;'O'
   569  005F  3420               	retlw	32	;' '
   570  0060  3450               	retlw	80	;'P'
   571  0061  3441               	retlw	65	;'A'
   572  0062  344E               	retlw	78	;'N'
   573  0063  3445               	retlw	69	;'E'
   574  0064  344C               	retlw	76	;'L'
   575  0065  3420               	retlw	32	;' '
   576  0066  344C               	retlw	76	;'L'
   577  0067  3443               	retlw	67	;'C'
   578  0068  3444               	retlw	68	;'D'
   579  0069  3400               	retlw	0
   580  006A                     STR_2:	
   581  006A  344C               	retlw	76	;'L'
   582  006B  3475               	retlw	117	;'u'
   583  006C  3469               	retlw	105	;'i'
   584  006D  3473               	retlw	115	;'s'
   585  006E  3420               	retlw	32	;' '
   586  006F  344E               	retlw	78	;'N'
   587  0070  342E               	retlw	46	;'.'
   588  0071  3420               	retlw	32	;' '
   589  0072  3431               	retlw	49	;'1'
   590  0073  3438               	retlw	56	;'8'
   591  0074  3434               	retlw	52	;'4'
   592  0075  3438               	retlw	56	;'8'
   593  0076  3432               	retlw	50	;'2'
   594  0077  3455               	retlw	85	;'U'
   595  0078  3456               	retlw	86	;'V'
   596  0079  3447               	retlw	71	;'G'
   597  007A  3400               	retlw	0
   598  007B                     STR_7:	
   599  007B  342D               	retlw	45	;'-'
   600  007C  3430               	retlw	48	;'0'
   601  007D  342E               	retlw	46	;'.'
   602  007E  3430               	retlw	48	;'0'
   603  007F  3430               	retlw	48	;'0'
   604  0080  3456               	retlw	86	;'V'
   605  0081  3400               	retlw	0
   606  0082                     STR_8:	
   607  0082  342D               	retlw	45	;'-'
   608  0083  3431               	retlw	49	;'1'
   609  0084  342E               	retlw	46	;'.'
   610  0085  3430               	retlw	48	;'0'
   611  0086  3430               	retlw	48	;'0'
   612  0087  3456               	retlw	86	;'V'
   613  0088  3400               	retlw	0
   614  0089                     STR_9:	
   615  0089  342D               	retlw	45	;'-'
   616  008A  3432               	retlw	50	;'2'
   617  008B  342E               	retlw	46	;'.'
   618  008C  3430               	retlw	48	;'0'
   619  008D  3430               	retlw	48	;'0'
   620  008E  3456               	retlw	86	;'V'
   621  008F  3400               	retlw	0
   622  0090                     STR_10:	
   623  0090  342D               	retlw	45	;'-'
   624  0091  3433               	retlw	51	;'3'
   625  0092  342E               	retlw	46	;'.'
   626  0093  3430               	retlw	48	;'0'
   627  0094  3430               	retlw	48	;'0'
   628  0095  3456               	retlw	86	;'V'
   629  0096  3400               	retlw	0
   630  0097                     STR_11:	
   631  0097  342D               	retlw	45	;'-'
   632  0098  3434               	retlw	52	;'4'
   633  0099  342E               	retlw	46	;'.'
   634  009A  3430               	retlw	48	;'0'
   635  009B  3430               	retlw	48	;'0'
   636  009C  3456               	retlw	86	;'V'
   637  009D  3400               	retlw	0
   638  009E                     STR_12:	
   639  009E  342D               	retlw	45	;'-'
   640  009F  3435               	retlw	53	;'5'
   641  00A0  342E               	retlw	46	;'.'
   642  00A1  3430               	retlw	48	;'0'
   643  00A2  3430               	retlw	48	;'0'
   644  00A3  3456               	retlw	86	;'V'
   645  00A4  3400               	retlw	0
   646  007B                     
   647                           ; #config settings
   648  0000                     
   649                           	psect	cinit
   650  07F5                     start_initialization:	
   651  07F5                     __initialization:	
   652                           
   653                           ; Clear objects allocated to COMMON
   654  07F5  01FA               	clrf	__pbssCOMMON& (0+127)
   655                           
   656                           ; Clear objects allocated to BANK0
   657  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   658  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   659  07F8  01B2               	clrf	__pbssBANK0& (0+127)
   660  07F9  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   661  07FA  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   662  07FB  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   663  07FC                     end_of_initialization:	
   664                           ;End of C runtime variable initialization code
   665                           
   666  07FC                     __end_of__initialization:	
   667  07FC  0183               	clrf	3
   668  07FD  120A  118A  2DC5   	ljmp	_main	;jump to C main() function
   669                           
   670                           	psect	bssCOMMON
   671  007A                     __pbssCOMMON:	
   672  007A                     _CADENA:	
   673  007A                     	ds	1
   674                           
   675                           	psect	bssBANK0
   676  0032                     __pbssBANK0:	
   677  0032                     _ADCAN1:	
   678  0032                     	ds	1
   679  0033                     _ADCAN0:	
   680  0033                     	ds	1
   681  0034                     _eADC:	
   682  0034                     	ds	1
   683  0035                     _cambiante:	
   684  0035                     	ds	1
   685                           
   686                           	psect	cstackCOMMON
   687  0071                     __pcstackCOMMON:	
   688  0071                     ?_setup:	
   689  0071                     ?_INIT_LCD:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0071                     ?_LCD_CLEAR:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0071                     ?_LCD_RH:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0071                     ?_delay_ms:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0071                     ?_CONFIG_ADC:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0071                     ?_LCD_CONTROL:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0071                     ?_LCD_PULSE:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0071                     ?_isr:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0071                     ??_isr:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0071                     ?_main:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0071                     ?_delay_us:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0071                     ?_LCD_DATO:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0071                     ?_LCD_PRINT:	
   726                           ; 1 bytes @ 0x0
   727                           
   728                           
   729                           ; 1 bytes @ 0x0
   730  0071                     	ds	3
   731  0074                     ??_setup:	
   732  0074                     ??_delay_ms:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0074                     ??_CONFIG_ADC:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0074                     ??_delay_us:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0074                     ?___awmod:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0074                     ___awmod@divisor:	
   745                           ; 2 bytes @ 0x3
   746                           
   747                           
   748                           ; 2 bytes @ 0x3
   749  0074                     	ds	1
   750  0075                     delay_ms@dms:	
   751  0075                     delay_us@ams:	
   752                           ; 1 bytes @ 0x4
   753                           
   754                           
   755                           ; 1 bytes @ 0x4
   756  0075                     	ds	1
   757  0076                     delay_ms@i:	
   758  0076                     delay_us@j:	
   759                           ; 2 bytes @ 0x5
   760                           
   761  0076                     ___awmod@dividend:	
   762                           ; 2 bytes @ 0x5
   763                           
   764                           
   765                           ; 2 bytes @ 0x5
   766  0076                     	ds	2
   767  0078                     ??_LCD_PULSE:	
   768  0078                     ??_LCD_DATO:	
   769                           ; 1 bytes @ 0x7
   770                           
   771  0078                     ??___awmod:	
   772                           ; 1 bytes @ 0x7
   773                           
   774  0078                     LCD_DATO@comando:	
   775                           ; 1 bytes @ 0x7
   776                           
   777  0078                     delay_ms@j:	
   778                           ; 1 bytes @ 0x7
   779                           
   780                           
   781                           ; 2 bytes @ 0x7
   782  0078                     	ds	1
   783  0079                     ??_LCD_PRINT:	
   784  0079                     ??___awdiv:	
   785                           ; 1 bytes @ 0x8
   786                           
   787                           
   788                           ; 1 bytes @ 0x8
   789  0079                     	ds	1
   790  007A                     ??_INIT_LCD:	
   791  007A                     ??_LCD_CLEAR:	
   792                           ; 1 bytes @ 0x9
   793                           
   794  007A                     ??_LCD_RH:	
   795                           ; 1 bytes @ 0x9
   796                           
   797  007A                     ??_LCD_CONTROL:	
   798                           ; 1 bytes @ 0x9
   799                           
   800                           
   801                           	psect	cstackBANK0
   802  0020                     __pcstackBANK0:	
   803                           ; 1 bytes @ 0x9
   804                           
   805  0020                     LCD_CONTROL@dato:	
   806  0020                     LCD_PRINT@data:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0020                     ___awmod@counter:	
   810                           ; 1 bytes @ 0x0
   811                           
   812                           
   813                           ; 1 bytes @ 0x0
   814  0020                     	ds	1
   815  0021                     ?_LCD_PRINT_WP:	
   816  0021                     ___awmod@sign:	
   817                           ; 1 bytes @ 0x1
   818                           
   819  0021                     LCD_PRINT_WP@x:	
   820                           ; 1 bytes @ 0x1
   821                           
   822                           
   823                           ; 2 bytes @ 0x1
   824  0021                     	ds	1
   825  0022                     ?___awdiv:	
   826  0022                     ___awdiv@divisor:	
   827                           ; 2 bytes @ 0x2
   828                           
   829                           
   830                           ; 2 bytes @ 0x2
   831  0022                     	ds	1
   832  0023                     LCD_PRINT_WP@y:	
   833                           
   834                           ; 2 bytes @ 0x3
   835  0023                     	ds	1
   836  0024                     ___awdiv@dividend:	
   837                           
   838                           ; 2 bytes @ 0x4
   839  0024                     	ds	1
   840  0025                     LCD_PRINT_WP@frase:	
   841                           
   842                           ; 1 bytes @ 0x5
   843  0025                     	ds	1
   844  0026                     ??_LCD_PRINT_WP:	
   845  0026                     ___awdiv@counter:	
   846                           ; 1 bytes @ 0x6
   847                           
   848                           
   849                           ; 1 bytes @ 0x6
   850  0026                     	ds	1
   851  0027                     LCD_PRINT_WP@location:	
   852  0027                     ___awdiv@sign:	
   853                           ; 1 bytes @ 0x7
   854                           
   855                           
   856                           ; 1 bytes @ 0x7
   857  0027                     	ds	1
   858  0028                     ___awdiv@quotient:	
   859                           
   860                           ; 2 bytes @ 0x8
   861  0028                     	ds	2
   862  002A                     ?_VAL:	
   863  002A                     VAL@column:	
   864                           ; 1 bytes @ 0xA
   865                           
   866                           
   867                           ; 1 bytes @ 0xA
   868  002A                     	ds	1
   869  002B                     ??_VAL:	
   870                           
   871                           ; 1 bytes @ 0xB
   872  002B                     	ds	4
   873  002F                     VAL@result:	
   874                           
   875                           ; 1 bytes @ 0xF
   876  002F                     	ds	1
   877  0030                     VAL@unidades:	
   878                           
   879                           ; 1 bytes @ 0x10
   880  0030                     	ds	1
   881  0031                     ??_main:	
   882                           
   883                           ; 1 bytes @ 0x11
   884  0031                     	ds	1
   885                           
   886                           	psect	maintext
   887  05C5                     __pmaintext:	
   888 ;;
   889 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   890 ;;
   891 ;; *************** function _main *****************
   892 ;; Defined at:
   893 ;;		line 42 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : B00/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       1       0       0       0
   910 ;;      Totals:         0       1       0       0       0
   911 ;;Total ram usage:        1 bytes
   912 ;; Hardware stack levels required when called:    7
   913 ;; This function calls:
   914 ;;		_CONFIG_ADC
   915 ;;		_INIT_LCD
   916 ;;		_LCD_CLEAR
   917 ;;		_LCD_PRINT_WP
   918 ;;		_LCD_RH
   919 ;;		_VAL
   920 ;;		_delay_ms
   921 ;;		_setup
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _main
   929  05C5                     _main:	
   930  05C5                     l1676:	
   931                           ;incstack = 0
   932                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   933                           
   934                           
   935                           ;main.c: 43:     setup();
   936  05C5  120A  118A  2458  120A  118A  	fcall	_setup
   937  05CA                     l1678:	
   938                           
   939                           ;main.c: 44:     INIT_LCD();
   940  05CA  120A  118A  247C  120A  118A  	fcall	_INIT_LCD
   941  05CF                     l1680:	
   942                           
   943                           ;main.c: 45:     LCD_CLEAR();
   944  05CF  120A  118A  23A6  120A  118A  	fcall	_LCD_CLEAR
   945  05D4                     l1682:	
   946                           
   947                           ;main.c: 46:     LCD_RH();
   948  05D4  120A  118A  23AD  120A  118A  	fcall	_LCD_RH
   949  05D9                     l1684:	
   950                           
   951                           ;main.c: 47:     LCD_PRINT_WP(0,1,"LABORATORIO No.3");
   952  05D9  3000               	movlw	0
   953  05DA  1283               	bcf	3,5	;RP0=0, select bank0
   954  05DB  1303               	bcf	3,6	;RP1=0, select bank0
   955  05DC  00A1               	movwf	LCD_PRINT_WP@x
   956  05DD  00A2               	movwf	LCD_PRINT_WP@x+1
   957  05DE  3001               	movlw	1
   958  05DF  00A3               	movwf	LCD_PRINT_WP@y
   959  05E0  3000               	movlw	0
   960  05E1  00A4               	movwf	LCD_PRINT_WP@y+1
   961  05E2  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   962  05E3  00B1               	movwf	??_main
   963  05E4  0831               	movf	??_main,w
   964  05E5  00A5               	movwf	LCD_PRINT_WP@frase
   965  05E6  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
   966  05EB                     l1686:	
   967                           
   968                           ;main.c: 48:     delay_ms(150);
   969  05EB  3096               	movlw	150
   970  05EC  120A  118A  24A5  120A  118A  	fcall	_delay_ms
   971  05F1                     l1688:	
   972                           
   973                           ;main.c: 49:     LCD_PRINT_WP(0,2,"Luis N. 18482UVG");
   974  05F1  3000               	movlw	0
   975  05F2  1283               	bcf	3,5	;RP0=0, select bank0
   976  05F3  1303               	bcf	3,6	;RP1=0, select bank0
   977  05F4  00A1               	movwf	LCD_PRINT_WP@x
   978  05F5  00A2               	movwf	LCD_PRINT_WP@x+1
   979  05F6  3002               	movlw	2
   980  05F7  00A3               	movwf	LCD_PRINT_WP@y
   981  05F8  3000               	movlw	0
   982  05F9  00A4               	movwf	LCD_PRINT_WP@y+1
   983  05FA  3056               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   984  05FB  00B1               	movwf	??_main
   985  05FC  0831               	movf	??_main,w
   986  05FD  00A5               	movwf	LCD_PRINT_WP@frase
   987  05FE  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
   988  0603                     l1690:	
   989                           
   990                           ;main.c: 50:     delay_ms(150);
   991  0603  3096               	movlw	150
   992  0604  120A  118A  24A5  120A  118A  	fcall	_delay_ms
   993  0609                     l1692:	
   994                           
   995                           ;main.c: 51:     LCD_CLEAR();
   996  0609  120A  118A  23A6  120A  118A  	fcall	_LCD_CLEAR
   997  060E                     l1694:	
   998                           
   999                           ;main.c: 52:     LCD_RH();
  1000  060E  120A  118A  23AD  120A  118A  	fcall	_LCD_RH
  1001  0613                     l1696:	
  1002                           
  1003                           ;main.c: 53:     LCD_PRINT_WP(0,1,"MANEJO PANEL LCD");
  1004  0613  3000               	movlw	0
  1005  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0616  00A1               	movwf	LCD_PRINT_WP@x
  1008  0617  00A2               	movwf	LCD_PRINT_WP@x+1
  1009  0618  3001               	movlw	1
  1010  0619  00A3               	movwf	LCD_PRINT_WP@y
  1011  061A  3000               	movlw	0
  1012  061B  00A4               	movwf	LCD_PRINT_WP@y+1
  1013  061C  3045               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1014  061D  00B1               	movwf	??_main
  1015  061E  0831               	movf	??_main,w
  1016  061F  00A5               	movwf	LCD_PRINT_WP@frase
  1017  0620  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1018  0625                     l1698:	
  1019                           
  1020                           ;main.c: 54:     delay_ms(150);
  1021  0625  3096               	movlw	150
  1022  0626  120A  118A  24A5  120A  118A  	fcall	_delay_ms
  1023  062B                     l1700:	
  1024                           
  1025                           ;main.c: 55:     LCD_PRINT_WP(0,2,"-MPLABX-XC8-PIC-");
  1026  062B  3000               	movlw	0
  1027  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1028  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1029  062E  00A1               	movwf	LCD_PRINT_WP@x
  1030  062F  00A2               	movwf	LCD_PRINT_WP@x+1
  1031  0630  3002               	movlw	2
  1032  0631  00A3               	movwf	LCD_PRINT_WP@y
  1033  0632  3000               	movlw	0
  1034  0633  00A4               	movwf	LCD_PRINT_WP@y+1
  1035  0634  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1036  0635  00B1               	movwf	??_main
  1037  0636  0831               	movf	??_main,w
  1038  0637  00A5               	movwf	LCD_PRINT_WP@frase
  1039  0638  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1040  063D                     l1702:	
  1041                           
  1042                           ;main.c: 56:     delay_ms(150);
  1043  063D  3096               	movlw	150
  1044  063E  120A  118A  24A5  120A  118A  	fcall	_delay_ms
  1045  0643                     l1704:	
  1046                           
  1047                           ;main.c: 57:     LCD_CLEAR();
  1048  0643  120A  118A  23A6  120A  118A  	fcall	_LCD_CLEAR
  1049  0648                     l1706:	
  1050                           
  1051                           ;main.c: 58:     LCD_RH();
  1052  0648  120A  118A  23AD  120A  118A  	fcall	_LCD_RH
  1053  064D                     l1708:	
  1054                           
  1055                           ;main.c: 59:     LCD_PRINT_WP(0,1," SEN.1 SEN.2 CT ");
  1056  064D  3000               	movlw	0
  1057  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1058  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0650  00A1               	movwf	LCD_PRINT_WP@x
  1060  0651  00A2               	movwf	LCD_PRINT_WP@x+1
  1061  0652  3001               	movlw	1
  1062  0653  00A3               	movwf	LCD_PRINT_WP@y
  1063  0654  3000               	movlw	0
  1064  0655  00A4               	movwf	LCD_PRINT_WP@y+1
  1065  0656  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1066  0657  00B1               	movwf	??_main
  1067  0658  0831               	movf	??_main,w
  1068  0659  00A5               	movwf	LCD_PRINT_WP@frase
  1069  065A  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1070  065F                     l1710:	
  1071                           
  1072                           ;main.c: 60:     LCD_PRINT_WP(0,2,"-0.00V-0.00V-000");
  1073  065F  3000               	movlw	0
  1074  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0662  00A1               	movwf	LCD_PRINT_WP@x
  1077  0663  00A2               	movwf	LCD_PRINT_WP@x+1
  1078  0664  3002               	movlw	2
  1079  0665  00A3               	movwf	LCD_PRINT_WP@y
  1080  0666  3000               	movlw	0
  1081  0667  00A4               	movwf	LCD_PRINT_WP@y+1
  1082  0668  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1083  0669  00B1               	movwf	??_main
  1084  066A  0831               	movf	??_main,w
  1085  066B  00A5               	movwf	LCD_PRINT_WP@frase
  1086  066C  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1087  0671                     l1712:	
  1088                           
  1089                           ;main.c: 61:     CONFIG_ADC();
  1090  0671  120A  118A  23B4  120A  118A  	fcall	_CONFIG_ADC
  1091  0676                     l1714:	
  1092                           
  1093                           ;main.c: 63:         if (eADC == 1){
  1094  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0678  0334               	decf	_eADC,w
  1097  0679  1D03               	btfss	3,2
  1098  067A  2E7C               	goto	u1311
  1099  067B  2E7D               	goto	u1310
  1100  067C                     u1311:	
  1101  067C  2E91               	goto	l1728
  1102  067D                     u1310:	
  1103  067D                     l1716:	
  1104                           
  1105                           ;main.c: 64:             eADC = 0;
  1106  067D  01B4               	clrf	_eADC
  1107  067E                     l1718:	
  1108                           
  1109                           ;main.c: 65:             if (cambiante == 0){ADCAN0 = ADRESH;}
  1110  067E  0835               	movf	_cambiante,w
  1111  067F  1D03               	btfss	3,2
  1112  0680  2E82               	goto	u1321
  1113  0681  2E83               	goto	u1320
  1114  0682                     u1321:	
  1115  0682  2E87               	goto	l1722
  1116  0683                     u1320:	
  1117  0683                     l1720:	
  1118  0683  081E               	movf	30,w	;volatile
  1119  0684  00B1               	movwf	??_main
  1120  0685  0831               	movf	??_main,w
  1121  0686  00B3               	movwf	_ADCAN0
  1122  0687                     l1722:	
  1123                           
  1124                           ;main.c: 66:             if (cambiante == 1){ADCAN1 = ADRESH;}
  1125  0687  0335               	decf	_cambiante,w
  1126  0688  1D03               	btfss	3,2
  1127  0689  2E8B               	goto	u1331
  1128  068A  2E8C               	goto	u1330
  1129  068B                     u1331:	
  1130  068B  2E90               	goto	l1726
  1131  068C                     u1330:	
  1132  068C                     l1724:	
  1133  068C  081E               	movf	30,w	;volatile
  1134  068D  00B1               	movwf	??_main
  1135  068E  0831               	movf	??_main,w
  1136  068F  00B2               	movwf	_ADCAN1
  1137  0690                     l1726:	
  1138                           
  1139                           ;main.c: 67:             ADCON0bits.GO_DONE = 1;}
  1140  0690  149F               	bsf	31,1	;volatile
  1141  0691                     l1728:	
  1142                           
  1143                           ;main.c: 68:         VAL(ADCAN0,0);
  1144  0691  01AA               	clrf	VAL@column
  1145  0692  0833               	movf	_ADCAN0,w
  1146  0693  120A  118A  26A6  120A  118A  	fcall	_VAL
  1147  0698                     l1730:	
  1148                           
  1149                           ;main.c: 69:         VAL(ADCAN1,1);
  1150  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1152  069A  01AA               	clrf	VAL@column
  1153  069B  0AAA               	incf	VAL@column,f
  1154  069C  0832               	movf	_ADCAN1,w
  1155  069D  120A  118A  26A6  120A  118A  	fcall	_VAL
  1156  06A2  2E76               	goto	l1714
  1157  06A3  120A  118A  280C   	ljmp	start
  1158  06A6                     __end_of_main:	
  1159                           
  1160                           	psect	text1
  1161  0458                     __ptext1:	
  1162 ;; *************** function _setup *****************
  1163 ;; Defined at:
  1164 ;;		line 74 in file "main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _setup
  1194  0458                     _setup:	
  1195  0458                     l1256:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _setup: [wreg+status,2]
  1198                           
  1199                           
  1200                           ;main.c: 76:     TRISA = 0b00000011;
  1201  0458  3003               	movlw	3
  1202  0459  1683               	bsf	3,5	;RP0=1, select bank1
  1203  045A  1303               	bcf	3,6	;RP1=0, select bank1
  1204  045B  0085               	movwf	5	;volatile
  1205                           
  1206                           ;main.c: 77:     ANSEL = 0b00000011;
  1207  045C  3003               	movlw	3
  1208  045D  1683               	bsf	3,5	;RP0=1, select bank3
  1209  045E  1703               	bsf	3,6	;RP1=1, select bank3
  1210  045F  0088               	movwf	8	;volatile
  1211  0460                     l1258:	
  1212                           
  1213                           ;main.c: 78:     ANSELH = 0b00000000;
  1214  0460  0189               	clrf	9	;volatile
  1215  0461                     l1260:	
  1216                           
  1217                           ;main.c: 79:     TRISB = 0b00000000;
  1218  0461  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0462  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0463  0186               	clrf	6	;volatile
  1221  0464                     l1262:	
  1222                           
  1223                           ;main.c: 80:     TRISC = 0b00000000;
  1224  0464  0187               	clrf	7	;volatile
  1225  0465                     l1264:	
  1226                           
  1227                           ;main.c: 81:     TRISD = 0b00000000;
  1228  0465  0188               	clrf	8	;volatile
  1229  0466                     l1266:	
  1230                           
  1231                           ;main.c: 82:     TRISE = 0b0000;
  1232  0466  0189               	clrf	9	;volatile
  1233  0467                     l1268:	
  1234                           
  1235                           ;main.c: 83:     PORTB = 0b00000000;
  1236  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0469  0186               	clrf	6	;volatile
  1239  046A                     l1270:	
  1240                           
  1241                           ;main.c: 84:     PORTC = 0b00000000;
  1242  046A  0187               	clrf	7	;volatile
  1243  046B                     l1272:	
  1244                           
  1245                           ;main.c: 85:     PORTD = 0b00000000;
  1246  046B  0188               	clrf	8	;volatile
  1247  046C                     l1274:	
  1248                           
  1249                           ;main.c: 86:     PORTE = 0b0000;
  1250  046C  0189               	clrf	9	;volatile
  1251  046D                     l1276:	
  1252                           
  1253                           ;main.c: 89:     OPTION_REGbits.T0CS = 0;
  1254  046D  1683               	bsf	3,5	;RP0=1, select bank1
  1255  046E  1303               	bcf	3,6	;RP1=0, select bank1
  1256  046F  1281               	bcf	1,5	;volatile
  1257  0470                     l1278:	
  1258                           
  1259                           ;main.c: 90:     OPTION_REGbits.PSA = 0;
  1260  0470  1181               	bcf	1,3	;volatile
  1261  0471                     l1280:	
  1262                           
  1263                           ;main.c: 91:     OPTION_REGbits.PS0 = 0;
  1264  0471  1001               	bcf	1,0	;volatile
  1265  0472                     l1282:	
  1266                           
  1267                           ;main.c: 92:     OPTION_REGbits.PS1 = 1;
  1268  0472  1481               	bsf	1,1	;volatile
  1269  0473                     l1284:	
  1270                           
  1271                           ;main.c: 93:     OPTION_REGbits.PS2 = 0;
  1272  0473  1101               	bcf	1,2	;volatile
  1273  0474                     l1286:	
  1274                           
  1275                           ;main.c: 94:     INTCONbits.T0IE = 1;
  1276  0474  168B               	bsf	11,5	;volatile
  1277  0475                     l1288:	
  1278                           
  1279                           ;main.c: 95:     INTCONbits.T0IF = 0;
  1280  0475  110B               	bcf	11,2	;volatile
  1281  0476                     l1290:	
  1282                           
  1283                           ;main.c: 96:     INTCONbits.GIE = 1;
  1284  0476  178B               	bsf	11,7	;volatile
  1285  0477                     l1292:	
  1286                           
  1287                           ;main.c: 97:     TMR0 = 130;
  1288  0477  3082               	movlw	130
  1289  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1291  047A  0081               	movwf	1	;volatile
  1292  047B                     l82:	
  1293  047B  0008               	return
  1294  047C                     __end_of_setup:	
  1295                           
  1296                           	psect	text2
  1297  06A6                     __ptext2:	
  1298 ;; *************** function _VAL *****************
  1299 ;; Defined at:
  1300 ;;		line 72 in file "LCD.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  result          1    wreg     unsigned char 
  1303 ;;  column          1   10[BANK0 ] unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  result          1   15[BANK0 ] unsigned char 
  1306 ;;  unidades        1   16[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       1       0       0       0
  1317 ;;      Locals:         0       2       0       0       0
  1318 ;;      Temps:          0       4       0       0       0
  1319 ;;      Totals:         0       7       0       0       0
  1320 ;;Total ram usage:        7 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    6
  1323 ;; This function calls:
  1324 ;;		_LCD_PRINT_WP
  1325 ;;		___awdiv
  1326 ;;		___awmod
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _VAL
  1334  06A6                     _VAL:	
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _VAL: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1338                           ;VAL@result stored from wreg
  1339  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1340  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1341  06A8  00AF               	movwf	VAL@result
  1342  06A9                     l1620:	
  1343  06A9                     l1622:	
  1344                           
  1345                           ;LCD.c: 74:     unidades = (result - (result % 51))/51;
  1346  06A9  3033               	movlw	51
  1347  06AA  00A2               	movwf	___awdiv@divisor
  1348  06AB  3000               	movlw	0
  1349  06AC  00A3               	movwf	___awdiv@divisor+1
  1350  06AD  3033               	movlw	51
  1351  06AE  00F4               	movwf	___awmod@divisor
  1352  06AF  3000               	movlw	0
  1353  06B0  00F5               	movwf	___awmod@divisor+1
  1354  06B1  082F               	movf	VAL@result,w
  1355  06B2  00AB               	movwf	??_VAL
  1356  06B3  01AC               	clrf	??_VAL+1
  1357  06B4  082B               	movf	??_VAL,w
  1358  06B5  00F6               	movwf	___awmod@dividend
  1359  06B6  082C               	movf	??_VAL+1,w
  1360  06B7  00F7               	movwf	___awmod@dividend+1
  1361  06B8  120A  118A  2501  120A  118A  	fcall	___awmod
  1362  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1363  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1364  06BF  082F               	movf	VAL@result,w
  1365  06C0  00AD               	movwf	??_VAL+2
  1366  06C1  0874               	movf	?___awmod,w
  1367  06C2  022D               	subwf	??_VAL+2,w
  1368  06C3  00A4               	movwf	___awdiv@dividend
  1369  06C4  0975               	comf	?___awmod+1,w
  1370  06C5  1803               	skipnc
  1371  06C6  3E01               	addlw	1
  1372  06C7  00A5               	movwf	___awdiv@dividend+1
  1373  06C8  120A  118A  255C  120A  118A  	fcall	___awdiv
  1374  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1375  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1376  06CF  0822               	movf	?___awdiv,w
  1377  06D0  00AE               	movwf	??_VAL+3
  1378  06D1  082E               	movf	??_VAL+3,w
  1379  06D2  00B0               	movwf	VAL@unidades
  1380  06D3                     l1624:	
  1381                           
  1382                           ;LCD.c: 75:     if (column == 0) {
  1383  06D3  082A               	movf	VAL@column,w
  1384  06D4  1D03               	btfss	3,2
  1385  06D5  2ED7               	goto	u1171
  1386  06D6  2ED8               	goto	u1170
  1387  06D7                     u1171:	
  1388  06D7  2F62               	goto	l1650
  1389  06D8                     u1170:	
  1390  06D8                     l1626:	
  1391                           
  1392                           ;LCD.c: 76:         if (unidades == 0){LCD_PRINT_WP(0,2,"-0.00V");}
  1393  06D8  0830               	movf	VAL@unidades,w
  1394  06D9  1D03               	btfss	3,2
  1395  06DA  2EDC               	goto	u1181
  1396  06DB  2EDD               	goto	u1180
  1397  06DC                     u1181:	
  1398  06DC  2EEE               	goto	l1630
  1399  06DD                     u1180:	
  1400  06DD                     l1628:	
  1401  06DD  3000               	movlw	0
  1402  06DE  00A1               	movwf	LCD_PRINT_WP@x
  1403  06DF  00A2               	movwf	LCD_PRINT_WP@x+1
  1404  06E0  3002               	movlw	2
  1405  06E1  00A3               	movwf	LCD_PRINT_WP@y
  1406  06E2  3000               	movlw	0
  1407  06E3  00A4               	movwf	LCD_PRINT_WP@y+1
  1408  06E4  3067               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1409  06E5  00AB               	movwf	??_VAL
  1410  06E6  082B               	movf	??_VAL,w
  1411  06E7  00A5               	movwf	LCD_PRINT_WP@frase
  1412  06E8  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1413  06ED  2FF4               	goto	l178
  1414  06EE                     l1630:	
  1415  06EE  3002               	movlw	2
  1416  06EF  0630               	xorwf	VAL@unidades,w
  1417  06F0  1D03               	btfss	3,2
  1418  06F1  2EF3               	goto	u1191
  1419  06F2  2EF4               	goto	u1190
  1420  06F3                     u1191:	
  1421  06F3  2F05               	goto	l1634
  1422  06F4                     u1190:	
  1423  06F4                     l1632:	
  1424  06F4  3000               	movlw	0
  1425  06F5  00A1               	movwf	LCD_PRINT_WP@x
  1426  06F6  00A2               	movwf	LCD_PRINT_WP@x+1
  1427  06F7  3002               	movlw	2
  1428  06F8  00A3               	movwf	LCD_PRINT_WP@y
  1429  06F9  3000               	movlw	0
  1430  06FA  00A4               	movwf	LCD_PRINT_WP@y+1
  1431  06FB  306E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1432  06FC  00AB               	movwf	??_VAL
  1433  06FD  082B               	movf	??_VAL,w
  1434  06FE  00A5               	movwf	LCD_PRINT_WP@frase
  1435  06FF  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1436  0704  2FF4               	goto	l178
  1437  0705                     l1634:	
  1438  0705  3002               	movlw	2
  1439  0706  0630               	xorwf	VAL@unidades,w
  1440  0707  1D03               	btfss	3,2
  1441  0708  2F0A               	goto	u1201
  1442  0709  2F0B               	goto	u1200
  1443  070A                     u1201:	
  1444  070A  2F1C               	goto	l1638
  1445  070B                     u1200:	
  1446  070B                     l1636:	
  1447  070B  3000               	movlw	0
  1448  070C  00A1               	movwf	LCD_PRINT_WP@x
  1449  070D  00A2               	movwf	LCD_PRINT_WP@x+1
  1450  070E  3002               	movlw	2
  1451  070F  00A3               	movwf	LCD_PRINT_WP@y
  1452  0710  3000               	movlw	0
  1453  0711  00A4               	movwf	LCD_PRINT_WP@y+1
  1454  0712  3075               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1455  0713  00AB               	movwf	??_VAL
  1456  0714  082B               	movf	??_VAL,w
  1457  0715  00A5               	movwf	LCD_PRINT_WP@frase
  1458  0716  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1459  071B  2FF4               	goto	l178
  1460  071C                     l1638:	
  1461  071C  3003               	movlw	3
  1462  071D  0630               	xorwf	VAL@unidades,w
  1463  071E  1D03               	btfss	3,2
  1464  071F  2F21               	goto	u1211
  1465  0720  2F22               	goto	u1210
  1466  0721                     u1211:	
  1467  0721  2F33               	goto	l1642
  1468  0722                     u1210:	
  1469  0722                     l1640:	
  1470  0722  3000               	movlw	0
  1471  0723  00A1               	movwf	LCD_PRINT_WP@x
  1472  0724  00A2               	movwf	LCD_PRINT_WP@x+1
  1473  0725  3002               	movlw	2
  1474  0726  00A3               	movwf	LCD_PRINT_WP@y
  1475  0727  3000               	movlw	0
  1476  0728  00A4               	movwf	LCD_PRINT_WP@y+1
  1477  0729  307C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1478  072A  00AB               	movwf	??_VAL
  1479  072B  082B               	movf	??_VAL,w
  1480  072C  00A5               	movwf	LCD_PRINT_WP@frase
  1481  072D  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1482  0732  2FF4               	goto	l178
  1483  0733                     l1642:	
  1484  0733  3004               	movlw	4
  1485  0734  0630               	xorwf	VAL@unidades,w
  1486  0735  1D03               	btfss	3,2
  1487  0736  2F38               	goto	u1221
  1488  0737  2F39               	goto	u1220
  1489  0738                     u1221:	
  1490  0738  2F4A               	goto	l1646
  1491  0739                     u1220:	
  1492  0739                     l1644:	
  1493  0739  3000               	movlw	0
  1494  073A  00A1               	movwf	LCD_PRINT_WP@x
  1495  073B  00A2               	movwf	LCD_PRINT_WP@x+1
  1496  073C  3002               	movlw	2
  1497  073D  00A3               	movwf	LCD_PRINT_WP@y
  1498  073E  3000               	movlw	0
  1499  073F  00A4               	movwf	LCD_PRINT_WP@y+1
  1500  0740  3083               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1501  0741  00AB               	movwf	??_VAL
  1502  0742  082B               	movf	??_VAL,w
  1503  0743  00A5               	movwf	LCD_PRINT_WP@frase
  1504  0744  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1505  0749  2FF4               	goto	l178
  1506  074A                     l1646:	
  1507  074A  3005               	movlw	5
  1508  074B  0630               	xorwf	VAL@unidades,w
  1509  074C  1D03               	btfss	3,2
  1510  074D  2F4F               	goto	u1231
  1511  074E  2F50               	goto	u1230
  1512  074F                     u1231:	
  1513  074F  2F61               	goto	l159
  1514  0750                     u1230:	
  1515  0750                     l1648:	
  1516  0750  3000               	movlw	0
  1517  0751  00A1               	movwf	LCD_PRINT_WP@x
  1518  0752  00A2               	movwf	LCD_PRINT_WP@x+1
  1519  0753  3002               	movlw	2
  1520  0754  00A3               	movwf	LCD_PRINT_WP@y
  1521  0755  3000               	movlw	0
  1522  0756  00A4               	movwf	LCD_PRINT_WP@y+1
  1523  0757  308A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1524  0758  00AB               	movwf	??_VAL
  1525  0759  082B               	movf	??_VAL,w
  1526  075A  00A5               	movwf	LCD_PRINT_WP@frase
  1527  075B  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1528  0760  2FF4               	goto	l178
  1529  0761                     l159:	
  1530  0761  2FF4               	goto	l178
  1531  0762                     l1650:	
  1532  0762  032A               	decf	VAL@column,w
  1533  0763  1D03               	btfss	3,2
  1534  0764  2F66               	goto	u1241
  1535  0765  2F67               	goto	u1240
  1536  0766                     u1241:	
  1537  0766  2FF4               	goto	l178
  1538  0767                     u1240:	
  1539  0767                     l1652:	
  1540                           
  1541                           ;LCD.c: 83:         if (unidades == 0){LCD_PRINT_WP(0,6,"-0.00V");}
  1542  0767  0830               	movf	VAL@unidades,w
  1543  0768  1D03               	btfss	3,2
  1544  0769  2F6B               	goto	u1251
  1545  076A  2F6C               	goto	u1250
  1546  076B                     u1251:	
  1547  076B  2F7D               	goto	l1656
  1548  076C                     u1250:	
  1549  076C                     l1654:	
  1550  076C  3000               	movlw	0
  1551  076D  00A1               	movwf	LCD_PRINT_WP@x
  1552  076E  00A2               	movwf	LCD_PRINT_WP@x+1
  1553  076F  3006               	movlw	6
  1554  0770  00A3               	movwf	LCD_PRINT_WP@y
  1555  0771  3000               	movlw	0
  1556  0772  00A4               	movwf	LCD_PRINT_WP@y+1
  1557  0773  3067               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1558  0774  00AB               	movwf	??_VAL
  1559  0775  082B               	movf	??_VAL,w
  1560  0776  00A5               	movwf	LCD_PRINT_WP@frase
  1561  0777  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1562  077C  2FF4               	goto	l178
  1563  077D                     l1656:	
  1564  077D  3002               	movlw	2
  1565  077E  0630               	xorwf	VAL@unidades,w
  1566  077F  1D03               	btfss	3,2
  1567  0780  2F82               	goto	u1261
  1568  0781  2F83               	goto	u1260
  1569  0782                     u1261:	
  1570  0782  2F95               	goto	l1660
  1571  0783                     u1260:	
  1572  0783                     l1658:	
  1573  0783  3006               	movlw	6
  1574  0784  00A1               	movwf	LCD_PRINT_WP@x
  1575  0785  3000               	movlw	0
  1576  0786  00A2               	movwf	LCD_PRINT_WP@x+1
  1577  0787  3002               	movlw	2
  1578  0788  00A3               	movwf	LCD_PRINT_WP@y
  1579  0789  3000               	movlw	0
  1580  078A  00A4               	movwf	LCD_PRINT_WP@y+1
  1581  078B  306E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1582  078C  00AB               	movwf	??_VAL
  1583  078D  082B               	movf	??_VAL,w
  1584  078E  00A5               	movwf	LCD_PRINT_WP@frase
  1585  078F  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1586  0794  2FF4               	goto	l178
  1587  0795                     l1660:	
  1588  0795  3002               	movlw	2
  1589  0796  0630               	xorwf	VAL@unidades,w
  1590  0797  1D03               	btfss	3,2
  1591  0798  2F9A               	goto	u1271
  1592  0799  2F9B               	goto	u1270
  1593  079A                     u1271:	
  1594  079A  2FAD               	goto	l1664
  1595  079B                     u1270:	
  1596  079B                     l1662:	
  1597  079B  3006               	movlw	6
  1598  079C  00A1               	movwf	LCD_PRINT_WP@x
  1599  079D  3000               	movlw	0
  1600  079E  00A2               	movwf	LCD_PRINT_WP@x+1
  1601  079F  3002               	movlw	2
  1602  07A0  00A3               	movwf	LCD_PRINT_WP@y
  1603  07A1  3000               	movlw	0
  1604  07A2  00A4               	movwf	LCD_PRINT_WP@y+1
  1605  07A3  3075               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1606  07A4  00AB               	movwf	??_VAL
  1607  07A5  082B               	movf	??_VAL,w
  1608  07A6  00A5               	movwf	LCD_PRINT_WP@frase
  1609  07A7  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1610  07AC  2FF4               	goto	l178
  1611  07AD                     l1664:	
  1612  07AD  3003               	movlw	3
  1613  07AE  0630               	xorwf	VAL@unidades,w
  1614  07AF  1D03               	btfss	3,2
  1615  07B0  2FB2               	goto	u1281
  1616  07B1  2FB3               	goto	u1280
  1617  07B2                     u1281:	
  1618  07B2  2FC5               	goto	l1668
  1619  07B3                     u1280:	
  1620  07B3                     l1666:	
  1621  07B3  3006               	movlw	6
  1622  07B4  00A1               	movwf	LCD_PRINT_WP@x
  1623  07B5  3000               	movlw	0
  1624  07B6  00A2               	movwf	LCD_PRINT_WP@x+1
  1625  07B7  3002               	movlw	2
  1626  07B8  00A3               	movwf	LCD_PRINT_WP@y
  1627  07B9  3000               	movlw	0
  1628  07BA  00A4               	movwf	LCD_PRINT_WP@y+1
  1629  07BB  307C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1630  07BC  00AB               	movwf	??_VAL
  1631  07BD  082B               	movf	??_VAL,w
  1632  07BE  00A5               	movwf	LCD_PRINT_WP@frase
  1633  07BF  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1634  07C4  2FF4               	goto	l178
  1635  07C5                     l1668:	
  1636  07C5  3004               	movlw	4
  1637  07C6  0630               	xorwf	VAL@unidades,w
  1638  07C7  1D03               	btfss	3,2
  1639  07C8  2FCA               	goto	u1291
  1640  07C9  2FCB               	goto	u1290
  1641  07CA                     u1291:	
  1642  07CA  2FDD               	goto	l1672
  1643  07CB                     u1290:	
  1644  07CB                     l1670:	
  1645  07CB  3006               	movlw	6
  1646  07CC  00A1               	movwf	LCD_PRINT_WP@x
  1647  07CD  3000               	movlw	0
  1648  07CE  00A2               	movwf	LCD_PRINT_WP@x+1
  1649  07CF  3002               	movlw	2
  1650  07D0  00A3               	movwf	LCD_PRINT_WP@y
  1651  07D1  3000               	movlw	0
  1652  07D2  00A4               	movwf	LCD_PRINT_WP@y+1
  1653  07D3  3083               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1654  07D4  00AB               	movwf	??_VAL
  1655  07D5  082B               	movf	??_VAL,w
  1656  07D6  00A5               	movwf	LCD_PRINT_WP@frase
  1657  07D7  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1658  07DC  2FF4               	goto	l178
  1659  07DD                     l1672:	
  1660  07DD  3005               	movlw	5
  1661  07DE  0630               	xorwf	VAL@unidades,w
  1662  07DF  1D03               	btfss	3,2
  1663  07E0  2FE2               	goto	u1301
  1664  07E1  2FE3               	goto	u1300
  1665  07E2                     u1301:	
  1666  07E2  2F61               	goto	l159
  1667  07E3                     u1300:	
  1668  07E3                     l1674:	
  1669  07E3  3006               	movlw	6
  1670  07E4  00A1               	movwf	LCD_PRINT_WP@x
  1671  07E5  3000               	movlw	0
  1672  07E6  00A2               	movwf	LCD_PRINT_WP@x+1
  1673  07E7  3002               	movlw	2
  1674  07E8  00A3               	movwf	LCD_PRINT_WP@y
  1675  07E9  3000               	movlw	0
  1676  07EA  00A4               	movwf	LCD_PRINT_WP@y+1
  1677  07EB  308A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1678  07EC  00AB               	movwf	??_VAL
  1679  07ED  082B               	movf	??_VAL,w
  1680  07EE  00A5               	movwf	LCD_PRINT_WP@frase
  1681  07EF  120A  118A  2413  120A  118A  	fcall	_LCD_PRINT_WP
  1682  07F4                     l178:	
  1683  07F4  0008               	return
  1684  07F5                     __end_of_VAL:	
  1685                           
  1686                           	psect	text3
  1687  0501                     __ptext3:	
  1688 ;; *************** function ___awmod *****************
  1689 ;; Defined at:
  1690 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  divisor         2    3[COMMON] int 
  1693 ;;  dividend        2    5[COMMON] int 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  sign            1    1[BANK0 ] unsigned char 
  1696 ;;  counter         1    0[BANK0 ] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2    3[COMMON] int 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         4       0       0       0       0
  1707 ;;      Locals:         0       2       0       0       0
  1708 ;;      Temps:          1       0       0       0       0
  1709 ;;      Totals:         5       2       0       0       0
  1710 ;;Total ram usage:        7 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_VAL
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function ___awmod
  1722  0501                     ___awmod:	
  1723  0501                     l1560:	
  1724                           ;incstack = 0
  1725                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1726                           
  1727  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0503  01A1               	clrf	___awmod@sign
  1730  0504                     l1562:	
  1731  0504  1FF7               	btfss	___awmod@dividend+1,7
  1732  0505  2D07               	goto	u1081
  1733  0506  2D08               	goto	u1080
  1734  0507                     u1081:	
  1735  0507  2D0F               	goto	l1568
  1736  0508                     u1080:	
  1737  0508                     l1564:	
  1738  0508  09F6               	comf	___awmod@dividend,f
  1739  0509  09F7               	comf	___awmod@dividend+1,f
  1740  050A  0AF6               	incf	___awmod@dividend,f
  1741  050B  1903               	skipnz
  1742  050C  0AF7               	incf	___awmod@dividend+1,f
  1743  050D                     l1566:	
  1744  050D  01A1               	clrf	___awmod@sign
  1745  050E  0AA1               	incf	___awmod@sign,f
  1746  050F                     l1568:	
  1747  050F  1FF5               	btfss	___awmod@divisor+1,7
  1748  0510  2D12               	goto	u1091
  1749  0511  2D13               	goto	u1090
  1750  0512                     u1091:	
  1751  0512  2D18               	goto	l1572
  1752  0513                     u1090:	
  1753  0513                     l1570:	
  1754  0513  09F4               	comf	___awmod@divisor,f
  1755  0514  09F5               	comf	___awmod@divisor+1,f
  1756  0515  0AF4               	incf	___awmod@divisor,f
  1757  0516  1903               	skipnz
  1758  0517  0AF5               	incf	___awmod@divisor+1,f
  1759  0518                     l1572:	
  1760  0518  0874               	movf	___awmod@divisor,w
  1761  0519  0475               	iorwf	___awmod@divisor+1,w
  1762  051A  1903               	btfsc	3,2
  1763  051B  2D1D               	goto	u1101
  1764  051C  2D1E               	goto	u1100
  1765  051D                     u1101:	
  1766  051D  2D4D               	goto	l1590
  1767  051E                     u1100:	
  1768  051E                     l1574:	
  1769  051E  01A0               	clrf	___awmod@counter
  1770  051F  0AA0               	incf	___awmod@counter,f
  1771  0520  2D2C               	goto	l1580
  1772  0521                     l1576:	
  1773  0521  3001               	movlw	1
  1774  0522                     u1115:	
  1775  0522  1003               	clrc
  1776  0523  0DF4               	rlf	___awmod@divisor,f
  1777  0524  0DF5               	rlf	___awmod@divisor+1,f
  1778  0525  3EFF               	addlw	-1
  1779  0526  1D03               	skipz
  1780  0527  2D22               	goto	u1115
  1781  0528                     l1578:	
  1782  0528  3001               	movlw	1
  1783  0529  00F8               	movwf	??___awmod
  1784  052A  0878               	movf	??___awmod,w
  1785  052B  07A0               	addwf	___awmod@counter,f
  1786  052C                     l1580:	
  1787  052C  1FF5               	btfss	___awmod@divisor+1,7
  1788  052D  2D2F               	goto	u1121
  1789  052E  2D30               	goto	u1120
  1790  052F                     u1121:	
  1791  052F  2D21               	goto	l1576
  1792  0530                     u1120:	
  1793  0530                     l1582:	
  1794  0530  0875               	movf	___awmod@divisor+1,w
  1795  0531  0277               	subwf	___awmod@dividend+1,w
  1796  0532  1D03               	skipz
  1797  0533  2D36               	goto	u1135
  1798  0534  0874               	movf	___awmod@divisor,w
  1799  0535  0276               	subwf	___awmod@dividend,w
  1800  0536                     u1135:	
  1801  0536  1C03               	skipc
  1802  0537  2D39               	goto	u1131
  1803  0538  2D3A               	goto	u1130
  1804  0539                     u1131:	
  1805  0539  2D40               	goto	l1586
  1806  053A                     u1130:	
  1807  053A                     l1584:	
  1808  053A  0874               	movf	___awmod@divisor,w
  1809  053B  02F6               	subwf	___awmod@dividend,f
  1810  053C  0875               	movf	___awmod@divisor+1,w
  1811  053D  1C03               	skipc
  1812  053E  03F7               	decf	___awmod@dividend+1,f
  1813  053F  02F7               	subwf	___awmod@dividend+1,f
  1814  0540                     l1586:	
  1815  0540  3001               	movlw	1
  1816  0541                     u1145:	
  1817  0541  1003               	clrc
  1818  0542  0CF5               	rrf	___awmod@divisor+1,f
  1819  0543  0CF4               	rrf	___awmod@divisor,f
  1820  0544  3EFF               	addlw	-1
  1821  0545  1D03               	skipz
  1822  0546  2D41               	goto	u1145
  1823  0547                     l1588:	
  1824  0547  3001               	movlw	1
  1825  0548  02A0               	subwf	___awmod@counter,f
  1826  0549  1D03               	btfss	3,2
  1827  054A  2D4C               	goto	u1151
  1828  054B  2D4D               	goto	u1150
  1829  054C                     u1151:	
  1830  054C  2D30               	goto	l1582
  1831  054D                     u1150:	
  1832  054D                     l1590:	
  1833  054D  0821               	movf	___awmod@sign,w
  1834  054E  1903               	btfsc	3,2
  1835  054F  2D51               	goto	u1161
  1836  0550  2D52               	goto	u1160
  1837  0551                     u1161:	
  1838  0551  2D57               	goto	l1594
  1839  0552                     u1160:	
  1840  0552                     l1592:	
  1841  0552  09F6               	comf	___awmod@dividend,f
  1842  0553  09F7               	comf	___awmod@dividend+1,f
  1843  0554  0AF6               	incf	___awmod@dividend,f
  1844  0555  1903               	skipnz
  1845  0556  0AF7               	incf	___awmod@dividend+1,f
  1846  0557                     l1594:	
  1847  0557  0877               	movf	___awmod@dividend+1,w
  1848  0558  00F5               	movwf	?___awmod+1
  1849  0559  0876               	movf	___awmod@dividend,w
  1850  055A  00F4               	movwf	?___awmod
  1851  055B                     l430:	
  1852  055B  0008               	return
  1853  055C                     __end_of___awmod:	
  1854                           
  1855                           	psect	text4
  1856  055C                     __ptext4:	
  1857 ;; *************** function ___awdiv *****************
  1858 ;; Defined at:
  1859 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  divisor         2    2[BANK0 ] int 
  1862 ;;  dividend        2    4[BANK0 ] int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  quotient        2    8[BANK0 ] int 
  1865 ;;  sign            1    7[BANK0 ] unsigned char 
  1866 ;;  counter         1    6[BANK0 ] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2    2[BANK0 ] int 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       4       0       0       0
  1877 ;;      Locals:         0       4       0       0       0
  1878 ;;      Temps:          1       0       0       0       0
  1879 ;;      Totals:         1       8       0       0       0
  1880 ;;Total ram usage:        9 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    1
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_VAL
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function ___awdiv
  1892  055C                     ___awdiv:	
  1893  055C                     l1516:	
  1894                           ;incstack = 0
  1895                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1896                           
  1897  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1898  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1899  055E  01A7               	clrf	___awdiv@sign
  1900  055F                     l1518:	
  1901  055F  1FA3               	btfss	___awdiv@divisor+1,7
  1902  0560  2D62               	goto	u981
  1903  0561  2D63               	goto	u980
  1904  0562                     u981:	
  1905  0562  2D6A               	goto	l1524
  1906  0563                     u980:	
  1907  0563                     l1520:	
  1908  0563  09A2               	comf	___awdiv@divisor,f
  1909  0564  09A3               	comf	___awdiv@divisor+1,f
  1910  0565  0AA2               	incf	___awdiv@divisor,f
  1911  0566  1903               	skipnz
  1912  0567  0AA3               	incf	___awdiv@divisor+1,f
  1913  0568                     l1522:	
  1914  0568  01A7               	clrf	___awdiv@sign
  1915  0569  0AA7               	incf	___awdiv@sign,f
  1916  056A                     l1524:	
  1917  056A  1FA5               	btfss	___awdiv@dividend+1,7
  1918  056B  2D6D               	goto	u991
  1919  056C  2D6E               	goto	u990
  1920  056D                     u991:	
  1921  056D  2D77               	goto	l1530
  1922  056E                     u990:	
  1923  056E                     l1526:	
  1924  056E  09A4               	comf	___awdiv@dividend,f
  1925  056F  09A5               	comf	___awdiv@dividend+1,f
  1926  0570  0AA4               	incf	___awdiv@dividend,f
  1927  0571  1903               	skipnz
  1928  0572  0AA5               	incf	___awdiv@dividend+1,f
  1929  0573                     l1528:	
  1930  0573  3001               	movlw	1
  1931  0574  00F9               	movwf	??___awdiv
  1932  0575  0879               	movf	??___awdiv,w
  1933  0576  06A7               	xorwf	___awdiv@sign,f
  1934  0577                     l1530:	
  1935  0577  01A8               	clrf	___awdiv@quotient
  1936  0578  01A9               	clrf	___awdiv@quotient+1
  1937  0579                     l1532:	
  1938  0579  0822               	movf	___awdiv@divisor,w
  1939  057A  0423               	iorwf	___awdiv@divisor+1,w
  1940  057B  1903               	btfsc	3,2
  1941  057C  2D7E               	goto	u1001
  1942  057D  2D7F               	goto	u1000
  1943  057E                     u1001:	
  1944  057E  2DB6               	goto	l1552
  1945  057F                     u1000:	
  1946  057F                     l1534:	
  1947  057F  01A6               	clrf	___awdiv@counter
  1948  0580  0AA6               	incf	___awdiv@counter,f
  1949  0581  2D8D               	goto	l1540
  1950  0582                     l1536:	
  1951  0582  3001               	movlw	1
  1952  0583                     u1015:	
  1953  0583  1003               	clrc
  1954  0584  0DA2               	rlf	___awdiv@divisor,f
  1955  0585  0DA3               	rlf	___awdiv@divisor+1,f
  1956  0586  3EFF               	addlw	-1
  1957  0587  1D03               	skipz
  1958  0588  2D83               	goto	u1015
  1959  0589                     l1538:	
  1960  0589  3001               	movlw	1
  1961  058A  00F9               	movwf	??___awdiv
  1962  058B  0879               	movf	??___awdiv,w
  1963  058C  07A6               	addwf	___awdiv@counter,f
  1964  058D                     l1540:	
  1965  058D  1FA3               	btfss	___awdiv@divisor+1,7
  1966  058E  2D90               	goto	u1021
  1967  058F  2D91               	goto	u1020
  1968  0590                     u1021:	
  1969  0590  2D82               	goto	l1536
  1970  0591                     u1020:	
  1971  0591                     l1542:	
  1972  0591  3001               	movlw	1
  1973  0592                     u1035:	
  1974  0592  1003               	clrc
  1975  0593  0DA8               	rlf	___awdiv@quotient,f
  1976  0594  0DA9               	rlf	___awdiv@quotient+1,f
  1977  0595  3EFF               	addlw	-1
  1978  0596  1D03               	skipz
  1979  0597  2D92               	goto	u1035
  1980  0598  0823               	movf	___awdiv@divisor+1,w
  1981  0599  0225               	subwf	___awdiv@dividend+1,w
  1982  059A  1D03               	skipz
  1983  059B  2D9E               	goto	u1045
  1984  059C  0822               	movf	___awdiv@divisor,w
  1985  059D  0224               	subwf	___awdiv@dividend,w
  1986  059E                     u1045:	
  1987  059E  1C03               	skipc
  1988  059F  2DA1               	goto	u1041
  1989  05A0  2DA2               	goto	u1040
  1990  05A1                     u1041:	
  1991  05A1  2DA9               	goto	l1548
  1992  05A2                     u1040:	
  1993  05A2                     l1544:	
  1994  05A2  0822               	movf	___awdiv@divisor,w
  1995  05A3  02A4               	subwf	___awdiv@dividend,f
  1996  05A4  0823               	movf	___awdiv@divisor+1,w
  1997  05A5  1C03               	skipc
  1998  05A6  03A5               	decf	___awdiv@dividend+1,f
  1999  05A7  02A5               	subwf	___awdiv@dividend+1,f
  2000  05A8                     l1546:	
  2001  05A8  1428               	bsf	___awdiv@quotient,0
  2002  05A9                     l1548:	
  2003  05A9  3001               	movlw	1
  2004  05AA                     u1055:	
  2005  05AA  1003               	clrc
  2006  05AB  0CA3               	rrf	___awdiv@divisor+1,f
  2007  05AC  0CA2               	rrf	___awdiv@divisor,f
  2008  05AD  3EFF               	addlw	-1
  2009  05AE  1D03               	skipz
  2010  05AF  2DAA               	goto	u1055
  2011  05B0                     l1550:	
  2012  05B0  3001               	movlw	1
  2013  05B1  02A6               	subwf	___awdiv@counter,f
  2014  05B2  1D03               	btfss	3,2
  2015  05B3  2DB5               	goto	u1061
  2016  05B4  2DB6               	goto	u1060
  2017  05B5                     u1061:	
  2018  05B5  2D91               	goto	l1542
  2019  05B6                     u1060:	
  2020  05B6                     l1552:	
  2021  05B6  0827               	movf	___awdiv@sign,w
  2022  05B7  1903               	btfsc	3,2
  2023  05B8  2DBA               	goto	u1071
  2024  05B9  2DBB               	goto	u1070
  2025  05BA                     u1071:	
  2026  05BA  2DC0               	goto	l1556
  2027  05BB                     u1070:	
  2028  05BB                     l1554:	
  2029  05BB  09A8               	comf	___awdiv@quotient,f
  2030  05BC  09A9               	comf	___awdiv@quotient+1,f
  2031  05BD  0AA8               	incf	___awdiv@quotient,f
  2032  05BE  1903               	skipnz
  2033  05BF  0AA9               	incf	___awdiv@quotient+1,f
  2034  05C0                     l1556:	
  2035  05C0  0829               	movf	___awdiv@quotient+1,w
  2036  05C1  00A3               	movwf	?___awdiv+1
  2037  05C2  0828               	movf	___awdiv@quotient,w
  2038  05C3  00A2               	movwf	?___awdiv
  2039  05C4                     l417:	
  2040  05C4  0008               	return
  2041  05C5                     __end_of___awdiv:	
  2042                           
  2043                           	psect	text5
  2044  0413                     __ptext5:	
  2045 ;; *************** function _LCD_PRINT_WP *****************
  2046 ;; Defined at:
  2047 ;;		line 63 in file "LCD.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  x               2    1[BANK0 ] int 
  2050 ;;  y               2    3[BANK0 ] int 
  2051 ;;  frase           1    5[BANK0 ] PTR unsigned char 
  2052 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  2053 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  2054 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  2055 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2056 ;;		 -> STR_2(17), STR_1(17), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  location        1    7[BANK0 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       5       0       0       0
  2069 ;;      Locals:         0       1       0       0       0
  2070 ;;      Temps:          0       1       0       0       0
  2071 ;;      Totals:         0       7       0       0       0
  2072 ;;Total ram usage:        7 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    5
  2075 ;; This function calls:
  2076 ;;		_LCD_CONTROL
  2077 ;;		_LCD_PRINT
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;;		_VAL
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function _LCD_PRINT_WP
  2086  0413                     _LCD_PRINT_WP:	
  2087  0413                     l1502:	
  2088                           ;incstack = 0
  2089                           ; Regs used in _LCD_PRINT_WP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2090                           
  2091                           
  2092                           ;LCD.c: 64:     char location;;LCD.c: 65:     if (y == 1){location = 0x80 + x;}
  2093  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0415  0323               	decf	LCD_PRINT_WP@y,w
  2096  0416  0424               	iorwf	LCD_PRINT_WP@y+1,w
  2097  0417  1D03               	btfss	3,2
  2098  0418  2C1A               	goto	u971
  2099  0419  2C1B               	goto	u970
  2100  041A                     u971:	
  2101  041A  2C21               	goto	l1506
  2102  041B                     u970:	
  2103  041B                     l1504:	
  2104  041B  0821               	movf	LCD_PRINT_WP@x,w
  2105  041C  3E80               	addlw	128
  2106  041D  00A6               	movwf	??_LCD_PRINT_WP
  2107  041E  0826               	movf	??_LCD_PRINT_WP,w
  2108  041F  00A7               	movwf	LCD_PRINT_WP@location
  2109  0420  2C26               	goto	l1512
  2110  0421                     l1506:	
  2111  0421                     l1508:	
  2112  0421  0821               	movf	LCD_PRINT_WP@x,w
  2113  0422  3EC0               	addlw	192
  2114  0423  00A6               	movwf	??_LCD_PRINT_WP
  2115  0424  0826               	movf	??_LCD_PRINT_WP,w
  2116  0425  00A7               	movwf	LCD_PRINT_WP@location
  2117  0426                     l1512:	
  2118                           
  2119                           ;LCD.c: 68:     LCD_CONTROL(location);
  2120  0426  0827               	movf	LCD_PRINT_WP@location,w
  2121  0427  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2122  042C                     l1514:	
  2123                           
  2124                           ;LCD.c: 69:     LCD_PRINT(frase);
  2125  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2126  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2127  042E  0825               	movf	LCD_PRINT_WP@frase,w
  2128  042F  120A  118A  2435  120A  118A  	fcall	_LCD_PRINT
  2129  0434                     l150:	
  2130  0434  0008               	return
  2131  0435                     __end_of_LCD_PRINT_WP:	
  2132                           
  2133                           	psect	text6
  2134  0435                     __ptext6:	
  2135 ;; *************** function _LCD_PRINT *****************
  2136 ;; Defined at:
  2137 ;;		line 56 in file "LCD.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  data            1    wreg     PTR unsigned char 
  2140 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  2141 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  2142 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  2143 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2144 ;;		 -> STR_2(17), STR_1(17), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  data            1    0[BANK0 ] PTR unsigned char 
  2147 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  2148 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  2149 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  2150 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  2151 ;;		 -> STR_2(17), STR_1(17), 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       0       0       0       0
  2162 ;;      Locals:         0       1       0       0       0
  2163 ;;      Temps:          1       0       0       0       0
  2164 ;;      Totals:         1       1       0       0       0
  2165 ;;Total ram usage:        2 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    4
  2168 ;; This function calls:
  2169 ;;		_LCD_DATO
  2170 ;; This function is called by:
  2171 ;;		_LCD_PRINT_WP
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function _LCD_PRINT
  2177  0435                     _LCD_PRINT:	
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _LCD_PRINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2181                           ;LCD_PRINT@data stored from wreg
  2182  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0437  00A0               	movwf	LCD_PRINT@data
  2185  0438                     l1494:	
  2186                           
  2187                           ;LCD.c: 57:     while(*data){
  2188  0438  2C4B               	goto	l1500
  2189  0439                     l1496:	
  2190                           
  2191                           ;LCD.c: 58:         LCD_DATO (*data);
  2192  0439  0820               	movf	LCD_PRINT@data,w
  2193  043A  0084               	movwf	4
  2194  043B  120A  118A  200F  120A  118A  	fcall	stringdir
  2195  0440  120A  118A  23D5  120A  118A  	fcall	_LCD_DATO
  2196  0445                     l1498:	
  2197                           
  2198                           ;LCD.c: 59:         data++;}}
  2199  0445  3001               	movlw	1
  2200  0446  00F9               	movwf	??_LCD_PRINT
  2201  0447  0879               	movf	??_LCD_PRINT,w
  2202  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2204  044A  07A0               	addwf	LCD_PRINT@data,f
  2205  044B                     l1500:	
  2206                           
  2207                           ;LCD.c: 57:     while(*data){
  2208  044B  0820               	movf	LCD_PRINT@data,w
  2209  044C  0084               	movwf	4
  2210  044D  120A  118A  200F  120A  118A  	fcall	stringdir
  2211  0452  3A00               	xorlw	0
  2212  0453  1D03               	skipz
  2213  0454  2C56               	goto	u961
  2214  0455  2C57               	goto	u960
  2215  0456                     u961:	
  2216  0456  2C39               	goto	l1496
  2217  0457                     u960:	
  2218  0457                     l140:	
  2219  0457  0008               	return
  2220  0458                     __end_of_LCD_PRINT:	
  2221                           
  2222                           	psect	text7
  2223  03D5                     __ptext7:	
  2224 ;; *************** function _LCD_DATO *****************
  2225 ;; Defined at:
  2226 ;;		line 45 in file "LCD.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  comando         1    wreg     unsigned char 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  comando         1    7[COMMON] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       0       0       0       0
  2241 ;;      Locals:         1       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0
  2243 ;;      Totals:         1       0       0       0       0
  2244 ;;Total ram usage:        1 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    3
  2247 ;; This function calls:
  2248 ;;		_LCD_PULSE
  2249 ;;		_delay_us
  2250 ;; This function is called by:
  2251 ;;		_LCD_PRINT
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _LCD_DATO
  2257  03D5                     _LCD_DATO:	
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _LCD_DATO: [wreg+status,2+status,0+pclath+cstack]
  2261                           ;LCD_DATO@comando stored from wreg
  2262  03D5  00F8               	movwf	LCD_DATO@comando
  2263  03D6                     l1478:	
  2264                           
  2265                           ;LCD.c: 46:     PORTEbits.RE0 = 1;
  2266  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2267  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2268  03D8  1409               	bsf	9,0	;volatile
  2269  03D9                     l1480:	
  2270                           
  2271                           ;LCD.c: 47:     PORTD = comando;
  2272  03D9  0878               	movf	LCD_DATO@comando,w
  2273  03DA  0088               	movwf	8	;volatile
  2274  03DB                     l1482:	
  2275                           
  2276                           ;LCD.c: 48:     LCD_PULSE();
  2277  03DB  120A  118A  23E7  120A  118A  	fcall	_LCD_PULSE
  2278  03E0                     l1484:	
  2279                           
  2280                           ;LCD.c: 49:     delay_us(50);
  2281  03E0  3032               	movlw	50
  2282  03E1  120A  118A  23FA  120A  118A  	fcall	_delay_us
  2283  03E6                     l131:	
  2284  03E6  0008               	return
  2285  03E7                     __end_of_LCD_DATO:	
  2286                           
  2287                           	psect	text8
  2288  03AD                     __ptext8:	
  2289 ;; *************** function _LCD_RH *****************
  2290 ;; Defined at:
  2291 ;;		line 61 in file "LCD.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0
  2308 ;;      Totals:         0       0       0       0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    4
  2312 ;; This function calls:
  2313 ;;		_LCD_CONTROL
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _LCD_RH
  2321  03AD                     _LCD_RH:	
  2322  03AD                     l1618:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _LCD_RH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2325                           
  2326  03AD  3002               	movlw	2
  2327  03AE  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2328  03B3                     l143:	
  2329  03B3  0008               	return
  2330  03B4                     __end_of_LCD_RH:	
  2331                           
  2332                           	psect	text9
  2333  03A6                     __ptext9:	
  2334 ;; *************** function _LCD_CLEAR *****************
  2335 ;; Defined at:
  2336 ;;		line 52 in file "LCD.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0
  2353 ;;      Totals:         0       0       0       0       0
  2354 ;;Total ram usage:        0 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    4
  2357 ;; This function calls:
  2358 ;;		_LCD_CONTROL
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _LCD_CLEAR
  2366  03A6                     _LCD_CLEAR:	
  2367  03A6                     l1616:	
  2368                           ;incstack = 0
  2369                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2370                           
  2371                           
  2372                           ;LCD.c: 53:     LCD_CONTROL(0x01);}
  2373  03A6  3001               	movlw	1
  2374  03A7  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2375  03AC                     l134:	
  2376  03AC  0008               	return
  2377  03AD                     __end_of_LCD_CLEAR:	
  2378                           
  2379                           	psect	text10
  2380  047C                     __ptext10:	
  2381 ;; *************** function _INIT_LCD *****************
  2382 ;; Defined at:
  2383 ;;		line 20 in file "LCD.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    4
  2404 ;; This function calls:
  2405 ;;		_LCD_CONTROL
  2406 ;;		_delay_ms
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _INIT_LCD
  2414  047C                     _INIT_LCD:	
  2415  047C                     l1598:	
  2416                           ;incstack = 0
  2417                           ; Regs used in _INIT_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2418                           
  2419                           
  2420                           ;LCD.c: 21:     TRISEbits.TRISE0 = 0;
  2421  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2422  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2423  047E  1009               	bcf	9,0	;volatile
  2424                           
  2425                           ;LCD.c: 22:     TRISEbits.TRISE1 = 0;
  2426  047F  1089               	bcf	9,1	;volatile
  2427  0480                     l1600:	
  2428                           
  2429                           ;LCD.c: 23:     TRISD = 0b00000000;
  2430  0480  0188               	clrf	8	;volatile
  2431  0481                     l1602:	
  2432                           
  2433                           ;LCD.c: 24:     PORTEbits.RE0 = 0;
  2434  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0483  1009               	bcf	9,0	;volatile
  2437  0484                     l1604:	
  2438                           
  2439                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  2440  0484  1089               	bcf	9,1	;volatile
  2441                           
  2442                           ;LCD.c: 26:     PORTD = 0;
  2443  0485  0188               	clrf	8	;volatile
  2444  0486                     l1606:	
  2445                           
  2446                           ;LCD.c: 27:     delay_ms(50);
  2447  0486  3032               	movlw	50
  2448  0487  120A  118A  24A5  120A  118A  	fcall	_delay_ms
  2449  048C                     l1608:	
  2450                           
  2451                           ;LCD.c: 28:     LCD_CONTROL(0x02);
  2452  048C  3002               	movlw	2
  2453  048D  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2454  0492                     l1610:	
  2455                           
  2456                           ;LCD.c: 29:     LCD_CONTROL(0x38);
  2457  0492  3038               	movlw	56
  2458  0493  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2459  0498                     l1612:	
  2460                           
  2461                           ;LCD.c: 30:     LCD_CONTROL(0x0C);
  2462  0498  300C               	movlw	12
  2463  0499  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2464  049E                     l1614:	
  2465                           
  2466                           ;LCD.c: 31:     LCD_CONTROL(0x06);}
  2467  049E  3006               	movlw	6
  2468  049F  120A  118A  23C3  120A  118A  	fcall	_LCD_CONTROL
  2469  04A4                     l122:	
  2470  04A4  0008               	return
  2471  04A5                     __end_of_INIT_LCD:	
  2472                           
  2473                           	psect	text11
  2474  03C3                     __ptext11:	
  2475 ;; *************** function _LCD_CONTROL *****************
  2476 ;; Defined at:
  2477 ;;		line 33 in file "LCD.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  dato            1    wreg     unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  dato            1    0[BANK0 ] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       1       0       0       0
  2493 ;;      Temps:          0       0       0       0       0
  2494 ;;      Totals:         0       1       0       0       0
  2495 ;;Total ram usage:        1 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    3
  2498 ;; This function calls:
  2499 ;;		_LCD_PULSE
  2500 ;;		_delay_ms
  2501 ;; This function is called by:
  2502 ;;		_INIT_LCD
  2503 ;;		_LCD_CLEAR
  2504 ;;		_LCD_RH
  2505 ;;		_LCD_PRINT_WP
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _LCD_CONTROL
  2511  03C3                     _LCD_CONTROL:	
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in _LCD_CONTROL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2515                           ;LCD_CONTROL@dato stored from wreg
  2516  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2517  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2518  03C5  00A0               	movwf	LCD_CONTROL@dato
  2519  03C6                     l1486:	
  2520                           
  2521                           ;LCD.c: 34:     PORTEbits.RE0 = 0;
  2522  03C6  1009               	bcf	9,0	;volatile
  2523  03C7                     l1488:	
  2524                           
  2525                           ;LCD.c: 35:     PORTD = dato;
  2526  03C7  0820               	movf	LCD_CONTROL@dato,w
  2527  03C8  0088               	movwf	8	;volatile
  2528  03C9                     l1490:	
  2529                           
  2530                           ;LCD.c: 36:     LCD_PULSE();
  2531  03C9  120A  118A  23E7  120A  118A  	fcall	_LCD_PULSE
  2532  03CE                     l1492:	
  2533                           
  2534                           ;LCD.c: 37:     delay_ms(2);}
  2535  03CE  3002               	movlw	2
  2536  03CF  120A  118A  24A5  120A  118A  	fcall	_delay_ms
  2537  03D4                     l125:	
  2538  03D4  0008               	return
  2539  03D5                     __end_of_LCD_CONTROL:	
  2540                           
  2541                           	psect	text12
  2542  04A5                     __ptext12:	
  2543 ;; *************** function _delay_ms *****************
  2544 ;; Defined at:
  2545 ;;		line 17 in file "DELAYS.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  dms             1    wreg     unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  dms             1    4[COMMON] unsigned char 
  2550 ;;  j               2    7[COMMON] int 
  2551 ;;  i               2    5[COMMON] int 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, btemp+1
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         5       0       0       0       0
  2563 ;;      Temps:          1       0       0       0       0
  2564 ;;      Totals:         6       0       0       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;;		_INIT_LCD
  2573 ;;		_LCD_CONTROL
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _delay_ms
  2579  04A5                     _delay_ms:	
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  2583                           ;delay_ms@dms stored from wreg
  2584  04A5  00F5               	movwf	delay_ms@dms
  2585  04A6                     l1464:	
  2586                           
  2587                           ;DELAYS.c: 18:     for (int i = 0; i<dms;i++)
  2588  04A6  01F6               	clrf	delay_ms@i
  2589  04A7  01F7               	clrf	delay_ms@i+1
  2590  04A8  2CC4               	goto	l85
  2591  04A9                     l1466:	
  2592                           
  2593                           ;DELAYS.c: 19:     {for (int j = 0; j<255 ;j++){}}}
  2594  04A9  01F8               	clrf	delay_ms@j
  2595  04AA  01F9               	clrf	delay_ms@j+1
  2596  04AB                     l1472:	
  2597  04AB  3001               	movlw	1
  2598  04AC  07F8               	addwf	delay_ms@j,f
  2599  04AD  1803               	skipnc
  2600  04AE  0AF9               	incf	delay_ms@j+1,f
  2601  04AF  3000               	movlw	0
  2602  04B0  07F9               	addwf	delay_ms@j+1,f
  2603  04B1                     l1474:	
  2604  04B1  0879               	movf	delay_ms@j+1,w
  2605  04B2  3A80               	xorlw	128
  2606  04B3  00FF               	movwf	btemp+1
  2607  04B4  3080               	movlw	128
  2608  04B5  027F               	subwf	btemp+1,w
  2609  04B6  1D03               	skipz
  2610  04B7  2CBA               	goto	u945
  2611  04B8  30FF               	movlw	255
  2612  04B9  0278               	subwf	delay_ms@j,w
  2613  04BA                     u945:	
  2614  04BA  1C03               	skipc
  2615  04BB  2CBD               	goto	u941
  2616  04BC  2CBE               	goto	u940
  2617  04BD                     u941:	
  2618  04BD  2CAB               	goto	l1472
  2619  04BE                     u940:	
  2620  04BE                     l1476:	
  2621  04BE  3001               	movlw	1
  2622  04BF  07F6               	addwf	delay_ms@i,f
  2623  04C0  1803               	skipnc
  2624  04C1  0AF7               	incf	delay_ms@i+1,f
  2625  04C2  3000               	movlw	0
  2626  04C3  07F7               	addwf	delay_ms@i+1,f
  2627  04C4                     l85:	
  2628  04C4  0877               	movf	delay_ms@i+1,w
  2629  04C5  3A80               	xorlw	128
  2630  04C6  00F4               	movwf	??_delay_ms
  2631  04C7  3080               	movlw	128
  2632  04C8  0274               	subwf	??_delay_ms,w
  2633  04C9  1D03               	skipz
  2634  04CA  2CCD               	goto	u955
  2635  04CB  0875               	movf	delay_ms@dms,w
  2636  04CC  0276               	subwf	delay_ms@i,w
  2637  04CD                     u955:	
  2638  04CD  1C03               	skipc
  2639  04CE  2CD0               	goto	u951
  2640  04CF  2CD1               	goto	u950
  2641  04D0                     u951:	
  2642  04D0  2CA9               	goto	l1466
  2643  04D1                     u950:	
  2644  04D1                     l90:	
  2645  04D1  0008               	return
  2646  04D2                     __end_of_delay_ms:	
  2647                           
  2648                           	psect	text13
  2649  03E7                     __ptext13:	
  2650 ;; *************** function _LCD_PULSE *****************
  2651 ;; Defined at:
  2652 ;;		line 39 in file "LCD.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    2
  2673 ;; This function calls:
  2674 ;;		_delay_us
  2675 ;; This function is called by:
  2676 ;;		_LCD_CONTROL
  2677 ;;		_LCD_DATO
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _LCD_PULSE
  2683  03E7                     _LCD_PULSE:	
  2684  03E7                     l1458:	
  2685                           ;incstack = 0
  2686                           ; Regs used in _LCD_PULSE: [wreg+status,2+status,0+pclath+cstack]
  2687                           
  2688                           
  2689                           ;LCD.c: 40:     PORTEbits.RE1 = 1;
  2690  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2691  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2692  03E9  1489               	bsf	9,1	;volatile
  2693  03EA                     l1460:	
  2694                           
  2695                           ;LCD.c: 41:     delay_us(5);
  2696  03EA  3005               	movlw	5
  2697  03EB  120A  118A  23FA  120A  118A  	fcall	_delay_us
  2698  03F0                     l1462:	
  2699                           
  2700                           ;LCD.c: 42:     PORTEbits.RE1 = 0;
  2701  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2702  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2703  03F2  1089               	bcf	9,1	;volatile
  2704                           
  2705                           ;LCD.c: 43:     delay_us(5);}
  2706  03F3  3005               	movlw	5
  2707  03F4  120A  118A  23FA  120A  118A  	fcall	_delay_us
  2708  03F9                     l128:	
  2709  03F9  0008               	return
  2710  03FA                     __end_of_LCD_PULSE:	
  2711                           
  2712                           	psect	text14
  2713  03FA                     __ptext14:	
  2714 ;; *************** function _delay_us *****************
  2715 ;; Defined at:
  2716 ;;		line 22 in file "DELAYS.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  ams             1    wreg     unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  ams             1    4[COMMON] unsigned char 
  2721 ;;  j               2    5[COMMON] int 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         3       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:         4       0       0       0       0
  2735 ;;Total ram usage:        4 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_LCD_PULSE
  2742 ;;		_LCD_DATO
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _delay_us
  2748  03FA                     _delay_us:	
  2749                           
  2750                           ;incstack = 0
  2751                           ; Regs used in _delay_us: [wreg+status,2]
  2752                           ;delay_us@ams stored from wreg
  2753  03FA  00F5               	movwf	delay_us@ams
  2754  03FB                     l1454:	
  2755                           
  2756                           ;DELAYS.c: 23:     for (int j = 0; j<ams;j++){
  2757  03FB  01F6               	clrf	delay_us@j
  2758  03FC  01F7               	clrf	delay_us@j+1
  2759  03FD  2C05               	goto	l93
  2760  03FE                     l94:	
  2761  03FE  0000               	nop	;# 
  2762  03FF                     l1456:	
  2763  03FF  3001               	movlw	1
  2764  0400  07F6               	addwf	delay_us@j,f
  2765  0401  1803               	skipnc
  2766  0402  0AF7               	incf	delay_us@j+1,f
  2767  0403  3000               	movlw	0
  2768  0404  07F7               	addwf	delay_us@j+1,f
  2769  0405                     l93:	
  2770  0405  0877               	movf	delay_us@j+1,w
  2771  0406  3A80               	xorlw	128
  2772  0407  00F4               	movwf	??_delay_us
  2773  0408  3080               	movlw	128
  2774  0409  0274               	subwf	??_delay_us,w
  2775  040A  1D03               	skipz
  2776  040B  2C0E               	goto	u935
  2777  040C  0875               	movf	delay_us@ams,w
  2778  040D  0276               	subwf	delay_us@j,w
  2779  040E                     u935:	
  2780  040E  1C03               	skipc
  2781  040F  2C11               	goto	u931
  2782  0410  2C12               	goto	u930
  2783  0411                     u931:	
  2784  0411  2BFE               	goto	l94
  2785  0412                     u930:	
  2786  0412                     l96:	
  2787  0412  0008               	return
  2788  0413                     __end_of_delay_us:	
  2789                           
  2790                           	psect	text15
  2791  03B4                     __ptext15:	
  2792 ;; *************** function _CONFIG_ADC *****************
  2793 ;; Defined at:
  2794 ;;		line 15 in file "ADC.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		None
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _CONFIG_ADC
  2824  03B4                     _CONFIG_ADC:	
  2825  03B4                     l1316:	
  2826                           ;incstack = 0
  2827                           ; Regs used in _CONFIG_ADC: []
  2828                           
  2829                           
  2830                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  2831  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2832  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2833  03B6  139F               	bcf	31,7	;volatile
  2834                           
  2835                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
  2836  03B7  129F               	bcf	31,5	;volatile
  2837                           
  2838                           ;ADC.c: 18:     ADCON1bits.VCFG0 = 0;
  2839  03B8  121F               	bcf	31,4	;volatile
  2840                           
  2841                           ;ADC.c: 19:     ADCON0bits.ADCS1 = 0;
  2842  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2843  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2844  03BB  139F               	bcf	31,7	;volatile
  2845                           
  2846                           ;ADC.c: 20:     ADCON0bits.ADCS0 = 1;
  2847  03BC  171F               	bsf	31,6	;volatile
  2848                           
  2849                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
  2850  03BD  129F               	bcf	31,5	;volatile
  2851                           
  2852                           ;ADC.c: 22:     ADCON0bits.CHS2 = 0;
  2853  03BE  121F               	bcf	31,4	;volatile
  2854                           
  2855                           ;ADC.c: 23:     ADCON0bits.CHS1 = 0;
  2856  03BF  119F               	bcf	31,3	;volatile
  2857                           
  2858                           ;ADC.c: 24:     ADCON0bits.CHS0 = 0;
  2859  03C0  111F               	bcf	31,2	;volatile
  2860                           
  2861                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  2862  03C1  141F               	bsf	31,0	;volatile
  2863  03C2                     l103:	
  2864                           ;ADC.c: 26:     return;
  2865                           
  2866  03C2  0008               	return
  2867  03C3                     __end_of_CONFIG_ADC:	
  2868                           
  2869                           	psect	text16
  2870  04D2                     __ptext16:	
  2871 ;; *************** function _isr *****************
  2872 ;; Defined at:
  2873 ;;		line 30 in file "main.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0
  2889 ;;      Temps:          3       0       0       0       0
  2890 ;;      Totals:         3       0       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		Interrupt level 1
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _isr
  2902  04D2                     _isr:	
  2903  04D2                     i1l1374:	
  2904                           
  2905                           ;main.c: 31:     if (INTCONbits.T0IF == 1){
  2906  04D2  1D0B               	btfss	11,2	;volatile
  2907  04D3  2CD5               	goto	u85_21
  2908  04D4  2CD6               	goto	u85_20
  2909  04D5                     u85_21:	
  2910  04D5  2CFA               	goto	i1l68
  2911  04D6                     u85_20:	
  2912  04D6                     i1l1376:	
  2913                           
  2914                           ;main.c: 32:         if (cambiante == 0){ADCON0bits.CHS0 = 1;}
  2915  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2916  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2917  04D8  0835               	movf	_cambiante,w
  2918  04D9  1D03               	btfss	3,2
  2919  04DA  2CDC               	goto	u86_21
  2920  04DB  2CDD               	goto	u86_20
  2921  04DC                     u86_21:	
  2922  04DC  2CDE               	goto	i1l1380
  2923  04DD                     u86_20:	
  2924  04DD                     i1l1378:	
  2925  04DD  151F               	bsf	31,2	;volatile
  2926  04DE                     i1l1380:	
  2927                           
  2928                           ;main.c: 33:         if (cambiante == 1){ADCON0bits.CHS0 = 0;}
  2929  04DE  0335               	decf	_cambiante,w
  2930  04DF  1D03               	btfss	3,2
  2931  04E0  2CE2               	goto	u87_21
  2932  04E1  2CE3               	goto	u87_20
  2933  04E2                     u87_21:	
  2934  04E2  2CE4               	goto	i1l1384
  2935  04E3                     u87_20:	
  2936  04E3                     i1l1382:	
  2937  04E3  111F               	bcf	31,2	;volatile
  2938  04E4                     i1l1384:	
  2939                           
  2940                           ;main.c: 34:         cambiante++;
  2941  04E4  3001               	movlw	1
  2942  04E5  00F1               	movwf	??_isr
  2943  04E6  0871               	movf	??_isr,w
  2944  04E7  07B5               	addwf	_cambiante,f
  2945  04E8                     i1l1386:	
  2946                           
  2947                           ;main.c: 35:         if (cambiante > 1){cambiante = 0;}
  2948  04E8  3002               	movlw	2
  2949  04E9  0235               	subwf	_cambiante,w
  2950  04EA  1C03               	skipc
  2951  04EB  2CED               	goto	u88_21
  2952  04EC  2CEE               	goto	u88_20
  2953  04ED                     u88_21:	
  2954  04ED  2CEF               	goto	i1l1390
  2955  04EE                     u88_20:	
  2956  04EE                     i1l1388:	
  2957  04EE  01B5               	clrf	_cambiante
  2958  04EF                     i1l1390:	
  2959                           
  2960                           ;main.c: 36:         if (ADCON0bits.GO_DONE == 0){eADC = 1;}
  2961  04EF  189F               	btfsc	31,1	;volatile
  2962  04F0  2CF2               	goto	u89_21
  2963  04F1  2CF3               	goto	u89_20
  2964  04F2                     u89_21:	
  2965  04F2  2CF5               	goto	i1l67
  2966  04F3                     u89_20:	
  2967  04F3                     i1l1392:	
  2968  04F3  01B4               	clrf	_eADC
  2969  04F4  0AB4               	incf	_eADC,f
  2970  04F5                     i1l67:	
  2971                           
  2972                           ;main.c: 37:         INTCONbits.T0IF = 0;
  2973  04F5  110B               	bcf	11,2	;volatile
  2974  04F6                     i1l1394:	
  2975                           
  2976                           ;main.c: 38:         TMR0 = 130;
  2977  04F6  3082               	movlw	130
  2978  04F7  0081               	movwf	1	;volatile
  2979  04F8                     i1l1396:	
  2980                           
  2981                           ;main.c: 39:         eADC = 1;
  2982  04F8  01B4               	clrf	_eADC
  2983  04F9  0AB4               	incf	_eADC,f
  2984  04FA                     i1l68:	
  2985  04FA  0873               	movf	??_isr+2,w
  2986  04FB  008A               	movwf	10
  2987  04FC  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  2988  04FD  0083               	movwf	3
  2989  04FE  0EFE               	swapf	btemp,f
  2990  04FF  0E7E               	swapf	btemp,w
  2991  0500  0009               	retfie
  2992  0501                     __end_of_isr:	
  2993  007E                     btemp	set	126	;btemp
  2994  007E                     wtemp0	set	126
  2995                           
  2996                           	psect	intentry
  2997  0004                     __pintentry:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _isr: [wreg+status,2+status,0]
  3000                           
  3001  0004                     interrupt_function:	
  3002  007E                     saved_w	set	btemp
  3003  0004  00FE               	movwf	btemp
  3004  0005  0E03               	swapf	3,w
  3005  0006  00F2               	movwf	??_isr+1
  3006  0007  080A               	movf	10,w
  3007  0008  00F3               	movwf	??_isr+2
  3008  0009  120A  118A  2CD2   	ljmp	_isr


Data Sizes:
    Strings     144
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      10
    BANK0            80     18      22
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PRINT_WP@frase	PTR unsigned char  size(1) Largest target is 17
		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_PRINT@data	PTR unsigned char  size(1) Largest target is 17
		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_delay_ms
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_PRINT->_LCD_DATO
    _LCD_DATO->_delay_us
    _INIT_LCD->_delay_ms
    _LCD_CONTROL->_delay_ms
    _LCD_PULSE->_delay_us

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VAL
    _VAL->___awdiv
    ___awdiv->___awmod
    _LCD_PRINT_WP->_LCD_CONTROL
    _LCD_PRINT_WP->_LCD_PRINT
    _LCD_RH->_LCD_CONTROL
    _LCD_CLEAR->_LCD_CONTROL
    _INIT_LCD->_LCD_CONTROL

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14075
                                             17 BANK0      1     1      0
                         _CONFIG_ADC
                           _INIT_LCD
                          _LCD_CLEAR
                       _LCD_PRINT_WP
                             _LCD_RH
                                _VAL
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  7     6      1    7509
                                             10 BANK0      7     6      1
                       _LCD_PRINT_WP
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              8 COMMON     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_PRINT_WP                                         7     2      5    5589
                                              1 BANK0      7     2      5
                        _LCD_CONTROL
                          _LCD_PRINT
 ---------------------------------------------------------------------------------
 (3) _LCD_PRINT                                            2     2      0     268
                                              8 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (4) _LCD_DATO                                             1     1      0     167
                                              7 COMMON     1     1      0
                          _LCD_PULSE
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _LCD_RH                                               0     0      0     235
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            0     0      0     235
                        _LCD_CONTROL
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0     371
                        _LCD_CONTROL
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_CONTROL                                          1     1      0     235
                                              0 BANK0      1     1      0
                          _LCD_PULSE
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     6      0     136
                                              3 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _LCD_PULSE                                            0     0      0      68
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     4      0      68
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_ADC
   _INIT_LCD
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _delay_ms
   _LCD_CLEAR
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _LCD_PRINT_WP
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
     _LCD_PRINT
       _LCD_DATO
         _LCD_PULSE
           _delay_us
         _delay_us
   _LCD_RH
     _LCD_CONTROL
       _LCD_PULSE
         _delay_us
       _delay_ms
   _VAL
     _LCD_PRINT_WP
       _LCD_CONTROL
         _LCD_PULSE
           _delay_us
         _delay_ms
       _LCD_PRINT
         _LCD_DATO
           _LCD_PULSE
             _delay_us
           _delay_us
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _delay_ms
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      9       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 07:43:24 2020

                       pc 0002               __CFG_CP$OFF 0000                        l90 04D1  
                      l82 047B                        l93 0405                        l85 04C4  
                      l94 03FE                        l96 0412              ___awdiv@sign 0027  
                      fsr 0004                       l103 03C2                       l122 04A4  
                     l131 03E6                       l140 0457                       l125 03D4  
                     l134 03AC                       l150 0434                       l143 03B3  
                     l128 03F9                       l430 055B                       l159 0761  
                     l417 05C4                       l178 07F4              __CFG_CPD$OFF 0000  
                     _VAL 06A6                       u930 0412                       u931 0411  
                     u940 04BE                       u941 04BD                       u950 04D1  
                     u935 040E                       u951 04D0                       u960 0457  
                     u945 04BA                       u961 0456                       u970 041B  
                     u955 04CD                       u971 041A                       u980 0563  
                     u981 0562                       u990 056E                       u991 056D  
                     _isr 04D2                       fsr0 0004              ___awmod@sign 0021  
            __CFG_LVP$OFF 0000                      ?_VAL 002A                      l1316 03B4  
                    l1500 044B                      l1260 0461                      l1502 0413  
                    l1270 046A                      l1262 0464                      l1600 0480  
                    l1512 0426                      l1504 041B                      l1520 0563  
                    l1280 0471                      l1272 046B                      l1264 0465  
                    l1256 0458                      l1610 0492                      l1602 0481  
                    l1514 042C                      l1506 0421                      l1530 0577  
                    l1522 0568                      l1290 0476                      l1282 0472  
                    l1274 046C                      l1266 0466                      l1258 0460  
                    l1460 03EA                      l1612 0498                      l1604 0484  
                    l1508 0421                      l1540 058D                      l1532 0579  
                    l1524 056A                      l1516 055C                      l1620 06A9  
                    l1292 0477                      l1284 0473                      l1276 046D  
                    l1268 0467                      l1700 062B                      l1454 03FB  
                    l1462 03F0                      l1614 049E                      l1606 0486  
                    l1550 05B0                      l1542 0591                      l1534 057F  
                    l1526 056E                      l1518 055F                      l1630 06EE  
                    l1622 06A9                      l1286 0474                      l1278 0470  
                    l1710 065F                      l1702 063D                      l1456 03FF  
                    l1472 04AB                      l1464 04A6                      l1608 048C  
                    l1616 03A6                      l1480 03D9                      l1544 05A2  
                    l1536 0582                      l1552 05B6                      l1528 0573  
                    l1560 0501                      l1640 0722                      l1632 06F4  
                    l1624 06D3                      l1288 0475                      l1720 0683  
                    l1712 0671                      l1704 0643                      l1458 03E7  
                    l1474 04B1                      l1466 04A9                      l1490 03C9  
                    l1618 03AD                      l1482 03DB                      l1554 05BB  
                    l1546 05A8                      l1538 0589                      l1570 0513  
                    l1562 0504                      l1642 0733                      l1634 0705  
                    l1626 06D8                      l1650 0762                      l1730 0698  
                    l1722 0687                      l1714 0676                      l1706 0648  
                    l1476 04BE                      l1492 03CE                      l1484 03E0  
                    l1556 05C0                      l1548 05A9                      l1580 052C  
                    l1572 0518                      l1564 0508                      l1660 0795  
                    l1652 0767                      l1644 0739                      l1636 070B  
                    l1628 06DD                      l1724 068C                      l1716 067D  
                    l1708 064D                      l1486 03C6                      l1478 03D6  
                    l1494 0438                      l1582 0530                      l1574 051E  
                    l1590 054D                      l1566 050D                      l1670 07CB  
                    l1662 079B                      l1654 076C                      l1646 074A  
                    l1638 071C                      l1726 0690                      l1718 067E  
                    l1488 03C7                      l1496 0439                      l1592 0552  
                    l1584 053A                      l1576 0521                      l1568 050F  
                    l1672 07DD                      l1664 07AD                      l1656 077D  
                    l1648 0750                      l1728 0691                      l1680 05CF  
                    l1498 0445                      l1594 0557                      l1586 0540  
                    l1578 0528                      l1674 07E3                      l1666 07B3  
                    l1658 0783                      l1690 0603                      l1682 05D4  
                    l1588 0547                      l1668 07C5                      l1692 0609  
                    l1684 05D9                      l1676 05C5                      l1598 047C  
                    l1694 060E                      l1686 05EB                      l1678 05CA  
                    l1696 0613                      l1688 05F1                      l1698 0625  
                    ?_isr 0071                      STR_1 0048                      STR_2 006A  
                    STR_3 0059                      STR_4 0026                      STR_5 0015  
                    STR_6 0037                      STR_7 007B                      STR_8 0082  
                    STR_9 0089                      u1000 057F                      u1001 057E  
                    u1020 0591                      u1100 051E                      u1021 0590  
                    u1101 051D                      u1015 0583                      u1040 05A2  
                    u1120 0530                      u1200 070B                      u1041 05A1  
                    u1121 052F                      u1201 070A                      u1130 053A  
                    u1210 0722                      u1035 0592                      u1131 0539  
                    u1115 0522                      u1211 0721                      u1060 05B6  
                    u1300 07E3                      u1220 0739                      u1061 05B5  
                    u1045 059E                      u1301 07E2                      u1221 0738  
                    u1070 05BB                      u1150 054D                      u1230 0750  
                    u1310 067D                      u1071 05BA                      u1055 05AA  
                    u1151 054C                      u1135 0536                      u1231 074F  
                    u1311 067C                      u1160 0552                      u1080 0508  
                    u1240 0767                      u1320 0683                      u1161 0551  
                    u1145 0541                      u1081 0507                      u1241 0766  
                    u1321 0682                      u1090 0513                      u1250 076C  
                    u1170 06D8                      u1330 068C                      u1091 0512  
                    u1251 076B                      u1171 06D7                      u1331 068B  
                    u1260 0783                      u1180 06DD                      u1261 0782  
                    u1181 06DC                      u1270 079B                      u1190 06F4  
                    u1271 079A                      u1191 06F3                      u1280 07B3  
                    u1281 07B2                      u1290 07CB                      u1291 07CA  
                    i1l67 04F5                      i1l68 04FA        __size_of_LCD_CLEAR 0007  
                    _TMR0 0001                      _eADC 0034              __CFG_WRT$OFF 0000  
          ??_LCD_PRINT_WP 0026        __size_of_LCD_PRINT 0023        __size_of_LCD_PULSE 0013  
                    _main 05C5                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000       __size_of_CONFIG_ADC 000F                     ??_VAL 002B  
        __end_of_LCD_DATO 03E7                     ??_isr 0071          __end_of_INIT_LCD 04A5  
                   ?_main 0071           __end_of___awdiv 05C5                     STR_10 0090  
                   STR_11 0097                     STR_12 009E                     STR_13 007B  
                   STR_14 0082                     STR_15 0089                     STR_16 0090  
                   STR_17 0097             __CFG_WDTE$OFF 0000                     STR_18 009E  
         __end_of___awmod 055C             LCD_PRINT@data 0020                     _ANSEL 0188  
         ___awdiv@divisor 0022           ___awdiv@counter 0026             LCD_PRINT_WP@x 0021  
           LCD_PRINT_WP@y 0023                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     u85_20 04D6                     u85_21 04D5  
                   u86_20 04DD                     u86_21 04DC                     u87_20 04E3  
                   u87_21 04E2                     u88_20 04EE                     u88_21 04ED  
                   u89_20 04F3                     u89_21 04F2            __CFG_FCMEN$OFF 0000  
                   _setup 0458            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07F5              __end_of_main 06A6         __end_of_LCD_CLEAR 03AD  
       __end_of_LCD_PRINT 0458                    ??_main 0031         __end_of_LCD_PULSE 03FA  
                  _ADCAN0 0033                    _ADCAN1 0032                    _CADENA 007A  
                  _ADRESH 001E          ___awdiv@dividend 0024                    ?_setup 0071  
                  _ANSELH 0189                    _LCD_RH 03AD                    i1l1380 04DE  
                  i1l1390 04EF                    i1l1382 04E3                    i1l1374 04D2  
                  i1l1392 04F3                    i1l1384 04E4                    i1l1376 04D6  
                  i1l1394 04F6                    i1l1386 04E8                    i1l1378 04DD  
                  i1l1396 04F8                    i1l1388 04EE      __size_of_LCD_CONTROL 0012  
        __end_of_delay_ms 04D2          __end_of_delay_us 0413            __CFG_PWRTE$OFF 0000  
               ??___awdiv 0079                 ??___awmod 0078          ___awdiv@quotient 0028  
         ___awmod@divisor 0074           ___awmod@counter 0020      __end_of_LCD_PRINT_WP 0435  
            ??_CONFIG_ADC 0074                    saved_w 007E                 ?_LCD_DATO 0071  
 __end_of__initialization 07FC                 ?_INIT_LCD 0071            __pcstackCOMMON 0071  
      __end_of_CONFIG_ADC 03C3             __end_of_setup 047C            _OPTION_REGbits 0081  
                 ??_setup 0074                __pbssBANK0 0032                   ?_LCD_RH 0071  
              ??_LCD_DATO 0078                ??_INIT_LCD 007A                __pmaintext 05C5  
               VAL@column 002A                __pintentry 0004                 VAL@result 002F  
               ?_delay_ms 0071                 ?_delay_us 0071                __stringtab 000F  
         __size_of_LCD_RH 0007               VAL@unidades 0030     __size_of_LCD_PRINT_WP 0022  
                 ___awdiv 055C                   ___awmod 0501                   __ptext1 0458  
                 __ptext2 06A6                   __ptext3 0501                   __ptext4 055C  
                 __ptext5 0413                   __ptext6 0435                   __ptext7 03D5  
                 __ptext8 03AD                   __ptext9 03A6              __size_of_VAL 014F  
            __size_of_isr 002F                 _LCD_CLEAR 03A6          ___awmod@dividend 0076  
               _LCD_PRINT 0435                ??_delay_ms 0074                 _LCD_PULSE 03E7  
              ??_delay_us 0074      end_of_initialization 07FC              _LCD_PRINT_WP 0413  
       LCD_PRINT_WP@frase 0025                 _PORTEbits 0009                ?_LCD_CLEAR 0071  
              ?_LCD_PRINT 0071                ?_LCD_PULSE 0071                 _TRISEbits 0089  
           ??_LCD_CONTROL 007A            __end_of_LCD_RH 03B4         __size_of_LCD_DATO 0012  
       __size_of_INIT_LCD 0029       start_initialization 07F5               __end_of_VAL 07F5  
             __end_of_isr 0501                  ??_LCD_RH 007A  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __end_of_LCD_CONTROL 03D5               ??_LCD_CLEAR 007A               __pbssCOMMON 007A  
               ___latbits 0002               ??_LCD_PRINT 0079               ??_LCD_PULSE 0078  
           __pcstackBANK0 0020         __size_of_delay_ms 002D         __size_of_delay_us 0019  
               _cambiante 0035                  ?___awdiv 0022                  ?___awmod 0074  
               __pstrings 000F            __size_of_setup 0024                  _LCD_DATO 03D5  
             _LCD_CONTROL 03C3         interrupt_function 0004                 delay_ms@i 0076  
               delay_ms@j 0078                  _INIT_LCD 047C                 delay_us@j 0076  
              _ADCON0bits 001F               __stringbase 0014                _ADCON1bits 009F  
         LCD_DATO@comando 0078      LCD_PRINT_WP@location 0027          __size_of___awdiv 0069  
        __size_of___awmod 005B        __end_of__stringtab 0015                _CONFIG_ADC 03B4  
                _delay_ms 04A5                  _delay_us 03FA                  __ptext10 047C  
                __ptext11 03C3                  __ptext12 04A5                  __ptext13 03E7  
                __ptext14 03FA                  __ptext15 03B4                  __ptext16 04D2  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 00E1               delay_ms@dms 0075  
             delay_us@ams 0075                _INTCONbits 000B                  intlevel1 0000  
         LCD_CONTROL@dato 0020                 stringcode 000F               ?_CONFIG_ADC 0071  
                stringdir 000F                  stringtab 000F              ?_LCD_CONTROL 0071  
           ?_LCD_PRINT_WP 0021  
